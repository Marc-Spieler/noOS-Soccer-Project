
Motor Controller.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00009a0c  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00089a0c  00089a0c  00019a0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000b50  20070000  00089a14  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000004c8  20070b50  0008a564  00020b50  2**2
                  ALLOC
  4 .stack        00002000  20071018  0008aa2c  00020b50  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020b50  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020b79  2**0
                  CONTENTS, READONLY
  7 .debug_info   00020713  00000000  00000000  00020bd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000040ea  00000000  00000000  000412e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000a17e  00000000  00000000  000453cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000011c0  00000000  00000000  0004f54d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000010e8  00000000  00000000  0005070d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001c7de  00000000  00000000  000517f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00016abf  00000000  00000000  0006dfd3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0006a8d3  00000000  00000000  00084a92  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00005818  00000000  00000000  000ef368  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	18 30 07 20 4d 40 08 00 45 40 08 00 45 40 08 00     .0. M@..E@..E@..
   80010:	45 40 08 00 45 40 08 00 45 40 08 00 00 00 00 00     E@..E@..E@......
	...
   8002c:	45 40 08 00 45 40 08 00 00 00 00 00 45 40 08 00     E@..E@......E@..
   8003c:	bd 2f 08 00 45 40 08 00 45 40 08 00 45 40 08 00     ./..E@..E@..E@..
   8004c:	45 40 08 00 45 40 08 00 45 40 08 00 45 40 08 00     E@..E@..E@..E@..
   8005c:	45 40 08 00 45 40 08 00 45 40 08 00 00 00 00 00     E@..E@..E@......
   8006c:	45 40 08 00 45 40 08 00 45 40 08 00 45 40 08 00     E@..E@..E@..E@..
	...
   80084:	45 40 08 00 45 40 08 00 45 40 08 00 45 40 08 00     E@..E@..E@..E@..
   80094:	45 40 08 00 ad 11 08 00 45 40 08 00 45 40 08 00     E@......E@..E@..
   800a4:	00 00 00 00 45 40 08 00 45 40 08 00 ad 2c 08 00     ....E@..E@...,..
   800b4:	45 40 08 00 45 40 08 00 45 40 08 00 45 40 08 00     E@..E@..E@..E@..
   800c4:	45 40 08 00 45 40 08 00 45 40 08 00 45 40 08 00     E@..E@..E@..E@..
   800d4:	45 40 08 00 45 40 08 00 cd 0c 08 00 45 40 08 00     E@..E@......E@..
   800e4:	45 40 08 00 45 40 08 00 45 40 08 00 45 40 08 00     E@..E@..E@..E@..

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070b50 	.word	0x20070b50
   80110:	00000000 	.word	0x00000000
   80114:	00089a14 	.word	0x00089a14

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00089a14 	.word	0x00089a14
   80154:	20070b54 	.word	0x20070b54
   80158:	00089a14 	.word	0x00089a14
   8015c:	00000000 	.word	0x00000000

00080160 <sd_mmc_init>:

//-------------------------------------------------------------------
//--------------------- PUBLIC FUNCTIONS ----------------------------

void sd_mmc_init(void)
{
   80160:	b580      	push	{r7, lr}
   80162:	b082      	sub	sp, #8
   80164:	af00      	add	r7, sp, #0
# define SD_MMC_ENABLE_WP_PIN(slot, unused) \
	pmc_enable_periph_clk(SD_MMC_##slot##_WP_PIO_ID);
	MREPEAT(SD_MMC_MEM_CNT, SD_MMC_ENABLE_WP_PIN, ~)
# undef SD_MMC_ENABLE_WP_PIN
#endif
	for (uint8_t slot = 0; slot < SD_MMC_MEM_CNT; slot++) {
   80166:	2300      	movs	r3, #0
   80168:	71fb      	strb	r3, [r7, #7]
   8016a:	e009      	b.n	80180 <sd_mmc_init+0x20>
		sd_mmc_cards[slot].state = SD_MMC_CARD_STATE_NO_CARD;
   8016c:	79fb      	ldrb	r3, [r7, #7]
   8016e:	4a0a      	ldr	r2, [pc, #40]	; (80198 <sd_mmc_init+0x38>)
   80170:	015b      	lsls	r3, r3, #5
   80172:	4413      	add	r3, r2
   80174:	330a      	adds	r3, #10
   80176:	2204      	movs	r2, #4
   80178:	701a      	strb	r2, [r3, #0]
	for (uint8_t slot = 0; slot < SD_MMC_MEM_CNT; slot++) {
   8017a:	79fb      	ldrb	r3, [r7, #7]
   8017c:	3301      	adds	r3, #1
   8017e:	71fb      	strb	r3, [r7, #7]
   80180:	79fb      	ldrb	r3, [r7, #7]
   80182:	2b00      	cmp	r3, #0
   80184:	d0f2      	beq.n	8016c <sd_mmc_init+0xc>
	}
	sd_mmc_slot_sel = 0xFF; // No slot configurated
   80186:	4b05      	ldr	r3, [pc, #20]	; (8019c <sd_mmc_init+0x3c>)
   80188:	22ff      	movs	r2, #255	; 0xff
   8018a:	701a      	strb	r2, [r3, #0]
	driver_init();
   8018c:	4b04      	ldr	r3, [pc, #16]	; (801a0 <sd_mmc_init+0x40>)
   8018e:	4798      	blx	r3
}
   80190:	bf00      	nop
   80192:	3708      	adds	r7, #8
   80194:	46bd      	mov	sp, r7
   80196:	bd80      	pop	{r7, pc}
   80198:	20070b6c 	.word	0x20070b6c
   8019c:	20070b8c 	.word	0x20070b8c
   801a0:	000801ed 	.word	0x000801ed

000801a4 <usart_spi_enable>:
/*! \brief Enable the USART for the specified USART in SPI mode.
 *
 * \param p_usart Base address of the USART instance.
 */
void usart_spi_enable(Usart *p_usart)
{
   801a4:	b580      	push	{r7, lr}
   801a6:	b082      	sub	sp, #8
   801a8:	af00      	add	r7, sp, #0
   801aa:	6078      	str	r0, [r7, #4]
	usart_enable_tx(p_usart);
   801ac:	6878      	ldr	r0, [r7, #4]
   801ae:	4b04      	ldr	r3, [pc, #16]	; (801c0 <usart_spi_enable+0x1c>)
   801b0:	4798      	blx	r3
	usart_enable_rx(p_usart);
   801b2:	6878      	ldr	r0, [r7, #4]
   801b4:	4b03      	ldr	r3, [pc, #12]	; (801c4 <usart_spi_enable+0x20>)
   801b6:	4798      	blx	r3
}
   801b8:	bf00      	nop
   801ba:	3708      	adds	r7, #8
   801bc:	46bd      	mov	sp, r7
   801be:	bd80      	pop	{r7, pc}
   801c0:	00080929 	.word	0x00080929
   801c4:	00080971 	.word	0x00080971

000801c8 <usart_spi_disable>:
 *
 * \param p_usart Base address of the USART instance.
 *
 */
void usart_spi_disable(Usart *p_usart)
{
   801c8:	b580      	push	{r7, lr}
   801ca:	b082      	sub	sp, #8
   801cc:	af00      	add	r7, sp, #0
   801ce:	6078      	str	r0, [r7, #4]
	usart_disable_tx(p_usart);
   801d0:	6878      	ldr	r0, [r7, #4]
   801d2:	4b04      	ldr	r3, [pc, #16]	; (801e4 <usart_spi_disable+0x1c>)
   801d4:	4798      	blx	r3
	usart_disable_rx(p_usart);
   801d6:	6878      	ldr	r0, [r7, #4]
   801d8:	4b03      	ldr	r3, [pc, #12]	; (801e8 <usart_spi_disable+0x20>)
   801da:	4798      	blx	r3
}
   801dc:	bf00      	nop
   801de:	3708      	adds	r7, #8
   801e0:	46bd      	mov	sp, r7
   801e2:	bd80      	pop	{r7, pc}
   801e4:	00080941 	.word	0x00080941
   801e8:	00080989 	.word	0x00080989

000801ec <hsmci_init>:

//-------------------------------------------------------------------
//--------------------- PUBLIC FUNCTIONS ----------------------------

void hsmci_init(void)
{
   801ec:	b580      	push	{r7, lr}
   801ee:	af00      	add	r7, sp, #0
	pmc_enable_periph_clk(ID_HSMCI);
   801f0:	2015      	movs	r0, #21
   801f2:	4b0e      	ldr	r3, [pc, #56]	; (8022c <hsmci_init+0x40>)
   801f4:	4798      	blx	r3
#ifdef HSMCI_SR_DMADONE
	// Enable clock for DMA controller
	pmc_enable_periph_clk(ID_DMAC);
   801f6:	2027      	movs	r0, #39	; 0x27
   801f8:	4b0c      	ldr	r3, [pc, #48]	; (8022c <hsmci_init+0x40>)
   801fa:	4798      	blx	r3
	pmc_enable_periph_clk(ID_XDMAC);
#endif
#endif

	// Set the Data Timeout Register to 2 Mega Cycles
	HSMCI->HSMCI_DTOR = HSMCI_DTOR_DTOMUL_1048576 | HSMCI_DTOR_DTOCYC(2);
   801fc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   80200:	2272      	movs	r2, #114	; 0x72
   80202:	609a      	str	r2, [r3, #8]
	// Set Completion Signal Timeout to 2 Mega Cycles
	HSMCI->HSMCI_CSTOR = HSMCI_CSTOR_CSTOMUL_1048576 | HSMCI_CSTOR_CSTOCYC(2);
   80204:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   80208:	2272      	movs	r2, #114	; 0x72
   8020a:	61da      	str	r2, [r3, #28]
	// Set Configuration Register
	HSMCI->HSMCI_CFG = HSMCI_CFG_FIFOMODE | HSMCI_CFG_FERRCTRL;
   8020c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   80210:	2211      	movs	r2, #17
   80212:	655a      	str	r2, [r3, #84]	; 0x54
	// Set power saving to maximum value
	HSMCI->HSMCI_MR = HSMCI_MR_PWSDIV_Msk;
   80214:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   80218:	f44f 62e0 	mov.w	r2, #1792	; 0x700
   8021c:	605a      	str	r2, [r3, #4]

	// Enable the HSMCI and the Power Saving
	HSMCI->HSMCI_CR = HSMCI_CR_MCIEN | HSMCI_CR_PWSEN;
   8021e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   80222:	2205      	movs	r2, #5
   80224:	601a      	str	r2, [r3, #0]
}
   80226:	bf00      	nop
   80228:	bd80      	pop	{r7, pc}
   8022a:	bf00      	nop
   8022c:	00083999 	.word	0x00083999

00080230 <pdc_tx_init>:
   80230:	b480      	push	{r7}
   80232:	b085      	sub	sp, #20
   80234:	af00      	add	r7, sp, #0
   80236:	60f8      	str	r0, [r7, #12]
   80238:	60b9      	str	r1, [r7, #8]
   8023a:	607a      	str	r2, [r7, #4]
   8023c:	68bb      	ldr	r3, [r7, #8]
   8023e:	2b00      	cmp	r3, #0
   80240:	d007      	beq.n	80252 <pdc_tx_init+0x22>
   80242:	68bb      	ldr	r3, [r7, #8]
   80244:	681a      	ldr	r2, [r3, #0]
   80246:	68fb      	ldr	r3, [r7, #12]
   80248:	609a      	str	r2, [r3, #8]
   8024a:	68bb      	ldr	r3, [r7, #8]
   8024c:	685a      	ldr	r2, [r3, #4]
   8024e:	68fb      	ldr	r3, [r7, #12]
   80250:	60da      	str	r2, [r3, #12]
   80252:	687b      	ldr	r3, [r7, #4]
   80254:	2b00      	cmp	r3, #0
   80256:	d007      	beq.n	80268 <pdc_tx_init+0x38>
   80258:	687b      	ldr	r3, [r7, #4]
   8025a:	681a      	ldr	r2, [r3, #0]
   8025c:	68fb      	ldr	r3, [r7, #12]
   8025e:	619a      	str	r2, [r3, #24]
   80260:	687b      	ldr	r3, [r7, #4]
   80262:	685a      	ldr	r2, [r3, #4]
   80264:	68fb      	ldr	r3, [r7, #12]
   80266:	61da      	str	r2, [r3, #28]
   80268:	bf00      	nop
   8026a:	3714      	adds	r7, #20
   8026c:	46bd      	mov	sp, r7
   8026e:	bc80      	pop	{r7}
   80270:	4770      	bx	lr

00080272 <pdc_rx_init>:
   80272:	b480      	push	{r7}
   80274:	b085      	sub	sp, #20
   80276:	af00      	add	r7, sp, #0
   80278:	60f8      	str	r0, [r7, #12]
   8027a:	60b9      	str	r1, [r7, #8]
   8027c:	607a      	str	r2, [r7, #4]
   8027e:	68bb      	ldr	r3, [r7, #8]
   80280:	2b00      	cmp	r3, #0
   80282:	d007      	beq.n	80294 <pdc_rx_init+0x22>
   80284:	68bb      	ldr	r3, [r7, #8]
   80286:	681a      	ldr	r2, [r3, #0]
   80288:	68fb      	ldr	r3, [r7, #12]
   8028a:	601a      	str	r2, [r3, #0]
   8028c:	68bb      	ldr	r3, [r7, #8]
   8028e:	685a      	ldr	r2, [r3, #4]
   80290:	68fb      	ldr	r3, [r7, #12]
   80292:	605a      	str	r2, [r3, #4]
   80294:	687b      	ldr	r3, [r7, #4]
   80296:	2b00      	cmp	r3, #0
   80298:	d007      	beq.n	802aa <pdc_rx_init+0x38>
   8029a:	687b      	ldr	r3, [r7, #4]
   8029c:	681a      	ldr	r2, [r3, #0]
   8029e:	68fb      	ldr	r3, [r7, #12]
   802a0:	611a      	str	r2, [r3, #16]
   802a2:	687b      	ldr	r3, [r7, #4]
   802a4:	685a      	ldr	r2, [r3, #4]
   802a6:	68fb      	ldr	r3, [r7, #12]
   802a8:	615a      	str	r2, [r3, #20]
   802aa:	bf00      	nop
   802ac:	3714      	adds	r7, #20
   802ae:	46bd      	mov	sp, r7
   802b0:	bc80      	pop	{r7}
   802b2:	4770      	bx	lr

000802b4 <pdc_enable_transfer>:
   802b4:	b480      	push	{r7}
   802b6:	b083      	sub	sp, #12
   802b8:	af00      	add	r7, sp, #0
   802ba:	6078      	str	r0, [r7, #4]
   802bc:	6039      	str	r1, [r7, #0]
   802be:	683a      	ldr	r2, [r7, #0]
   802c0:	f240 1301 	movw	r3, #257	; 0x101
   802c4:	4013      	ands	r3, r2
   802c6:	687a      	ldr	r2, [r7, #4]
   802c8:	6213      	str	r3, [r2, #32]
   802ca:	bf00      	nop
   802cc:	370c      	adds	r7, #12
   802ce:	46bd      	mov	sp, r7
   802d0:	bc80      	pop	{r7}
   802d2:	4770      	bx	lr

000802d4 <pdc_disable_transfer>:
   802d4:	b480      	push	{r7}
   802d6:	b083      	sub	sp, #12
   802d8:	af00      	add	r7, sp, #0
   802da:	6078      	str	r0, [r7, #4]
   802dc:	6039      	str	r1, [r7, #0]
   802de:	683a      	ldr	r2, [r7, #0]
   802e0:	f240 2302 	movw	r3, #514	; 0x202
   802e4:	4013      	ands	r3, r2
   802e6:	687a      	ldr	r2, [r7, #4]
   802e8:	6213      	str	r3, [r2, #32]
   802ea:	bf00      	nop
   802ec:	370c      	adds	r7, #12
   802ee:	46bd      	mov	sp, r7
   802f0:	bc80      	pop	{r7}
   802f2:	4770      	bx	lr

000802f4 <pwm_clocks_generate>:
   802f4:	b4b0      	push	{r4, r5, r7}
   802f6:	b091      	sub	sp, #68	; 0x44
   802f8:	af00      	add	r7, sp, #0
   802fa:	6078      	str	r0, [r7, #4]
   802fc:	6039      	str	r1, [r7, #0]
   802fe:	4b1b      	ldr	r3, [pc, #108]	; (8036c <pwm_clocks_generate+0x78>)
   80300:	f107 040c 	add.w	r4, r7, #12
   80304:	461d      	mov	r5, r3
   80306:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80308:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   8030a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   8030c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   8030e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   80312:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   80316:	2300      	movs	r3, #0
   80318:	63fb      	str	r3, [r7, #60]	; 0x3c
   8031a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   8031c:	009b      	lsls	r3, r3, #2
   8031e:	f107 0240 	add.w	r2, r7, #64	; 0x40
   80322:	4413      	add	r3, r2
   80324:	f853 3c34 	ldr.w	r3, [r3, #-52]
   80328:	683a      	ldr	r2, [r7, #0]
   8032a:	fbb2 f2f3 	udiv	r2, r2, r3
   8032e:	687b      	ldr	r3, [r7, #4]
   80330:	fbb2 f3f3 	udiv	r3, r2, r3
   80334:	63bb      	str	r3, [r7, #56]	; 0x38
   80336:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   80338:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   8033c:	d906      	bls.n	8034c <pwm_clocks_generate+0x58>
   8033e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   80340:	3301      	adds	r3, #1
   80342:	63fb      	str	r3, [r7, #60]	; 0x3c
   80344:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   80346:	2b0a      	cmp	r3, #10
   80348:	d9e7      	bls.n	8031a <pwm_clocks_generate+0x26>
   8034a:	e000      	b.n	8034e <pwm_clocks_generate+0x5a>
   8034c:	bf00      	nop
   8034e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   80350:	2b0a      	cmp	r3, #10
   80352:	d804      	bhi.n	8035e <pwm_clocks_generate+0x6a>
   80354:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   80356:	021a      	lsls	r2, r3, #8
   80358:	6bbb      	ldr	r3, [r7, #56]	; 0x38
   8035a:	4313      	orrs	r3, r2
   8035c:	e001      	b.n	80362 <pwm_clocks_generate+0x6e>
   8035e:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80362:	4618      	mov	r0, r3
   80364:	3744      	adds	r7, #68	; 0x44
   80366:	46bd      	mov	sp, r7
   80368:	bcb0      	pop	{r4, r5, r7}
   8036a:	4770      	bx	lr
   8036c:	0008960c 	.word	0x0008960c

00080370 <pwm_init>:
   80370:	b580      	push	{r7, lr}
   80372:	b084      	sub	sp, #16
   80374:	af00      	add	r7, sp, #0
   80376:	6078      	str	r0, [r7, #4]
   80378:	6039      	str	r1, [r7, #0]
   8037a:	2300      	movs	r3, #0
   8037c:	60fb      	str	r3, [r7, #12]
   8037e:	683b      	ldr	r3, [r7, #0]
   80380:	681b      	ldr	r3, [r3, #0]
   80382:	2b00      	cmp	r3, #0
   80384:	d011      	beq.n	803aa <pwm_init+0x3a>
   80386:	683b      	ldr	r3, [r7, #0]
   80388:	681a      	ldr	r2, [r3, #0]
   8038a:	683b      	ldr	r3, [r7, #0]
   8038c:	689b      	ldr	r3, [r3, #8]
   8038e:	4619      	mov	r1, r3
   80390:	4610      	mov	r0, r2
   80392:	4b16      	ldr	r3, [pc, #88]	; (803ec <pwm_init+0x7c>)
   80394:	4798      	blx	r3
   80396:	60b8      	str	r0, [r7, #8]
   80398:	68bb      	ldr	r3, [r7, #8]
   8039a:	f64f 72ff 	movw	r2, #65535	; 0xffff
   8039e:	4293      	cmp	r3, r2
   803a0:	d101      	bne.n	803a6 <pwm_init+0x36>
   803a2:	68bb      	ldr	r3, [r7, #8]
   803a4:	e01e      	b.n	803e4 <pwm_init+0x74>
   803a6:	68bb      	ldr	r3, [r7, #8]
   803a8:	60fb      	str	r3, [r7, #12]
   803aa:	683b      	ldr	r3, [r7, #0]
   803ac:	685b      	ldr	r3, [r3, #4]
   803ae:	2b00      	cmp	r3, #0
   803b0:	d014      	beq.n	803dc <pwm_init+0x6c>
   803b2:	683b      	ldr	r3, [r7, #0]
   803b4:	685a      	ldr	r2, [r3, #4]
   803b6:	683b      	ldr	r3, [r7, #0]
   803b8:	689b      	ldr	r3, [r3, #8]
   803ba:	4619      	mov	r1, r3
   803bc:	4610      	mov	r0, r2
   803be:	4b0b      	ldr	r3, [pc, #44]	; (803ec <pwm_init+0x7c>)
   803c0:	4798      	blx	r3
   803c2:	60b8      	str	r0, [r7, #8]
   803c4:	68bb      	ldr	r3, [r7, #8]
   803c6:	f64f 72ff 	movw	r2, #65535	; 0xffff
   803ca:	4293      	cmp	r3, r2
   803cc:	d101      	bne.n	803d2 <pwm_init+0x62>
   803ce:	68bb      	ldr	r3, [r7, #8]
   803d0:	e008      	b.n	803e4 <pwm_init+0x74>
   803d2:	68bb      	ldr	r3, [r7, #8]
   803d4:	041b      	lsls	r3, r3, #16
   803d6:	68fa      	ldr	r2, [r7, #12]
   803d8:	4313      	orrs	r3, r2
   803da:	60fb      	str	r3, [r7, #12]
   803dc:	687b      	ldr	r3, [r7, #4]
   803de:	68fa      	ldr	r2, [r7, #12]
   803e0:	601a      	str	r2, [r3, #0]
   803e2:	2300      	movs	r3, #0
   803e4:	4618      	mov	r0, r3
   803e6:	3710      	adds	r7, #16
   803e8:	46bd      	mov	sp, r7
   803ea:	bd80      	pop	{r7, pc}
   803ec:	000802f5 	.word	0x000802f5

000803f0 <pwm_channel_init>:
   803f0:	b480      	push	{r7}
   803f2:	b087      	sub	sp, #28
   803f4:	af00      	add	r7, sp, #0
   803f6:	6078      	str	r0, [r7, #4]
   803f8:	6039      	str	r1, [r7, #0]
   803fa:	2300      	movs	r3, #0
   803fc:	617b      	str	r3, [r7, #20]
   803fe:	683b      	ldr	r3, [r7, #0]
   80400:	681b      	ldr	r3, [r3, #0]
   80402:	613b      	str	r3, [r7, #16]
   80404:	683b      	ldr	r3, [r7, #0]
   80406:	685b      	ldr	r3, [r3, #4]
   80408:	f003 030f 	and.w	r3, r3, #15
   8040c:	683a      	ldr	r2, [r7, #0]
   8040e:	7a92      	ldrb	r2, [r2, #10]
   80410:	0252      	lsls	r2, r2, #9
   80412:	4313      	orrs	r3, r2
   80414:	683a      	ldr	r2, [r7, #0]
   80416:	8a92      	ldrh	r2, [r2, #20]
   80418:	4313      	orrs	r3, r2
   8041a:	683a      	ldr	r2, [r7, #0]
   8041c:	7d92      	ldrb	r2, [r2, #22]
   8041e:	0412      	lsls	r2, r2, #16
   80420:	4313      	orrs	r3, r2
   80422:	683a      	ldr	r2, [r7, #0]
   80424:	7dd2      	ldrb	r2, [r2, #23]
   80426:	0452      	lsls	r2, r2, #17
   80428:	4313      	orrs	r3, r2
   8042a:	683a      	ldr	r2, [r7, #0]
   8042c:	7e12      	ldrb	r2, [r2, #24]
   8042e:	0492      	lsls	r2, r2, #18
   80430:	4313      	orrs	r3, r2
   80432:	683a      	ldr	r2, [r7, #0]
   80434:	8912      	ldrh	r2, [r2, #8]
   80436:	4313      	orrs	r3, r2
   80438:	617b      	str	r3, [r7, #20]
   8043a:	687a      	ldr	r2, [r7, #4]
   8043c:	693b      	ldr	r3, [r7, #16]
   8043e:	3310      	adds	r3, #16
   80440:	015b      	lsls	r3, r3, #5
   80442:	4413      	add	r3, r2
   80444:	697a      	ldr	r2, [r7, #20]
   80446:	601a      	str	r2, [r3, #0]
   80448:	683b      	ldr	r3, [r7, #0]
   8044a:	68da      	ldr	r2, [r3, #12]
   8044c:	6879      	ldr	r1, [r7, #4]
   8044e:	693b      	ldr	r3, [r7, #16]
   80450:	3310      	adds	r3, #16
   80452:	015b      	lsls	r3, r3, #5
   80454:	440b      	add	r3, r1
   80456:	3304      	adds	r3, #4
   80458:	601a      	str	r2, [r3, #0]
   8045a:	683b      	ldr	r3, [r7, #0]
   8045c:	691a      	ldr	r2, [r3, #16]
   8045e:	6879      	ldr	r1, [r7, #4]
   80460:	693b      	ldr	r3, [r7, #16]
   80462:	015b      	lsls	r3, r3, #5
   80464:	440b      	add	r3, r1
   80466:	f503 7303 	add.w	r3, r3, #524	; 0x20c
   8046a:	601a      	str	r2, [r3, #0]
   8046c:	683b      	ldr	r3, [r7, #0]
   8046e:	7d9b      	ldrb	r3, [r3, #22]
   80470:	2b00      	cmp	r3, #0
   80472:	d00d      	beq.n	80490 <pwm_channel_init+0xa0>
   80474:	683b      	ldr	r3, [r7, #0]
   80476:	8b9b      	ldrh	r3, [r3, #28]
   80478:	041b      	lsls	r3, r3, #16
   8047a:	461a      	mov	r2, r3
   8047c:	683b      	ldr	r3, [r7, #0]
   8047e:	8b5b      	ldrh	r3, [r3, #26]
   80480:	431a      	orrs	r2, r3
   80482:	6879      	ldr	r1, [r7, #4]
   80484:	693b      	ldr	r3, [r7, #16]
   80486:	015b      	lsls	r3, r3, #5
   80488:	440b      	add	r3, r1
   8048a:	f503 7306 	add.w	r3, r3, #536	; 0x218
   8048e:	601a      	str	r2, [r3, #0]
   80490:	687b      	ldr	r3, [r7, #4]
   80492:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   80494:	f04f 1101 	mov.w	r1, #65537	; 0x10001
   80498:	693b      	ldr	r3, [r7, #16]
   8049a:	fa01 f303 	lsl.w	r3, r1, r3
   8049e:	43db      	mvns	r3, r3
   804a0:	4013      	ands	r3, r2
   804a2:	617b      	str	r3, [r7, #20]
   804a4:	683b      	ldr	r3, [r7, #0]
   804a6:	7f9b      	ldrb	r3, [r3, #30]
   804a8:	461a      	mov	r2, r3
   804aa:	693b      	ldr	r3, [r7, #16]
   804ac:	409a      	lsls	r2, r3
   804ae:	683b      	ldr	r3, [r7, #0]
   804b0:	7fdb      	ldrb	r3, [r3, #31]
   804b2:	4619      	mov	r1, r3
   804b4:	693b      	ldr	r3, [r7, #16]
   804b6:	fa01 f303 	lsl.w	r3, r1, r3
   804ba:	041b      	lsls	r3, r3, #16
   804bc:	4313      	orrs	r3, r2
   804be:	461a      	mov	r2, r3
   804c0:	697b      	ldr	r3, [r7, #20]
   804c2:	4313      	orrs	r3, r2
   804c4:	617b      	str	r3, [r7, #20]
   804c6:	687b      	ldr	r3, [r7, #4]
   804c8:	697a      	ldr	r2, [r7, #20]
   804ca:	649a      	str	r2, [r3, #72]	; 0x48
   804cc:	687b      	ldr	r3, [r7, #4]
   804ce:	6c5a      	ldr	r2, [r3, #68]	; 0x44
   804d0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
   804d4:	693b      	ldr	r3, [r7, #16]
   804d6:	fa01 f303 	lsl.w	r3, r1, r3
   804da:	43db      	mvns	r3, r3
   804dc:	4013      	ands	r3, r2
   804de:	617b      	str	r3, [r7, #20]
   804e0:	683b      	ldr	r3, [r7, #0]
   804e2:	f893 3020 	ldrb.w	r3, [r3, #32]
   804e6:	461a      	mov	r2, r3
   804e8:	693b      	ldr	r3, [r7, #16]
   804ea:	409a      	lsls	r2, r3
   804ec:	683b      	ldr	r3, [r7, #0]
   804ee:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
   804f2:	4619      	mov	r1, r3
   804f4:	693b      	ldr	r3, [r7, #16]
   804f6:	fa01 f303 	lsl.w	r3, r1, r3
   804fa:	041b      	lsls	r3, r3, #16
   804fc:	4313      	orrs	r3, r2
   804fe:	461a      	mov	r2, r3
   80500:	697b      	ldr	r3, [r7, #20]
   80502:	4313      	orrs	r3, r2
   80504:	617b      	str	r3, [r7, #20]
   80506:	687b      	ldr	r3, [r7, #4]
   80508:	697a      	ldr	r2, [r7, #20]
   8050a:	645a      	str	r2, [r3, #68]	; 0x44
   8050c:	2201      	movs	r2, #1
   8050e:	693b      	ldr	r3, [r7, #16]
   80510:	fa02 f303 	lsl.w	r3, r2, r3
   80514:	60fb      	str	r3, [r7, #12]
   80516:	683b      	ldr	r3, [r7, #0]
   80518:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
   8051c:	2b00      	cmp	r3, #0
   8051e:	d006      	beq.n	8052e <pwm_channel_init+0x13e>
   80520:	687b      	ldr	r3, [r7, #4]
   80522:	6a1a      	ldr	r2, [r3, #32]
   80524:	68fb      	ldr	r3, [r7, #12]
   80526:	431a      	orrs	r2, r3
   80528:	687b      	ldr	r3, [r7, #4]
   8052a:	621a      	str	r2, [r3, #32]
   8052c:	e006      	b.n	8053c <pwm_channel_init+0x14c>
   8052e:	687b      	ldr	r3, [r7, #4]
   80530:	6a1a      	ldr	r2, [r3, #32]
   80532:	68fb      	ldr	r3, [r7, #12]
   80534:	43db      	mvns	r3, r3
   80536:	401a      	ands	r2, r3
   80538:	687b      	ldr	r3, [r7, #4]
   8053a:	621a      	str	r2, [r3, #32]
   8053c:	683b      	ldr	r3, [r7, #0]
   8053e:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
   80542:	2b01      	cmp	r3, #1
   80544:	d109      	bne.n	8055a <pwm_channel_init+0x16a>
   80546:	687b      	ldr	r3, [r7, #4]
   80548:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8054a:	2101      	movs	r1, #1
   8054c:	693a      	ldr	r2, [r7, #16]
   8054e:	fa01 f202 	lsl.w	r2, r1, r2
   80552:	431a      	orrs	r2, r3
   80554:	687b      	ldr	r3, [r7, #4]
   80556:	669a      	str	r2, [r3, #104]	; 0x68
   80558:	e009      	b.n	8056e <pwm_channel_init+0x17e>
   8055a:	687b      	ldr	r3, [r7, #4]
   8055c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8055e:	2101      	movs	r1, #1
   80560:	693a      	ldr	r2, [r7, #16]
   80562:	fa01 f202 	lsl.w	r2, r1, r2
   80566:	43d2      	mvns	r2, r2
   80568:	401a      	ands	r2, r3
   8056a:	687b      	ldr	r3, [r7, #4]
   8056c:	669a      	str	r2, [r3, #104]	; 0x68
   8056e:	683b      	ldr	r3, [r7, #0]
   80570:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   80574:	2b01      	cmp	r3, #1
   80576:	d10a      	bne.n	8058e <pwm_channel_init+0x19e>
   80578:	687b      	ldr	r3, [r7, #4]
   8057a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8057c:	2101      	movs	r1, #1
   8057e:	693a      	ldr	r2, [r7, #16]
   80580:	fa01 f202 	lsl.w	r2, r1, r2
   80584:	0412      	lsls	r2, r2, #16
   80586:	431a      	orrs	r2, r3
   80588:	687b      	ldr	r3, [r7, #4]
   8058a:	669a      	str	r2, [r3, #104]	; 0x68
   8058c:	e00a      	b.n	805a4 <pwm_channel_init+0x1b4>
   8058e:	687b      	ldr	r3, [r7, #4]
   80590:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80592:	2101      	movs	r1, #1
   80594:	693a      	ldr	r2, [r7, #16]
   80596:	fa01 f202 	lsl.w	r2, r1, r2
   8059a:	0412      	lsls	r2, r2, #16
   8059c:	43d2      	mvns	r2, r2
   8059e:	401a      	ands	r2, r3
   805a0:	687b      	ldr	r3, [r7, #4]
   805a2:	669a      	str	r2, [r3, #104]	; 0x68
   805a4:	2300      	movs	r3, #0
   805a6:	60bb      	str	r3, [r7, #8]
   805a8:	693b      	ldr	r3, [r7, #16]
   805aa:	2b03      	cmp	r3, #3
   805ac:	d81d      	bhi.n	805ea <pwm_channel_init+0x1fa>
   805ae:	693b      	ldr	r3, [r7, #16]
   805b0:	00db      	lsls	r3, r3, #3
   805b2:	613b      	str	r3, [r7, #16]
   805b4:	687b      	ldr	r3, [r7, #4]
   805b6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
   805b8:	60bb      	str	r3, [r7, #8]
   805ba:	22ff      	movs	r2, #255	; 0xff
   805bc:	693b      	ldr	r3, [r7, #16]
   805be:	fa02 f303 	lsl.w	r3, r2, r3
   805c2:	43db      	mvns	r3, r3
   805c4:	461a      	mov	r2, r3
   805c6:	68bb      	ldr	r3, [r7, #8]
   805c8:	4013      	ands	r3, r2
   805ca:	60bb      	str	r3, [r7, #8]
   805cc:	683b      	ldr	r3, [r7, #0]
   805ce:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
   805d2:	461a      	mov	r2, r3
   805d4:	693b      	ldr	r3, [r7, #16]
   805d6:	fa02 f303 	lsl.w	r3, r2, r3
   805da:	461a      	mov	r2, r3
   805dc:	68bb      	ldr	r3, [r7, #8]
   805de:	4313      	orrs	r3, r2
   805e0:	60bb      	str	r3, [r7, #8]
   805e2:	687b      	ldr	r3, [r7, #4]
   805e4:	68ba      	ldr	r2, [r7, #8]
   805e6:	66da      	str	r2, [r3, #108]	; 0x6c
   805e8:	e01f      	b.n	8062a <pwm_channel_init+0x23a>
   805ea:	693b      	ldr	r3, [r7, #16]
   805ec:	3b04      	subs	r3, #4
   805ee:	613b      	str	r3, [r7, #16]
   805f0:	693b      	ldr	r3, [r7, #16]
   805f2:	00db      	lsls	r3, r3, #3
   805f4:	613b      	str	r3, [r7, #16]
   805f6:	687b      	ldr	r3, [r7, #4]
   805f8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   805fa:	60bb      	str	r3, [r7, #8]
   805fc:	22ff      	movs	r2, #255	; 0xff
   805fe:	693b      	ldr	r3, [r7, #16]
   80600:	fa02 f303 	lsl.w	r3, r2, r3
   80604:	43db      	mvns	r3, r3
   80606:	461a      	mov	r2, r3
   80608:	68bb      	ldr	r3, [r7, #8]
   8060a:	4013      	ands	r3, r2
   8060c:	60bb      	str	r3, [r7, #8]
   8060e:	683b      	ldr	r3, [r7, #0]
   80610:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
   80614:	461a      	mov	r2, r3
   80616:	693b      	ldr	r3, [r7, #16]
   80618:	fa02 f303 	lsl.w	r3, r2, r3
   8061c:	461a      	mov	r2, r3
   8061e:	68bb      	ldr	r3, [r7, #8]
   80620:	4313      	orrs	r3, r2
   80622:	60bb      	str	r3, [r7, #8]
   80624:	687b      	ldr	r3, [r7, #4]
   80626:	68ba      	ldr	r2, [r7, #8]
   80628:	671a      	str	r2, [r3, #112]	; 0x70
   8062a:	2300      	movs	r3, #0
   8062c:	4618      	mov	r0, r3
   8062e:	371c      	adds	r7, #28
   80630:	46bd      	mov	sp, r7
   80632:	bc80      	pop	{r7}
   80634:	4770      	bx	lr

00080636 <pwm_channel_update_duty>:
   80636:	b480      	push	{r7}
   80638:	b087      	sub	sp, #28
   8063a:	af00      	add	r7, sp, #0
   8063c:	60f8      	str	r0, [r7, #12]
   8063e:	60b9      	str	r1, [r7, #8]
   80640:	607a      	str	r2, [r7, #4]
   80642:	68bb      	ldr	r3, [r7, #8]
   80644:	681b      	ldr	r3, [r3, #0]
   80646:	617b      	str	r3, [r7, #20]
   80648:	68bb      	ldr	r3, [r7, #8]
   8064a:	691a      	ldr	r2, [r3, #16]
   8064c:	687b      	ldr	r3, [r7, #4]
   8064e:	429a      	cmp	r2, r3
   80650:	d202      	bcs.n	80658 <pwm_channel_update_duty+0x22>
   80652:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80656:	e00b      	b.n	80670 <pwm_channel_update_duty+0x3a>
   80658:	68bb      	ldr	r3, [r7, #8]
   8065a:	687a      	ldr	r2, [r7, #4]
   8065c:	60da      	str	r2, [r3, #12]
   8065e:	68fa      	ldr	r2, [r7, #12]
   80660:	697b      	ldr	r3, [r7, #20]
   80662:	015b      	lsls	r3, r3, #5
   80664:	4413      	add	r3, r2
   80666:	f503 7302 	add.w	r3, r3, #520	; 0x208
   8066a:	687a      	ldr	r2, [r7, #4]
   8066c:	601a      	str	r2, [r3, #0]
   8066e:	2300      	movs	r3, #0
   80670:	4618      	mov	r0, r3
   80672:	371c      	adds	r7, #28
   80674:	46bd      	mov	sp, r7
   80676:	bc80      	pop	{r7}
   80678:	4770      	bx	lr

0008067a <pwm_channel_enable>:
   8067a:	b480      	push	{r7}
   8067c:	b083      	sub	sp, #12
   8067e:	af00      	add	r7, sp, #0
   80680:	6078      	str	r0, [r7, #4]
   80682:	6039      	str	r1, [r7, #0]
   80684:	2201      	movs	r2, #1
   80686:	683b      	ldr	r3, [r7, #0]
   80688:	fa02 f303 	lsl.w	r3, r2, r3
   8068c:	461a      	mov	r2, r3
   8068e:	687b      	ldr	r3, [r7, #4]
   80690:	605a      	str	r2, [r3, #4]
   80692:	bf00      	nop
   80694:	370c      	adds	r7, #12
   80696:	46bd      	mov	sp, r7
   80698:	bc80      	pop	{r7}
   8069a:	4770      	bx	lr

0008069c <pwm_channel_disable>:
   8069c:	b480      	push	{r7}
   8069e:	b083      	sub	sp, #12
   806a0:	af00      	add	r7, sp, #0
   806a2:	6078      	str	r0, [r7, #4]
   806a4:	6039      	str	r1, [r7, #0]
   806a6:	2201      	movs	r2, #1
   806a8:	683b      	ldr	r3, [r7, #0]
   806aa:	fa02 f303 	lsl.w	r3, r2, r3
   806ae:	461a      	mov	r2, r3
   806b0:	687b      	ldr	r3, [r7, #4]
   806b2:	609a      	str	r2, [r3, #8]
   806b4:	bf00      	nop
   806b6:	370c      	adds	r7, #12
   806b8:	46bd      	mov	sp, r7
   806ba:	bc80      	pop	{r7}
   806bc:	4770      	bx	lr

000806be <tc_init>:
   806be:	b480      	push	{r7}
   806c0:	b087      	sub	sp, #28
   806c2:	af00      	add	r7, sp, #0
   806c4:	60f8      	str	r0, [r7, #12]
   806c6:	60b9      	str	r1, [r7, #8]
   806c8:	607a      	str	r2, [r7, #4]
   806ca:	68fa      	ldr	r2, [r7, #12]
   806cc:	68bb      	ldr	r3, [r7, #8]
   806ce:	019b      	lsls	r3, r3, #6
   806d0:	4413      	add	r3, r2
   806d2:	617b      	str	r3, [r7, #20]
   806d4:	697b      	ldr	r3, [r7, #20]
   806d6:	2202      	movs	r2, #2
   806d8:	601a      	str	r2, [r3, #0]
   806da:	697b      	ldr	r3, [r7, #20]
   806dc:	f04f 32ff 	mov.w	r2, #4294967295
   806e0:	629a      	str	r2, [r3, #40]	; 0x28
   806e2:	697b      	ldr	r3, [r7, #20]
   806e4:	6a1b      	ldr	r3, [r3, #32]
   806e6:	697b      	ldr	r3, [r7, #20]
   806e8:	687a      	ldr	r2, [r7, #4]
   806ea:	605a      	str	r2, [r3, #4]
   806ec:	bf00      	nop
   806ee:	371c      	adds	r7, #28
   806f0:	46bd      	mov	sp, r7
   806f2:	bc80      	pop	{r7}
   806f4:	4770      	bx	lr

000806f6 <tc_start>:
   806f6:	b480      	push	{r7}
   806f8:	b083      	sub	sp, #12
   806fa:	af00      	add	r7, sp, #0
   806fc:	6078      	str	r0, [r7, #4]
   806fe:	6039      	str	r1, [r7, #0]
   80700:	687a      	ldr	r2, [r7, #4]
   80702:	683b      	ldr	r3, [r7, #0]
   80704:	019b      	lsls	r3, r3, #6
   80706:	4413      	add	r3, r2
   80708:	2205      	movs	r2, #5
   8070a:	601a      	str	r2, [r3, #0]
   8070c:	bf00      	nop
   8070e:	370c      	adds	r7, #12
   80710:	46bd      	mov	sp, r7
   80712:	bc80      	pop	{r7}
   80714:	4770      	bx	lr

00080716 <tc_write_rc>:
   80716:	b480      	push	{r7}
   80718:	b085      	sub	sp, #20
   8071a:	af00      	add	r7, sp, #0
   8071c:	60f8      	str	r0, [r7, #12]
   8071e:	60b9      	str	r1, [r7, #8]
   80720:	607a      	str	r2, [r7, #4]
   80722:	68fa      	ldr	r2, [r7, #12]
   80724:	68bb      	ldr	r3, [r7, #8]
   80726:	019b      	lsls	r3, r3, #6
   80728:	4413      	add	r3, r2
   8072a:	331c      	adds	r3, #28
   8072c:	687a      	ldr	r2, [r7, #4]
   8072e:	601a      	str	r2, [r3, #0]
   80730:	bf00      	nop
   80732:	3714      	adds	r7, #20
   80734:	46bd      	mov	sp, r7
   80736:	bc80      	pop	{r7}
   80738:	4770      	bx	lr

0008073a <tc_enable_interrupt>:
   8073a:	b480      	push	{r7}
   8073c:	b087      	sub	sp, #28
   8073e:	af00      	add	r7, sp, #0
   80740:	60f8      	str	r0, [r7, #12]
   80742:	60b9      	str	r1, [r7, #8]
   80744:	607a      	str	r2, [r7, #4]
   80746:	68fa      	ldr	r2, [r7, #12]
   80748:	68bb      	ldr	r3, [r7, #8]
   8074a:	019b      	lsls	r3, r3, #6
   8074c:	4413      	add	r3, r2
   8074e:	617b      	str	r3, [r7, #20]
   80750:	697b      	ldr	r3, [r7, #20]
   80752:	687a      	ldr	r2, [r7, #4]
   80754:	625a      	str	r2, [r3, #36]	; 0x24
   80756:	bf00      	nop
   80758:	371c      	adds	r7, #28
   8075a:	46bd      	mov	sp, r7
   8075c:	bc80      	pop	{r7}
   8075e:	4770      	bx	lr

00080760 <tc_get_status>:
   80760:	b480      	push	{r7}
   80762:	b085      	sub	sp, #20
   80764:	af00      	add	r7, sp, #0
   80766:	6078      	str	r0, [r7, #4]
   80768:	6039      	str	r1, [r7, #0]
   8076a:	687a      	ldr	r2, [r7, #4]
   8076c:	683b      	ldr	r3, [r7, #0]
   8076e:	019b      	lsls	r3, r3, #6
   80770:	4413      	add	r3, r2
   80772:	60fb      	str	r3, [r7, #12]
   80774:	68fb      	ldr	r3, [r7, #12]
   80776:	6a1b      	ldr	r3, [r3, #32]
   80778:	4618      	mov	r0, r3
   8077a:	3714      	adds	r7, #20
   8077c:	46bd      	mov	sp, r7
   8077e:	bc80      	pop	{r7}
   80780:	4770      	bx	lr

00080782 <usart_set_spi_master_baudrate>:
   80782:	b480      	push	{r7}
   80784:	b087      	sub	sp, #28
   80786:	af00      	add	r7, sp, #0
   80788:	60f8      	str	r0, [r7, #12]
   8078a:	60b9      	str	r1, [r7, #8]
   8078c:	607a      	str	r2, [r7, #4]
   8078e:	68bb      	ldr	r3, [r7, #8]
   80790:	085a      	lsrs	r2, r3, #1
   80792:	687b      	ldr	r3, [r7, #4]
   80794:	441a      	add	r2, r3
   80796:	68bb      	ldr	r3, [r7, #8]
   80798:	fbb2 f3f3 	udiv	r3, r2, r3
   8079c:	617b      	str	r3, [r7, #20]
   8079e:	697b      	ldr	r3, [r7, #20]
   807a0:	2b03      	cmp	r3, #3
   807a2:	d903      	bls.n	807ac <usart_set_spi_master_baudrate+0x2a>
   807a4:	697b      	ldr	r3, [r7, #20]
   807a6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   807aa:	d301      	bcc.n	807b0 <usart_set_spi_master_baudrate+0x2e>
   807ac:	2301      	movs	r3, #1
   807ae:	e003      	b.n	807b8 <usart_set_spi_master_baudrate+0x36>
   807b0:	68fb      	ldr	r3, [r7, #12]
   807b2:	697a      	ldr	r2, [r7, #20]
   807b4:	621a      	str	r2, [r3, #32]
   807b6:	2300      	movs	r3, #0
   807b8:	4618      	mov	r0, r3
   807ba:	371c      	adds	r7, #28
   807bc:	46bd      	mov	sp, r7
   807be:	bc80      	pop	{r7}
   807c0:	4770      	bx	lr
	...

000807c4 <usart_reset>:
   807c4:	b580      	push	{r7, lr}
   807c6:	b082      	sub	sp, #8
   807c8:	af00      	add	r7, sp, #0
   807ca:	6078      	str	r0, [r7, #4]
   807cc:	6878      	ldr	r0, [r7, #4]
   807ce:	4b0d      	ldr	r3, [pc, #52]	; (80804 <usart_reset+0x40>)
   807d0:	4798      	blx	r3
   807d2:	687b      	ldr	r3, [r7, #4]
   807d4:	2200      	movs	r2, #0
   807d6:	605a      	str	r2, [r3, #4]
   807d8:	687b      	ldr	r3, [r7, #4]
   807da:	2200      	movs	r2, #0
   807dc:	625a      	str	r2, [r3, #36]	; 0x24
   807de:	687b      	ldr	r3, [r7, #4]
   807e0:	2200      	movs	r2, #0
   807e2:	629a      	str	r2, [r3, #40]	; 0x28
   807e4:	6878      	ldr	r0, [r7, #4]
   807e6:	4b08      	ldr	r3, [pc, #32]	; (80808 <usart_reset+0x44>)
   807e8:	4798      	blx	r3
   807ea:	6878      	ldr	r0, [r7, #4]
   807ec:	4b07      	ldr	r3, [pc, #28]	; (8080c <usart_reset+0x48>)
   807ee:	4798      	blx	r3
   807f0:	6878      	ldr	r0, [r7, #4]
   807f2:	4b07      	ldr	r3, [pc, #28]	; (80810 <usart_reset+0x4c>)
   807f4:	4798      	blx	r3
   807f6:	6878      	ldr	r0, [r7, #4]
   807f8:	4b06      	ldr	r3, [pc, #24]	; (80814 <usart_reset+0x50>)
   807fa:	4798      	blx	r3
   807fc:	bf00      	nop
   807fe:	3708      	adds	r7, #8
   80800:	46bd      	mov	sp, r7
   80802:	bd80      	pop	{r7, pc}
   80804:	00080a21 	.word	0x00080a21
   80808:	00080959 	.word	0x00080959
   8080c:	000809a1 	.word	0x000809a1
   80810:	000809b9 	.word	0x000809b9
   80814:	000809d3 	.word	0x000809d3

00080818 <usart_init_spi_master>:
   80818:	b580      	push	{r7, lr}
   8081a:	b084      	sub	sp, #16
   8081c:	af00      	add	r7, sp, #0
   8081e:	60f8      	str	r0, [r7, #12]
   80820:	60b9      	str	r1, [r7, #8]
   80822:	607a      	str	r2, [r7, #4]
   80824:	68f8      	ldr	r0, [r7, #12]
   80826:	4b3d      	ldr	r3, [pc, #244]	; (8091c <usart_init_spi_master+0x104>)
   80828:	4798      	blx	r3
   8082a:	4b3d      	ldr	r3, [pc, #244]	; (80920 <usart_init_spi_master+0x108>)
   8082c:	2200      	movs	r2, #0
   8082e:	601a      	str	r2, [r3, #0]
   80830:	68bb      	ldr	r3, [r7, #8]
   80832:	2b00      	cmp	r3, #0
   80834:	d00d      	beq.n	80852 <usart_init_spi_master+0x3a>
   80836:	68bb      	ldr	r3, [r7, #8]
   80838:	689b      	ldr	r3, [r3, #8]
   8083a:	2b03      	cmp	r3, #3
   8083c:	d809      	bhi.n	80852 <usart_init_spi_master+0x3a>
   8083e:	68bb      	ldr	r3, [r7, #8]
   80840:	681b      	ldr	r3, [r3, #0]
   80842:	687a      	ldr	r2, [r7, #4]
   80844:	4619      	mov	r1, r3
   80846:	68f8      	ldr	r0, [r7, #12]
   80848:	4b36      	ldr	r3, [pc, #216]	; (80924 <usart_init_spi_master+0x10c>)
   8084a:	4798      	blx	r3
   8084c:	4603      	mov	r3, r0
   8084e:	2b00      	cmp	r3, #0
   80850:	d001      	beq.n	80856 <usart_init_spi_master+0x3e>
   80852:	2301      	movs	r3, #1
   80854:	e05d      	b.n	80912 <usart_init_spi_master+0xfa>
   80856:	68bb      	ldr	r3, [r7, #8]
   80858:	685a      	ldr	r2, [r3, #4]
   8085a:	4b31      	ldr	r3, [pc, #196]	; (80920 <usart_init_spi_master+0x108>)
   8085c:	681b      	ldr	r3, [r3, #0]
   8085e:	4313      	orrs	r3, r2
   80860:	4a2f      	ldr	r2, [pc, #188]	; (80920 <usart_init_spi_master+0x108>)
   80862:	6013      	str	r3, [r2, #0]
   80864:	68bb      	ldr	r3, [r7, #8]
   80866:	68da      	ldr	r2, [r3, #12]
   80868:	4b2d      	ldr	r3, [pc, #180]	; (80920 <usart_init_spi_master+0x108>)
   8086a:	681b      	ldr	r3, [r3, #0]
   8086c:	4313      	orrs	r3, r2
   8086e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
   80872:	f043 030e 	orr.w	r3, r3, #14
   80876:	4a2a      	ldr	r2, [pc, #168]	; (80920 <usart_init_spi_master+0x108>)
   80878:	6013      	str	r3, [r2, #0]
   8087a:	68bb      	ldr	r3, [r7, #8]
   8087c:	689b      	ldr	r3, [r3, #8]
   8087e:	2b03      	cmp	r3, #3
   80880:	d83e      	bhi.n	80900 <usart_init_spi_master+0xe8>
   80882:	a201      	add	r2, pc, #4	; (adr r2, 80888 <usart_init_spi_master+0x70>)
   80884:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80888:	00080899 	.word	0x00080899
   8088c:	000808b3 	.word	0x000808b3
   80890:	000808cd 	.word	0x000808cd
   80894:	000808e7 	.word	0x000808e7
   80898:	4b21      	ldr	r3, [pc, #132]	; (80920 <usart_init_spi_master+0x108>)
   8089a:	681b      	ldr	r3, [r3, #0]
   8089c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   808a0:	4a1f      	ldr	r2, [pc, #124]	; (80920 <usart_init_spi_master+0x108>)
   808a2:	6013      	str	r3, [r2, #0]
   808a4:	4b1e      	ldr	r3, [pc, #120]	; (80920 <usart_init_spi_master+0x108>)
   808a6:	681b      	ldr	r3, [r3, #0]
   808a8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   808ac:	4a1c      	ldr	r2, [pc, #112]	; (80920 <usart_init_spi_master+0x108>)
   808ae:	6013      	str	r3, [r2, #0]
   808b0:	e027      	b.n	80902 <usart_init_spi_master+0xea>
   808b2:	4b1b      	ldr	r3, [pc, #108]	; (80920 <usart_init_spi_master+0x108>)
   808b4:	681b      	ldr	r3, [r3, #0]
   808b6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   808ba:	4a19      	ldr	r2, [pc, #100]	; (80920 <usart_init_spi_master+0x108>)
   808bc:	6013      	str	r3, [r2, #0]
   808be:	4b18      	ldr	r3, [pc, #96]	; (80920 <usart_init_spi_master+0x108>)
   808c0:	681b      	ldr	r3, [r3, #0]
   808c2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   808c6:	4a16      	ldr	r2, [pc, #88]	; (80920 <usart_init_spi_master+0x108>)
   808c8:	6013      	str	r3, [r2, #0]
   808ca:	e01a      	b.n	80902 <usart_init_spi_master+0xea>
   808cc:	4b14      	ldr	r3, [pc, #80]	; (80920 <usart_init_spi_master+0x108>)
   808ce:	681b      	ldr	r3, [r3, #0]
   808d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   808d4:	4a12      	ldr	r2, [pc, #72]	; (80920 <usart_init_spi_master+0x108>)
   808d6:	6013      	str	r3, [r2, #0]
   808d8:	4b11      	ldr	r3, [pc, #68]	; (80920 <usart_init_spi_master+0x108>)
   808da:	681b      	ldr	r3, [r3, #0]
   808dc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   808e0:	4a0f      	ldr	r2, [pc, #60]	; (80920 <usart_init_spi_master+0x108>)
   808e2:	6013      	str	r3, [r2, #0]
   808e4:	e00d      	b.n	80902 <usart_init_spi_master+0xea>
   808e6:	4b0e      	ldr	r3, [pc, #56]	; (80920 <usart_init_spi_master+0x108>)
   808e8:	681b      	ldr	r3, [r3, #0]
   808ea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   808ee:	4a0c      	ldr	r2, [pc, #48]	; (80920 <usart_init_spi_master+0x108>)
   808f0:	6013      	str	r3, [r2, #0]
   808f2:	4b0b      	ldr	r3, [pc, #44]	; (80920 <usart_init_spi_master+0x108>)
   808f4:	681b      	ldr	r3, [r3, #0]
   808f6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   808fa:	4a09      	ldr	r2, [pc, #36]	; (80920 <usart_init_spi_master+0x108>)
   808fc:	6013      	str	r3, [r2, #0]
   808fe:	e000      	b.n	80902 <usart_init_spi_master+0xea>
   80900:	bf00      	nop
   80902:	68fb      	ldr	r3, [r7, #12]
   80904:	685a      	ldr	r2, [r3, #4]
   80906:	4b06      	ldr	r3, [pc, #24]	; (80920 <usart_init_spi_master+0x108>)
   80908:	681b      	ldr	r3, [r3, #0]
   8090a:	431a      	orrs	r2, r3
   8090c:	68fb      	ldr	r3, [r7, #12]
   8090e:	605a      	str	r2, [r3, #4]
   80910:	2300      	movs	r3, #0
   80912:	4618      	mov	r0, r3
   80914:	3710      	adds	r7, #16
   80916:	46bd      	mov	sp, r7
   80918:	bd80      	pop	{r7, pc}
   8091a:	bf00      	nop
   8091c:	000807c5 	.word	0x000807c5
   80920:	20070b90 	.word	0x20070b90
   80924:	00080783 	.word	0x00080783

00080928 <usart_enable_tx>:
   80928:	b480      	push	{r7}
   8092a:	b083      	sub	sp, #12
   8092c:	af00      	add	r7, sp, #0
   8092e:	6078      	str	r0, [r7, #4]
   80930:	687b      	ldr	r3, [r7, #4]
   80932:	2240      	movs	r2, #64	; 0x40
   80934:	601a      	str	r2, [r3, #0]
   80936:	bf00      	nop
   80938:	370c      	adds	r7, #12
   8093a:	46bd      	mov	sp, r7
   8093c:	bc80      	pop	{r7}
   8093e:	4770      	bx	lr

00080940 <usart_disable_tx>:
   80940:	b480      	push	{r7}
   80942:	b083      	sub	sp, #12
   80944:	af00      	add	r7, sp, #0
   80946:	6078      	str	r0, [r7, #4]
   80948:	687b      	ldr	r3, [r7, #4]
   8094a:	2280      	movs	r2, #128	; 0x80
   8094c:	601a      	str	r2, [r3, #0]
   8094e:	bf00      	nop
   80950:	370c      	adds	r7, #12
   80952:	46bd      	mov	sp, r7
   80954:	bc80      	pop	{r7}
   80956:	4770      	bx	lr

00080958 <usart_reset_tx>:
   80958:	b480      	push	{r7}
   8095a:	b083      	sub	sp, #12
   8095c:	af00      	add	r7, sp, #0
   8095e:	6078      	str	r0, [r7, #4]
   80960:	687b      	ldr	r3, [r7, #4]
   80962:	2288      	movs	r2, #136	; 0x88
   80964:	601a      	str	r2, [r3, #0]
   80966:	bf00      	nop
   80968:	370c      	adds	r7, #12
   8096a:	46bd      	mov	sp, r7
   8096c:	bc80      	pop	{r7}
   8096e:	4770      	bx	lr

00080970 <usart_enable_rx>:
   80970:	b480      	push	{r7}
   80972:	b083      	sub	sp, #12
   80974:	af00      	add	r7, sp, #0
   80976:	6078      	str	r0, [r7, #4]
   80978:	687b      	ldr	r3, [r7, #4]
   8097a:	2210      	movs	r2, #16
   8097c:	601a      	str	r2, [r3, #0]
   8097e:	bf00      	nop
   80980:	370c      	adds	r7, #12
   80982:	46bd      	mov	sp, r7
   80984:	bc80      	pop	{r7}
   80986:	4770      	bx	lr

00080988 <usart_disable_rx>:
   80988:	b480      	push	{r7}
   8098a:	b083      	sub	sp, #12
   8098c:	af00      	add	r7, sp, #0
   8098e:	6078      	str	r0, [r7, #4]
   80990:	687b      	ldr	r3, [r7, #4]
   80992:	2220      	movs	r2, #32
   80994:	601a      	str	r2, [r3, #0]
   80996:	bf00      	nop
   80998:	370c      	adds	r7, #12
   8099a:	46bd      	mov	sp, r7
   8099c:	bc80      	pop	{r7}
   8099e:	4770      	bx	lr

000809a0 <usart_reset_rx>:
   809a0:	b480      	push	{r7}
   809a2:	b083      	sub	sp, #12
   809a4:	af00      	add	r7, sp, #0
   809a6:	6078      	str	r0, [r7, #4]
   809a8:	687b      	ldr	r3, [r7, #4]
   809aa:	2224      	movs	r2, #36	; 0x24
   809ac:	601a      	str	r2, [r3, #0]
   809ae:	bf00      	nop
   809b0:	370c      	adds	r7, #12
   809b2:	46bd      	mov	sp, r7
   809b4:	bc80      	pop	{r7}
   809b6:	4770      	bx	lr

000809b8 <usart_reset_status>:
   809b8:	b480      	push	{r7}
   809ba:	b083      	sub	sp, #12
   809bc:	af00      	add	r7, sp, #0
   809be:	6078      	str	r0, [r7, #4]
   809c0:	687b      	ldr	r3, [r7, #4]
   809c2:	f44f 7280 	mov.w	r2, #256	; 0x100
   809c6:	601a      	str	r2, [r3, #0]
   809c8:	bf00      	nop
   809ca:	370c      	adds	r7, #12
   809cc:	46bd      	mov	sp, r7
   809ce:	bc80      	pop	{r7}
   809d0:	4770      	bx	lr

000809d2 <usart_drive_RTS_pin_high>:
   809d2:	b480      	push	{r7}
   809d4:	b083      	sub	sp, #12
   809d6:	af00      	add	r7, sp, #0
   809d8:	6078      	str	r0, [r7, #4]
   809da:	687b      	ldr	r3, [r7, #4]
   809dc:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   809e0:	601a      	str	r2, [r3, #0]
   809e2:	bf00      	nop
   809e4:	370c      	adds	r7, #12
   809e6:	46bd      	mov	sp, r7
   809e8:	bc80      	pop	{r7}
   809ea:	4770      	bx	lr

000809ec <usart_spi_force_chip_select>:
   809ec:	b480      	push	{r7}
   809ee:	b083      	sub	sp, #12
   809f0:	af00      	add	r7, sp, #0
   809f2:	6078      	str	r0, [r7, #4]
   809f4:	687b      	ldr	r3, [r7, #4]
   809f6:	f44f 2280 	mov.w	r2, #262144	; 0x40000
   809fa:	601a      	str	r2, [r3, #0]
   809fc:	bf00      	nop
   809fe:	370c      	adds	r7, #12
   80a00:	46bd      	mov	sp, r7
   80a02:	bc80      	pop	{r7}
   80a04:	4770      	bx	lr

00080a06 <usart_spi_release_chip_select>:
   80a06:	b480      	push	{r7}
   80a08:	b083      	sub	sp, #12
   80a0a:	af00      	add	r7, sp, #0
   80a0c:	6078      	str	r0, [r7, #4]
   80a0e:	687b      	ldr	r3, [r7, #4]
   80a10:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   80a14:	601a      	str	r2, [r3, #0]
   80a16:	bf00      	nop
   80a18:	370c      	adds	r7, #12
   80a1a:	46bd      	mov	sp, r7
   80a1c:	bc80      	pop	{r7}
   80a1e:	4770      	bx	lr

00080a20 <usart_disable_writeprotect>:
   80a20:	b480      	push	{r7}
   80a22:	b083      	sub	sp, #12
   80a24:	af00      	add	r7, sp, #0
   80a26:	6078      	str	r0, [r7, #4]
   80a28:	687b      	ldr	r3, [r7, #4]
   80a2a:	4a04      	ldr	r2, [pc, #16]	; (80a3c <usart_disable_writeprotect+0x1c>)
   80a2c:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80a30:	bf00      	nop
   80a32:	370c      	adds	r7, #12
   80a34:	46bd      	mov	sp, r7
   80a36:	bc80      	pop	{r7}
   80a38:	4770      	bx	lr
   80a3a:	bf00      	nop
   80a3c:	55534100 	.word	0x55534100

00080a40 <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
   80a40:	b480      	push	{r7}
   80a42:	b083      	sub	sp, #12
   80a44:	af00      	add	r7, sp, #0
   80a46:	4603      	mov	r3, r0
   80a48:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80a4a:	4908      	ldr	r1, [pc, #32]	; (80a6c <NVIC_EnableIRQ+0x2c>)
   80a4c:	f997 3007 	ldrsb.w	r3, [r7, #7]
   80a50:	095b      	lsrs	r3, r3, #5
   80a52:	79fa      	ldrb	r2, [r7, #7]
   80a54:	f002 021f 	and.w	r2, r2, #31
   80a58:	2001      	movs	r0, #1
   80a5a:	fa00 f202 	lsl.w	r2, r0, r2
   80a5e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
   80a62:	bf00      	nop
   80a64:	370c      	adds	r7, #12
   80a66:	46bd      	mov	sp, r7
   80a68:	bc80      	pop	{r7}
   80a6a:	4770      	bx	lr
   80a6c:	e000e100 	.word	0xe000e100

00080a70 <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
   80a70:	b480      	push	{r7}
   80a72:	b083      	sub	sp, #12
   80a74:	af00      	add	r7, sp, #0
   80a76:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   80a78:	687b      	ldr	r3, [r7, #4]
   80a7a:	2b07      	cmp	r3, #7
   80a7c:	d825      	bhi.n	80aca <osc_get_rate+0x5a>
   80a7e:	a201      	add	r2, pc, #4	; (adr r2, 80a84 <osc_get_rate+0x14>)
   80a80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80a84:	00080aa5 	.word	0x00080aa5
   80a88:	00080aab 	.word	0x00080aab
   80a8c:	00080ab1 	.word	0x00080ab1
   80a90:	00080ab7 	.word	0x00080ab7
   80a94:	00080abb 	.word	0x00080abb
   80a98:	00080abf 	.word	0x00080abf
   80a9c:	00080ac3 	.word	0x00080ac3
   80aa0:	00080ac7 	.word	0x00080ac7
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
   80aa4:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   80aa8:	e010      	b.n	80acc <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
   80aaa:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80aae:	e00d      	b.n	80acc <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
   80ab0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80ab4:	e00a      	b.n	80acc <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
   80ab6:	4b08      	ldr	r3, [pc, #32]	; (80ad8 <osc_get_rate+0x68>)
   80ab8:	e008      	b.n	80acc <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
   80aba:	4b08      	ldr	r3, [pc, #32]	; (80adc <osc_get_rate+0x6c>)
   80abc:	e006      	b.n	80acc <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
   80abe:	4b08      	ldr	r3, [pc, #32]	; (80ae0 <osc_get_rate+0x70>)
   80ac0:	e004      	b.n	80acc <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
   80ac2:	4b07      	ldr	r3, [pc, #28]	; (80ae0 <osc_get_rate+0x70>)
   80ac4:	e002      	b.n	80acc <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
   80ac6:	4b06      	ldr	r3, [pc, #24]	; (80ae0 <osc_get_rate+0x70>)
   80ac8:	e000      	b.n	80acc <osc_get_rate+0x5c>
	}

	return 0;
   80aca:	2300      	movs	r3, #0
}
   80acc:	4618      	mov	r0, r3
   80ace:	370c      	adds	r7, #12
   80ad0:	46bd      	mov	sp, r7
   80ad2:	bc80      	pop	{r7}
   80ad4:	4770      	bx	lr
   80ad6:	bf00      	nop
   80ad8:	003d0900 	.word	0x003d0900
   80adc:	007a1200 	.word	0x007a1200
   80ae0:	00b71b00 	.word	0x00b71b00

00080ae4 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
   80ae4:	b580      	push	{r7, lr}
   80ae6:	af00      	add	r7, sp, #0
	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
		return OSC_MAINCK_BYPASS_HZ;
	}
#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		return pll_get_default_rate(0);
   80ae8:	2006      	movs	r0, #6
   80aea:	4b04      	ldr	r3, [pc, #16]	; (80afc <sysclk_get_main_hz+0x18>)
   80aec:	4798      	blx	r3
   80aee:	4602      	mov	r2, r0
   80af0:	4613      	mov	r3, r2
   80af2:	00db      	lsls	r3, r3, #3
   80af4:	1a9b      	subs	r3, r3, r2
   80af6:	005b      	lsls	r3, r3, #1
#endif
	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
   80af8:	4618      	mov	r0, r3
   80afa:	bd80      	pop	{r7, pc}
   80afc:	00080a71 	.word	0x00080a71

00080b00 <sysclk_get_peripheral_hz>:
 * \brief Retrieves the current rate in Hz of the peripheral clocks.
 *
 * \return Frequency of the peripheral clocks, in Hz.
 */
static inline uint32_t sysclk_get_peripheral_hz(void)
{
   80b00:	b580      	push	{r7, lr}
   80b02:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
   80b04:	4b02      	ldr	r3, [pc, #8]	; (80b10 <sysclk_get_peripheral_hz+0x10>)
   80b06:	4798      	blx	r3
   80b08:	4603      	mov	r3, r0
   80b0a:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
   80b0c:	4618      	mov	r0, r3
   80b0e:	bd80      	pop	{r7, pc}
   80b10:	00080ae5 	.word	0x00080ae5

00080b14 <spi_init>:
sensor_to_motor_t stm;

uint8_t sens_buf[sizeof(stm)];

void spi_init(void)
{
   80b14:	b580      	push	{r7, lr}
   80b16:	af00      	add	r7, sp, #0
    configure_dmac();
   80b18:	4b02      	ldr	r3, [pc, #8]	; (80b24 <spi_init+0x10>)
   80b1a:	4798      	blx	r3
    spi_master_initialize();
   80b1c:	4b02      	ldr	r3, [pc, #8]	; (80b28 <spi_init+0x14>)
   80b1e:	4798      	blx	r3
}
   80b20:	bf00      	nop
   80b22:	bd80      	pop	{r7, pc}
   80b24:	00080c41 	.word	0x00080c41
   80b28:	00080b2d 	.word	0x00080b2d

00080b2c <spi_master_initialize>:

void spi_master_initialize(void)
{
   80b2c:	b590      	push	{r4, r7, lr}
   80b2e:	b085      	sub	sp, #20
   80b30:	af00      	add	r7, sp, #0
    dmac_channel_disable(DMAC, 1);
   80b32:	2101      	movs	r1, #1
   80b34:	4810      	ldr	r0, [pc, #64]	; (80b78 <spi_master_initialize+0x4c>)
   80b36:	4b11      	ldr	r3, [pc, #68]	; (80b7c <spi_master_initialize+0x50>)
   80b38:	4798      	blx	r3
    dmac_channel_disable(DMAC, 0);
   80b3a:	2100      	movs	r1, #0
   80b3c:	480e      	ldr	r0, [pc, #56]	; (80b78 <spi_master_initialize+0x4c>)
   80b3e:	4b0f      	ldr	r3, [pc, #60]	; (80b7c <spi_master_initialize+0x50>)
   80b40:	4798      	blx	r3
    pmc_enable_periph_clk(ID_USART1);
   80b42:	2012      	movs	r0, #18
   80b44:	4b0e      	ldr	r3, [pc, #56]	; (80b80 <spi_master_initialize+0x54>)
   80b46:	4798      	blx	r3
    usart_spi_disable(USART1);
   80b48:	480e      	ldr	r0, [pc, #56]	; (80b84 <spi_master_initialize+0x58>)
   80b4a:	4b0f      	ldr	r3, [pc, #60]	; (80b88 <spi_master_initialize+0x5c>)
   80b4c:	4798      	blx	r3

    usart_spi_opt_t spi_settings =
   80b4e:	4b0f      	ldr	r3, [pc, #60]	; (80b8c <spi_master_initialize+0x60>)
   80b50:	463c      	mov	r4, r7
   80b52:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   80b54:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
        .baudrate = 1000000,
        .char_length = US_MR_CHRL_8_BIT,
        .spi_mode = SPI_MODE_0,
        .channel_mode = US_MR_CHMODE_NORMAL
    };
    usart_init_spi_master(USART1, &spi_settings, sysclk_get_peripheral_hz());
   80b58:	4b0d      	ldr	r3, [pc, #52]	; (80b90 <spi_master_initialize+0x64>)
   80b5a:	4798      	blx	r3
   80b5c:	4602      	mov	r2, r0
   80b5e:	463b      	mov	r3, r7
   80b60:	4619      	mov	r1, r3
   80b62:	4808      	ldr	r0, [pc, #32]	; (80b84 <spi_master_initialize+0x58>)
   80b64:	4b0b      	ldr	r3, [pc, #44]	; (80b94 <spi_master_initialize+0x68>)
   80b66:	4798      	blx	r3
    usart_spi_enable(USART1);
   80b68:	4806      	ldr	r0, [pc, #24]	; (80b84 <spi_master_initialize+0x58>)
   80b6a:	4b0b      	ldr	r3, [pc, #44]	; (80b98 <spi_master_initialize+0x6c>)
   80b6c:	4798      	blx	r3
}
   80b6e:	bf00      	nop
   80b70:	3714      	adds	r7, #20
   80b72:	46bd      	mov	sp, r7
   80b74:	bd90      	pop	{r4, r7, pc}
   80b76:	bf00      	nop
   80b78:	400c4000 	.word	0x400c4000
   80b7c:	000835db 	.word	0x000835db
   80b80:	00083999 	.word	0x00083999
   80b84:	4009c000 	.word	0x4009c000
   80b88:	000801c9 	.word	0x000801c9
   80b8c:	00089638 	.word	0x00089638
   80b90:	00080b01 	.word	0x00080b01
   80b94:	00080819 	.word	0x00080819
   80b98:	000801a5 	.word	0x000801a5

00080b9c <spi_master_transfer>:

void spi_master_transfer(void *p_buf, uint32_t ul_size)
{
   80b9c:	b580      	push	{r7, lr}
   80b9e:	b088      	sub	sp, #32
   80ba0:	af00      	add	r7, sp, #0
   80ba2:	6078      	str	r0, [r7, #4]
   80ba4:	6039      	str	r1, [r7, #0]
    dma_transfer_descriptor_t dmac_trans;

    usart_spi_force_chip_select(USART1);
   80ba6:	481c      	ldr	r0, [pc, #112]	; (80c18 <spi_master_transfer+0x7c>)
   80ba8:	4b1c      	ldr	r3, [pc, #112]	; (80c1c <spi_master_transfer+0x80>)
   80baa:	4798      	blx	r3

    dmac_channel_disable(DMAC, 1);
   80bac:	2101      	movs	r1, #1
   80bae:	481c      	ldr	r0, [pc, #112]	; (80c20 <spi_master_transfer+0x84>)
   80bb0:	4b1c      	ldr	r3, [pc, #112]	; (80c24 <spi_master_transfer+0x88>)
   80bb2:	4798      	blx	r3
    dmac_trans.ul_source_addr = (uint32_t) p_buf;
   80bb4:	687b      	ldr	r3, [r7, #4]
   80bb6:	60fb      	str	r3, [r7, #12]
    dmac_trans.ul_destination_addr = (uint32_t) & USART1->US_THR;
   80bb8:	4b1b      	ldr	r3, [pc, #108]	; (80c28 <spi_master_transfer+0x8c>)
   80bba:	613b      	str	r3, [r7, #16]
    dmac_trans.ul_ctrlA = ul_size | DMAC_CTRLA_SRC_WIDTH_BYTE | DMAC_CTRLA_DST_WIDTH_BYTE;
   80bbc:	683b      	ldr	r3, [r7, #0]
   80bbe:	617b      	str	r3, [r7, #20]
    dmac_trans.ul_ctrlB = DMAC_CTRLB_SRC_DSCR | DMAC_CTRLB_DST_DSCR | DMAC_CTRLB_FC_MEM2PER_DMA_FC | DMAC_CTRLB_SRC_INCR_INCREMENTING | DMAC_CTRLB_DST_INCR_FIXED;
   80bc0:	4b1a      	ldr	r3, [pc, #104]	; (80c2c <spi_master_transfer+0x90>)
   80bc2:	61bb      	str	r3, [r7, #24]
    dmac_trans.ul_descriptor_addr = 0;
   80bc4:	2300      	movs	r3, #0
   80bc6:	61fb      	str	r3, [r7, #28]
    dmac_channel_single_buf_transfer_init(DMAC, 1, &dmac_trans);
   80bc8:	f107 030c 	add.w	r3, r7, #12
   80bcc:	461a      	mov	r2, r3
   80bce:	2101      	movs	r1, #1
   80bd0:	4813      	ldr	r0, [pc, #76]	; (80c20 <spi_master_transfer+0x84>)
   80bd2:	4b17      	ldr	r3, [pc, #92]	; (80c30 <spi_master_transfer+0x94>)
   80bd4:	4798      	blx	r3
    dmac_channel_enable(DMAC, 1);
   80bd6:	2101      	movs	r1, #1
   80bd8:	4811      	ldr	r0, [pc, #68]	; (80c20 <spi_master_transfer+0x84>)
   80bda:	4b16      	ldr	r3, [pc, #88]	; (80c34 <spi_master_transfer+0x98>)
   80bdc:	4798      	blx	r3

    dmac_channel_disable(DMAC, 0);
   80bde:	2100      	movs	r1, #0
   80be0:	480f      	ldr	r0, [pc, #60]	; (80c20 <spi_master_transfer+0x84>)
   80be2:	4b10      	ldr	r3, [pc, #64]	; (80c24 <spi_master_transfer+0x88>)
   80be4:	4798      	blx	r3
    dmac_trans.ul_source_addr = (uint32_t) & USART1->US_RHR;
   80be6:	4b14      	ldr	r3, [pc, #80]	; (80c38 <spi_master_transfer+0x9c>)
   80be8:	60fb      	str	r3, [r7, #12]
    dmac_trans.ul_destination_addr = (uint32_t) p_buf;
   80bea:	687b      	ldr	r3, [r7, #4]
   80bec:	613b      	str	r3, [r7, #16]
    dmac_trans.ul_ctrlA = ul_size | DMAC_CTRLA_SRC_WIDTH_BYTE | DMAC_CTRLA_DST_WIDTH_BYTE;
   80bee:	683b      	ldr	r3, [r7, #0]
   80bf0:	617b      	str	r3, [r7, #20]
    dmac_trans.ul_ctrlB = DMAC_CTRLB_SRC_DSCR | DMAC_CTRLB_DST_DSCR | DMAC_CTRLB_FC_PER2MEM_DMA_FC | DMAC_CTRLB_SRC_INCR_FIXED | DMAC_CTRLB_DST_INCR_INCREMENTING;
   80bf2:	4b12      	ldr	r3, [pc, #72]	; (80c3c <spi_master_transfer+0xa0>)
   80bf4:	61bb      	str	r3, [r7, #24]
    dmac_trans.ul_descriptor_addr = 0;
   80bf6:	2300      	movs	r3, #0
   80bf8:	61fb      	str	r3, [r7, #28]
    dmac_channel_single_buf_transfer_init(DMAC, 0, (dma_transfer_descriptor_t *) & dmac_trans);
   80bfa:	f107 030c 	add.w	r3, r7, #12
   80bfe:	461a      	mov	r2, r3
   80c00:	2100      	movs	r1, #0
   80c02:	4807      	ldr	r0, [pc, #28]	; (80c20 <spi_master_transfer+0x84>)
   80c04:	4b0a      	ldr	r3, [pc, #40]	; (80c30 <spi_master_transfer+0x94>)
   80c06:	4798      	blx	r3
    dmac_channel_enable(DMAC, 0);
   80c08:	2100      	movs	r1, #0
   80c0a:	4805      	ldr	r0, [pc, #20]	; (80c20 <spi_master_transfer+0x84>)
   80c0c:	4b09      	ldr	r3, [pc, #36]	; (80c34 <spi_master_transfer+0x98>)
   80c0e:	4798      	blx	r3
}
   80c10:	bf00      	nop
   80c12:	3720      	adds	r7, #32
   80c14:	46bd      	mov	sp, r7
   80c16:	bd80      	pop	{r7, pc}
   80c18:	4009c000 	.word	0x4009c000
   80c1c:	000809ed 	.word	0x000809ed
   80c20:	400c4000 	.word	0x400c4000
   80c24:	000835db 	.word	0x000835db
   80c28:	4009c01c 	.word	0x4009c01c
   80c2c:	20310000 	.word	0x20310000
   80c30:	000836f5 	.word	0x000836f5
   80c34:	000835bd 	.word	0x000835bd
   80c38:	4009c018 	.word	0x4009c018
   80c3c:	02510000 	.word	0x02510000

00080c40 <configure_dmac>:

void configure_dmac(void)
{
   80c40:	b580      	push	{r7, lr}
   80c42:	b082      	sub	sp, #8
   80c44:	af00      	add	r7, sp, #0
    uint32_t ul_cfg;

    /* Initialize and enable DMA controller. */
    pmc_enable_periph_clk(ID_DMAC);
   80c46:	2027      	movs	r0, #39	; 0x27
   80c48:	4b18      	ldr	r3, [pc, #96]	; (80cac <configure_dmac+0x6c>)
   80c4a:	4798      	blx	r3
    dmac_init(DMAC);
   80c4c:	4818      	ldr	r0, [pc, #96]	; (80cb0 <configure_dmac+0x70>)
   80c4e:	4b19      	ldr	r3, [pc, #100]	; (80cb4 <configure_dmac+0x74>)
   80c50:	4798      	blx	r3
    dmac_set_priority_mode(DMAC, DMAC_PRIORITY_ROUND_ROBIN);
   80c52:	2110      	movs	r1, #16
   80c54:	4816      	ldr	r0, [pc, #88]	; (80cb0 <configure_dmac+0x70>)
   80c56:	4b18      	ldr	r3, [pc, #96]	; (80cb8 <configure_dmac+0x78>)
   80c58:	4798      	blx	r3
    dmac_enable(DMAC);
   80c5a:	4815      	ldr	r0, [pc, #84]	; (80cb0 <configure_dmac+0x70>)
   80c5c:	4b17      	ldr	r3, [pc, #92]	; (80cbc <configure_dmac+0x7c>)
   80c5e:	4798      	blx	r3

    /* Configure DMA RX channel. */
    ul_cfg = 0;
   80c60:	2300      	movs	r3, #0
   80c62:	607b      	str	r3, [r7, #4]
    ul_cfg |= DMAC_CFG_SRC_PER(14) | DMAC_CFG_SRC_H2SEL | DMAC_CFG_SOD | DMAC_CFG_FIFOCFG_ALAP_CFG;
   80c64:	687b      	ldr	r3, [r7, #4]
   80c66:	f443 3381 	orr.w	r3, r3, #66048	; 0x10200
   80c6a:	f043 030e 	orr.w	r3, r3, #14
   80c6e:	607b      	str	r3, [r7, #4]
    dmac_channel_set_configuration(DMAC, 0, ul_cfg);
   80c70:	687a      	ldr	r2, [r7, #4]
   80c72:	2100      	movs	r1, #0
   80c74:	480e      	ldr	r0, [pc, #56]	; (80cb0 <configure_dmac+0x70>)
   80c76:	4b12      	ldr	r3, [pc, #72]	; (80cc0 <configure_dmac+0x80>)
   80c78:	4798      	blx	r3

    /* Configure DMA TX channel. */
    ul_cfg = 0;
   80c7a:	2300      	movs	r3, #0
   80c7c:	607b      	str	r3, [r7, #4]
    ul_cfg |= DMAC_CFG_DST_PER(13) | DMAC_CFG_DST_H2SEL | DMAC_CFG_SOD | DMAC_CFG_FIFOCFG_ALAP_CFG;
   80c7e:	687b      	ldr	r3, [r7, #4]
   80c80:	f443 3390 	orr.w	r3, r3, #73728	; 0x12000
   80c84:	f043 03d0 	orr.w	r3, r3, #208	; 0xd0
   80c88:	607b      	str	r3, [r7, #4]
    dmac_channel_set_configuration(DMAC, 1, ul_cfg);
   80c8a:	687a      	ldr	r2, [r7, #4]
   80c8c:	2101      	movs	r1, #1
   80c8e:	4808      	ldr	r0, [pc, #32]	; (80cb0 <configure_dmac+0x70>)
   80c90:	4b0b      	ldr	r3, [pc, #44]	; (80cc0 <configure_dmac+0x80>)
   80c92:	4798      	blx	r3
    ul_cfg = 0;
    ul_cfg |= DMAC_CFG_DST_PER(1) | DMAC_CFG_DST_H2SEL | DMAC_CFG_SOD | DMAC_CFG_FIFOCFG_ALAP_CFG;
    dmac_channel_set_configuration(DMAC, 4, ul_cfg);
    #endif
    /* Enable receive channel interrupt for DMAC. */
    NVIC_EnableIRQ(DMAC_IRQn);
   80c94:	2027      	movs	r0, #39	; 0x27
   80c96:	4b0b      	ldr	r3, [pc, #44]	; (80cc4 <configure_dmac+0x84>)
   80c98:	4798      	blx	r3
    dmac_enable_interrupt(DMAC, (1 << 0));
   80c9a:	2101      	movs	r1, #1
   80c9c:	4804      	ldr	r0, [pc, #16]	; (80cb0 <configure_dmac+0x70>)
   80c9e:	4b0a      	ldr	r3, [pc, #40]	; (80cc8 <configure_dmac+0x88>)
   80ca0:	4798      	blx	r3
}
   80ca2:	bf00      	nop
   80ca4:	3708      	adds	r7, #8
   80ca6:	46bd      	mov	sp, r7
   80ca8:	bd80      	pop	{r7, pc}
   80caa:	bf00      	nop
   80cac:	00083999 	.word	0x00083999
   80cb0:	400c4000 	.word	0x400c4000
   80cb4:	00083515 	.word	0x00083515
   80cb8:	00083531 	.word	0x00083531
   80cbc:	00083557 	.word	0x00083557
   80cc0:	000836cb 	.word	0x000836cb
   80cc4:	00080a41 	.word	0x00080a41
   80cc8:	0008358d 	.word	0x0008358d

00080ccc <DMAC_Handler>:

void DMAC_Handler(void)
{
   80ccc:	b580      	push	{r7, lr}
   80cce:	af00      	add	r7, sp, #0
    static uint32_t ul_status;

    ul_status = dmac_get_status(DMAC);
   80cd0:	480b      	ldr	r0, [pc, #44]	; (80d00 <DMAC_Handler+0x34>)
   80cd2:	4b0c      	ldr	r3, [pc, #48]	; (80d04 <DMAC_Handler+0x38>)
   80cd4:	4798      	blx	r3
   80cd6:	4602      	mov	r2, r0
   80cd8:	4b0b      	ldr	r3, [pc, #44]	; (80d08 <DMAC_Handler+0x3c>)
   80cda:	601a      	str	r2, [r3, #0]
    
    if (ul_status & (1 << 0))
   80cdc:	4b0a      	ldr	r3, [pc, #40]	; (80d08 <DMAC_Handler+0x3c>)
   80cde:	681b      	ldr	r3, [r3, #0]
   80ce0:	f003 0301 	and.w	r3, r3, #1
   80ce4:	2b00      	cmp	r3, #0
   80ce6:	d008      	beq.n	80cfa <DMAC_Handler+0x2e>
    {
        usart_spi_release_chip_select(USART1);
   80ce8:	4808      	ldr	r0, [pc, #32]	; (80d0c <DMAC_Handler+0x40>)
   80cea:	4b09      	ldr	r3, [pc, #36]	; (80d10 <DMAC_Handler+0x44>)
   80cec:	4798      	blx	r3
        memcpy(&stm, &sens_buf, sizeof(stm));
   80cee:	4b09      	ldr	r3, [pc, #36]	; (80d14 <DMAC_Handler+0x48>)
   80cf0:	4a09      	ldr	r2, [pc, #36]	; (80d18 <DMAC_Handler+0x4c>)
   80cf2:	8811      	ldrh	r1, [r2, #0]
   80cf4:	7892      	ldrb	r2, [r2, #2]
   80cf6:	8019      	strh	r1, [r3, #0]
   80cf8:	709a      	strb	r2, [r3, #2]
    }
}
   80cfa:	bf00      	nop
   80cfc:	bd80      	pop	{r7, pc}
   80cfe:	bf00      	nop
   80d00:	400c4000 	.word	0x400c4000
   80d04:	000835a7 	.word	0x000835a7
   80d08:	20070b94 	.word	0x20070b94
   80d0c:	4009c000 	.word	0x4009c000
   80d10:	00080a07 	.word	0x00080a07
   80d14:	20070e34 	.word	0x20070e34
   80d18:	20070e2c 	.word	0x20070e2c

00080d1c <NVIC_EnableIRQ>:
   80d1c:	b480      	push	{r7}
   80d1e:	b083      	sub	sp, #12
   80d20:	af00      	add	r7, sp, #0
   80d22:	4603      	mov	r3, r0
   80d24:	71fb      	strb	r3, [r7, #7]
   80d26:	4908      	ldr	r1, [pc, #32]	; (80d48 <NVIC_EnableIRQ+0x2c>)
   80d28:	f997 3007 	ldrsb.w	r3, [r7, #7]
   80d2c:	095b      	lsrs	r3, r3, #5
   80d2e:	79fa      	ldrb	r2, [r7, #7]
   80d30:	f002 021f 	and.w	r2, r2, #31
   80d34:	2001      	movs	r0, #1
   80d36:	fa00 f202 	lsl.w	r2, r0, r2
   80d3a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
   80d3e:	bf00      	nop
   80d40:	370c      	adds	r7, #12
   80d42:	46bd      	mov	sp, r7
   80d44:	bc80      	pop	{r7}
   80d46:	4770      	bx	lr
   80d48:	e000e100 	.word	0xe000e100

00080d4c <NVIC_ClearPendingIRQ>:
   80d4c:	b480      	push	{r7}
   80d4e:	b083      	sub	sp, #12
   80d50:	af00      	add	r7, sp, #0
   80d52:	4603      	mov	r3, r0
   80d54:	71fb      	strb	r3, [r7, #7]
   80d56:	4909      	ldr	r1, [pc, #36]	; (80d7c <NVIC_ClearPendingIRQ+0x30>)
   80d58:	f997 3007 	ldrsb.w	r3, [r7, #7]
   80d5c:	095b      	lsrs	r3, r3, #5
   80d5e:	79fa      	ldrb	r2, [r7, #7]
   80d60:	f002 021f 	and.w	r2, r2, #31
   80d64:	2001      	movs	r0, #1
   80d66:	fa00 f202 	lsl.w	r2, r0, r2
   80d6a:	3360      	adds	r3, #96	; 0x60
   80d6c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
   80d70:	bf00      	nop
   80d72:	370c      	adds	r7, #12
   80d74:	46bd      	mov	sp, r7
   80d76:	bc80      	pop	{r7}
   80d78:	4770      	bx	lr
   80d7a:	bf00      	nop
   80d7c:	e000e100 	.word	0xe000e100

00080d80 <twi_enable_master_mode>:
   80d80:	b480      	push	{r7}
   80d82:	b083      	sub	sp, #12
   80d84:	af00      	add	r7, sp, #0
   80d86:	6078      	str	r0, [r7, #4]
   80d88:	687b      	ldr	r3, [r7, #4]
   80d8a:	2208      	movs	r2, #8
   80d8c:	601a      	str	r2, [r3, #0]
   80d8e:	687b      	ldr	r3, [r7, #4]
   80d90:	2220      	movs	r2, #32
   80d92:	601a      	str	r2, [r3, #0]
   80d94:	687b      	ldr	r3, [r7, #4]
   80d96:	2204      	movs	r2, #4
   80d98:	601a      	str	r2, [r3, #0]
   80d9a:	bf00      	nop
   80d9c:	370c      	adds	r7, #12
   80d9e:	46bd      	mov	sp, r7
   80da0:	bc80      	pop	{r7}
   80da2:	4770      	bx	lr

00080da4 <twi_master_init>:
   80da4:	b580      	push	{r7, lr}
   80da6:	b084      	sub	sp, #16
   80da8:	af00      	add	r7, sp, #0
   80daa:	6078      	str	r0, [r7, #4]
   80dac:	6039      	str	r1, [r7, #0]
   80dae:	2300      	movs	r3, #0
   80db0:	60fb      	str	r3, [r7, #12]
   80db2:	687b      	ldr	r3, [r7, #4]
   80db4:	f04f 32ff 	mov.w	r2, #4294967295
   80db8:	629a      	str	r2, [r3, #40]	; 0x28
   80dba:	687b      	ldr	r3, [r7, #4]
   80dbc:	6a1b      	ldr	r3, [r3, #32]
   80dbe:	f04f 31ff 	mov.w	r1, #4294967295
   80dc2:	6878      	ldr	r0, [r7, #4]
   80dc4:	4b14      	ldr	r3, [pc, #80]	; (80e18 <twi_master_init+0x74>)
   80dc6:	4798      	blx	r3
   80dc8:	6878      	ldr	r0, [r7, #4]
   80dca:	4b14      	ldr	r3, [pc, #80]	; (80e1c <twi_master_init+0x78>)
   80dcc:	4798      	blx	r3
   80dce:	6878      	ldr	r0, [r7, #4]
   80dd0:	4b13      	ldr	r3, [pc, #76]	; (80e20 <twi_master_init+0x7c>)
   80dd2:	4798      	blx	r3
   80dd4:	683b      	ldr	r3, [r7, #0]
   80dd6:	6859      	ldr	r1, [r3, #4]
   80dd8:	683b      	ldr	r3, [r7, #0]
   80dda:	681b      	ldr	r3, [r3, #0]
   80ddc:	461a      	mov	r2, r3
   80dde:	6878      	ldr	r0, [r7, #4]
   80de0:	4b10      	ldr	r3, [pc, #64]	; (80e24 <twi_master_init+0x80>)
   80de2:	4798      	blx	r3
   80de4:	4603      	mov	r3, r0
   80de6:	2b01      	cmp	r3, #1
   80de8:	d101      	bne.n	80dee <twi_master_init+0x4a>
   80dea:	2301      	movs	r3, #1
   80dec:	60fb      	str	r3, [r7, #12]
   80dee:	683b      	ldr	r3, [r7, #0]
   80df0:	7a5b      	ldrb	r3, [r3, #9]
   80df2:	2b01      	cmp	r3, #1
   80df4:	d102      	bne.n	80dfc <twi_master_init+0x58>
   80df6:	687b      	ldr	r3, [r7, #4]
   80df8:	2240      	movs	r2, #64	; 0x40
   80dfa:	601a      	str	r2, [r3, #0]
   80dfc:	f44f 7150 	mov.w	r1, #832	; 0x340
   80e00:	6878      	ldr	r0, [r7, #4]
   80e02:	4b09      	ldr	r3, [pc, #36]	; (80e28 <twi_master_init+0x84>)
   80e04:	4798      	blx	r3
   80e06:	4b09      	ldr	r3, [pc, #36]	; (80e2c <twi_master_init+0x88>)
   80e08:	2200      	movs	r2, #0
   80e0a:	701a      	strb	r2, [r3, #0]
   80e0c:	68fb      	ldr	r3, [r7, #12]
   80e0e:	4618      	mov	r0, r3
   80e10:	3710      	adds	r7, #16
   80e12:	46bd      	mov	sp, r7
   80e14:	bd80      	pop	{r7, pc}
   80e16:	bf00      	nop
   80e18:	00081377 	.word	0x00081377
   80e1c:	000813d9 	.word	0x000813d9
   80e20:	00080d81 	.word	0x00080d81
   80e24:	00080e31 	.word	0x00080e31
   80e28:	0008135d 	.word	0x0008135d
   80e2c:	20070db8 	.word	0x20070db8

00080e30 <twi_set_speed>:
   80e30:	b480      	push	{r7}
   80e32:	b089      	sub	sp, #36	; 0x24
   80e34:	af00      	add	r7, sp, #0
   80e36:	60f8      	str	r0, [r7, #12]
   80e38:	60b9      	str	r1, [r7, #8]
   80e3a:	607a      	str	r2, [r7, #4]
   80e3c:	2300      	movs	r3, #0
   80e3e:	61fb      	str	r3, [r7, #28]
   80e40:	68bb      	ldr	r3, [r7, #8]
   80e42:	4a34      	ldr	r2, [pc, #208]	; (80f14 <twi_set_speed+0xe4>)
   80e44:	4293      	cmp	r3, r2
   80e46:	d901      	bls.n	80e4c <twi_set_speed+0x1c>
   80e48:	2301      	movs	r3, #1
   80e4a:	e05d      	b.n	80f08 <twi_set_speed+0xd8>
   80e4c:	68bb      	ldr	r3, [r7, #8]
   80e4e:	4a32      	ldr	r2, [pc, #200]	; (80f18 <twi_set_speed+0xe8>)
   80e50:	4293      	cmp	r3, r2
   80e52:	d937      	bls.n	80ec4 <twi_set_speed+0x94>
   80e54:	687b      	ldr	r3, [r7, #4]
   80e56:	4a31      	ldr	r2, [pc, #196]	; (80f1c <twi_set_speed+0xec>)
   80e58:	fba2 2303 	umull	r2, r3, r2, r3
   80e5c:	0b9b      	lsrs	r3, r3, #14
   80e5e:	3b04      	subs	r3, #4
   80e60:	617b      	str	r3, [r7, #20]
   80e62:	68ba      	ldr	r2, [r7, #8]
   80e64:	4b2e      	ldr	r3, [pc, #184]	; (80f20 <twi_set_speed+0xf0>)
   80e66:	4413      	add	r3, r2
   80e68:	009b      	lsls	r3, r3, #2
   80e6a:	687a      	ldr	r2, [r7, #4]
   80e6c:	fbb2 f3f3 	udiv	r3, r2, r3
   80e70:	3b04      	subs	r3, #4
   80e72:	613b      	str	r3, [r7, #16]
   80e74:	e005      	b.n	80e82 <twi_set_speed+0x52>
   80e76:	69fb      	ldr	r3, [r7, #28]
   80e78:	3301      	adds	r3, #1
   80e7a:	61fb      	str	r3, [r7, #28]
   80e7c:	697b      	ldr	r3, [r7, #20]
   80e7e:	085b      	lsrs	r3, r3, #1
   80e80:	617b      	str	r3, [r7, #20]
   80e82:	697b      	ldr	r3, [r7, #20]
   80e84:	2bff      	cmp	r3, #255	; 0xff
   80e86:	d909      	bls.n	80e9c <twi_set_speed+0x6c>
   80e88:	69fb      	ldr	r3, [r7, #28]
   80e8a:	2b06      	cmp	r3, #6
   80e8c:	d9f3      	bls.n	80e76 <twi_set_speed+0x46>
   80e8e:	e005      	b.n	80e9c <twi_set_speed+0x6c>
   80e90:	69fb      	ldr	r3, [r7, #28]
   80e92:	3301      	adds	r3, #1
   80e94:	61fb      	str	r3, [r7, #28]
   80e96:	693b      	ldr	r3, [r7, #16]
   80e98:	085b      	lsrs	r3, r3, #1
   80e9a:	613b      	str	r3, [r7, #16]
   80e9c:	693b      	ldr	r3, [r7, #16]
   80e9e:	2bff      	cmp	r3, #255	; 0xff
   80ea0:	d902      	bls.n	80ea8 <twi_set_speed+0x78>
   80ea2:	69fb      	ldr	r3, [r7, #28]
   80ea4:	2b06      	cmp	r3, #6
   80ea6:	d9f3      	bls.n	80e90 <twi_set_speed+0x60>
   80ea8:	697b      	ldr	r3, [r7, #20]
   80eaa:	b2da      	uxtb	r2, r3
   80eac:	693b      	ldr	r3, [r7, #16]
   80eae:	021b      	lsls	r3, r3, #8
   80eb0:	b29b      	uxth	r3, r3
   80eb2:	431a      	orrs	r2, r3
   80eb4:	69fb      	ldr	r3, [r7, #28]
   80eb6:	041b      	lsls	r3, r3, #16
   80eb8:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
   80ebc:	431a      	orrs	r2, r3
   80ebe:	68fb      	ldr	r3, [r7, #12]
   80ec0:	611a      	str	r2, [r3, #16]
   80ec2:	e020      	b.n	80f06 <twi_set_speed+0xd6>
   80ec4:	68bb      	ldr	r3, [r7, #8]
   80ec6:	005b      	lsls	r3, r3, #1
   80ec8:	687a      	ldr	r2, [r7, #4]
   80eca:	fbb2 f3f3 	udiv	r3, r2, r3
   80ece:	3b04      	subs	r3, #4
   80ed0:	61bb      	str	r3, [r7, #24]
   80ed2:	e005      	b.n	80ee0 <twi_set_speed+0xb0>
   80ed4:	69fb      	ldr	r3, [r7, #28]
   80ed6:	3301      	adds	r3, #1
   80ed8:	61fb      	str	r3, [r7, #28]
   80eda:	69bb      	ldr	r3, [r7, #24]
   80edc:	085b      	lsrs	r3, r3, #1
   80ede:	61bb      	str	r3, [r7, #24]
   80ee0:	69bb      	ldr	r3, [r7, #24]
   80ee2:	2bff      	cmp	r3, #255	; 0xff
   80ee4:	d902      	bls.n	80eec <twi_set_speed+0xbc>
   80ee6:	69fb      	ldr	r3, [r7, #28]
   80ee8:	2b06      	cmp	r3, #6
   80eea:	d9f3      	bls.n	80ed4 <twi_set_speed+0xa4>
   80eec:	69bb      	ldr	r3, [r7, #24]
   80eee:	b2da      	uxtb	r2, r3
   80ef0:	69bb      	ldr	r3, [r7, #24]
   80ef2:	021b      	lsls	r3, r3, #8
   80ef4:	b29b      	uxth	r3, r3
   80ef6:	431a      	orrs	r2, r3
   80ef8:	69fb      	ldr	r3, [r7, #28]
   80efa:	041b      	lsls	r3, r3, #16
   80efc:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
   80f00:	431a      	orrs	r2, r3
   80f02:	68fb      	ldr	r3, [r7, #12]
   80f04:	611a      	str	r2, [r3, #16]
   80f06:	2300      	movs	r3, #0
   80f08:	4618      	mov	r0, r3
   80f0a:	3724      	adds	r7, #36	; 0x24
   80f0c:	46bd      	mov	sp, r7
   80f0e:	bc80      	pop	{r7}
   80f10:	4770      	bx	lr
   80f12:	bf00      	nop
   80f14:	00061a80 	.word	0x00061a80
   80f18:	0005dc00 	.word	0x0005dc00
   80f1c:	057619f1 	.word	0x057619f1
   80f20:	3ffd1200 	.word	0x3ffd1200

00080f24 <twi_mk_addr>:
   80f24:	b480      	push	{r7}
   80f26:	b085      	sub	sp, #20
   80f28:	af00      	add	r7, sp, #0
   80f2a:	6078      	str	r0, [r7, #4]
   80f2c:	6039      	str	r1, [r7, #0]
   80f2e:	683b      	ldr	r3, [r7, #0]
   80f30:	2b00      	cmp	r3, #0
   80f32:	d101      	bne.n	80f38 <twi_mk_addr+0x14>
   80f34:	2300      	movs	r3, #0
   80f36:	e01d      	b.n	80f74 <twi_mk_addr+0x50>
   80f38:	687b      	ldr	r3, [r7, #4]
   80f3a:	781b      	ldrb	r3, [r3, #0]
   80f3c:	60fb      	str	r3, [r7, #12]
   80f3e:	683b      	ldr	r3, [r7, #0]
   80f40:	2b01      	cmp	r3, #1
   80f42:	dd09      	ble.n	80f58 <twi_mk_addr+0x34>
   80f44:	68fb      	ldr	r3, [r7, #12]
   80f46:	021b      	lsls	r3, r3, #8
   80f48:	60fb      	str	r3, [r7, #12]
   80f4a:	687b      	ldr	r3, [r7, #4]
   80f4c:	3301      	adds	r3, #1
   80f4e:	781b      	ldrb	r3, [r3, #0]
   80f50:	461a      	mov	r2, r3
   80f52:	68fb      	ldr	r3, [r7, #12]
   80f54:	4313      	orrs	r3, r2
   80f56:	60fb      	str	r3, [r7, #12]
   80f58:	683b      	ldr	r3, [r7, #0]
   80f5a:	2b02      	cmp	r3, #2
   80f5c:	dd09      	ble.n	80f72 <twi_mk_addr+0x4e>
   80f5e:	68fb      	ldr	r3, [r7, #12]
   80f60:	021b      	lsls	r3, r3, #8
   80f62:	60fb      	str	r3, [r7, #12]
   80f64:	687b      	ldr	r3, [r7, #4]
   80f66:	3302      	adds	r3, #2
   80f68:	781b      	ldrb	r3, [r3, #0]
   80f6a:	461a      	mov	r2, r3
   80f6c:	68fb      	ldr	r3, [r7, #12]
   80f6e:	4313      	orrs	r3, r2
   80f70:	60fb      	str	r3, [r7, #12]
   80f72:	68fb      	ldr	r3, [r7, #12]
   80f74:	4618      	mov	r0, r3
   80f76:	3714      	adds	r7, #20
   80f78:	46bd      	mov	sp, r7
   80f7a:	bc80      	pop	{r7}
   80f7c:	4770      	bx	lr
	...

00080f80 <twi_is_busy>:
   80f80:	b480      	push	{r7}
   80f82:	af00      	add	r7, sp, #0
   80f84:	4b02      	ldr	r3, [pc, #8]	; (80f90 <twi_is_busy+0x10>)
   80f86:	781b      	ldrb	r3, [r3, #0]
   80f88:	4618      	mov	r0, r3
   80f8a:	46bd      	mov	sp, r7
   80f8c:	bc80      	pop	{r7}
   80f8e:	4770      	bx	lr
   80f90:	20070db8 	.word	0x20070db8

00080f94 <twi_get_tx_packet>:
   80f94:	b480      	push	{r7}
   80f96:	af00      	add	r7, sp, #0
   80f98:	4b02      	ldr	r3, [pc, #8]	; (80fa4 <twi_get_tx_packet+0x10>)
   80f9a:	4618      	mov	r0, r3
   80f9c:	46bd      	mov	sp, r7
   80f9e:	bc80      	pop	{r7}
   80fa0:	4770      	bx	lr
   80fa2:	bf00      	nop
   80fa4:	20070b98 	.word	0x20070b98

00080fa8 <twi_get_rx_packet>:
   80fa8:	b480      	push	{r7}
   80faa:	af00      	add	r7, sp, #0
   80fac:	4b02      	ldr	r3, [pc, #8]	; (80fb8 <twi_get_rx_packet+0x10>)
   80fae:	4618      	mov	r0, r3
   80fb0:	46bd      	mov	sp, r7
   80fb2:	bc80      	pop	{r7}
   80fb4:	4770      	bx	lr
   80fb6:	bf00      	nop
   80fb8:	20070ca8 	.word	0x20070ca8

00080fbc <twi_pdc_master_read>:
   80fbc:	b580      	push	{r7, lr}
   80fbe:	b084      	sub	sp, #16
   80fc0:	af00      	add	r7, sp, #0
   80fc2:	6078      	str	r0, [r7, #4]
   80fc4:	6039      	str	r1, [r7, #0]
   80fc6:	683b      	ldr	r3, [r7, #0]
   80fc8:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   80fcc:	2b00      	cmp	r3, #0
   80fce:	d101      	bne.n	80fd4 <twi_pdc_master_read+0x18>
   80fd0:	2301      	movs	r3, #1
   80fd2:	e047      	b.n	81064 <twi_pdc_master_read+0xa8>
   80fd4:	4b25      	ldr	r3, [pc, #148]	; (8106c <twi_pdc_master_read+0xb0>)
   80fd6:	2201      	movs	r2, #1
   80fd8:	701a      	strb	r2, [r3, #0]
   80fda:	4825      	ldr	r0, [pc, #148]	; (81070 <twi_pdc_master_read+0xb4>)
   80fdc:	4b25      	ldr	r3, [pc, #148]	; (81074 <twi_pdc_master_read+0xb8>)
   80fde:	4798      	blx	r3
   80fe0:	687b      	ldr	r3, [r7, #4]
   80fe2:	2200      	movs	r2, #0
   80fe4:	605a      	str	r2, [r3, #4]
   80fe6:	683b      	ldr	r3, [r7, #0]
   80fe8:	f893 310c 	ldrb.w	r3, [r3, #268]	; 0x10c
   80fec:	041b      	lsls	r3, r3, #16
   80fee:	f403 02fe 	and.w	r2, r3, #8323072	; 0x7f0000
   80ff2:	683b      	ldr	r3, [r7, #0]
   80ff4:	685b      	ldr	r3, [r3, #4]
   80ff6:	021b      	lsls	r3, r3, #8
   80ff8:	f403 7340 	and.w	r3, r3, #768	; 0x300
   80ffc:	4313      	orrs	r3, r2
   80ffe:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
   81002:	687b      	ldr	r3, [r7, #4]
   81004:	605a      	str	r2, [r3, #4]
   81006:	687b      	ldr	r3, [r7, #4]
   81008:	2200      	movs	r2, #0
   8100a:	60da      	str	r2, [r3, #12]
   8100c:	683a      	ldr	r2, [r7, #0]
   8100e:	683b      	ldr	r3, [r7, #0]
   81010:	685b      	ldr	r3, [r3, #4]
   81012:	4619      	mov	r1, r3
   81014:	4610      	mov	r0, r2
   81016:	4b18      	ldr	r3, [pc, #96]	; (81078 <twi_pdc_master_read+0xbc>)
   81018:	4798      	blx	r3
   8101a:	4602      	mov	r2, r0
   8101c:	687b      	ldr	r3, [r7, #4]
   8101e:	60da      	str	r2, [r3, #12]
   81020:	683b      	ldr	r3, [r7, #0]
   81022:	3308      	adds	r3, #8
   81024:	60bb      	str	r3, [r7, #8]
   81026:	683b      	ldr	r3, [r7, #0]
   81028:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   8102c:	3b01      	subs	r3, #1
   8102e:	60fb      	str	r3, [r7, #12]
   81030:	f107 0308 	add.w	r3, r7, #8
   81034:	2200      	movs	r2, #0
   81036:	4619      	mov	r1, r3
   81038:	4810      	ldr	r0, [pc, #64]	; (8107c <twi_pdc_master_read+0xc0>)
   8103a:	4b11      	ldr	r3, [pc, #68]	; (81080 <twi_pdc_master_read+0xc4>)
   8103c:	4798      	blx	r3
   8103e:	2101      	movs	r1, #1
   81040:	480e      	ldr	r0, [pc, #56]	; (8107c <twi_pdc_master_read+0xc0>)
   81042:	4b10      	ldr	r3, [pc, #64]	; (81084 <twi_pdc_master_read+0xc8>)
   81044:	4798      	blx	r3
   81046:	4b0a      	ldr	r3, [pc, #40]	; (81070 <twi_pdc_master_read+0xb4>)
   81048:	2201      	movs	r2, #1
   8104a:	601a      	str	r2, [r3, #0]
   8104c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81050:	6878      	ldr	r0, [r7, #4]
   81052:	4b0d      	ldr	r3, [pc, #52]	; (81088 <twi_pdc_master_read+0xcc>)
   81054:	4798      	blx	r3
   81056:	2016      	movs	r0, #22
   81058:	4b0c      	ldr	r3, [pc, #48]	; (8108c <twi_pdc_master_read+0xd0>)
   8105a:	4798      	blx	r3
   8105c:	2016      	movs	r0, #22
   8105e:	4b0c      	ldr	r3, [pc, #48]	; (81090 <twi_pdc_master_read+0xd4>)
   81060:	4798      	blx	r3
   81062:	2300      	movs	r3, #0
   81064:	4618      	mov	r0, r3
   81066:	3710      	adds	r7, #16
   81068:	46bd      	mov	sp, r7
   8106a:	bd80      	pop	{r7, pc}
   8106c:	20070db8 	.word	0x20070db8
   81070:	4008c000 	.word	0x4008c000
   81074:	000813c1 	.word	0x000813c1
   81078:	00080f25 	.word	0x00080f25
   8107c:	4008c100 	.word	0x4008c100
   81080:	00080273 	.word	0x00080273
   81084:	000802b5 	.word	0x000802b5
   81088:	0008135d 	.word	0x0008135d
   8108c:	00080d4d 	.word	0x00080d4d
   81090:	00080d1d 	.word	0x00080d1d

00081094 <twi_pdc_master_write>:
   81094:	b580      	push	{r7, lr}
   81096:	b084      	sub	sp, #16
   81098:	af00      	add	r7, sp, #0
   8109a:	6078      	str	r0, [r7, #4]
   8109c:	6039      	str	r1, [r7, #0]
   8109e:	683b      	ldr	r3, [r7, #0]
   810a0:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   810a4:	2b00      	cmp	r3, #0
   810a6:	d101      	bne.n	810ac <twi_pdc_master_write+0x18>
   810a8:	2301      	movs	r3, #1
   810aa:	e040      	b.n	8112e <twi_pdc_master_write+0x9a>
   810ac:	4b22      	ldr	r3, [pc, #136]	; (81138 <twi_pdc_master_write+0xa4>)
   810ae:	2201      	movs	r2, #1
   810b0:	701a      	strb	r2, [r3, #0]
   810b2:	683b      	ldr	r3, [r7, #0]
   810b4:	3308      	adds	r3, #8
   810b6:	60bb      	str	r3, [r7, #8]
   810b8:	683b      	ldr	r3, [r7, #0]
   810ba:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   810be:	3b01      	subs	r3, #1
   810c0:	60fb      	str	r3, [r7, #12]
   810c2:	f107 0308 	add.w	r3, r7, #8
   810c6:	2200      	movs	r2, #0
   810c8:	4619      	mov	r1, r3
   810ca:	481c      	ldr	r0, [pc, #112]	; (8113c <twi_pdc_master_write+0xa8>)
   810cc:	4b1c      	ldr	r3, [pc, #112]	; (81140 <twi_pdc_master_write+0xac>)
   810ce:	4798      	blx	r3
   810d0:	687b      	ldr	r3, [r7, #4]
   810d2:	2200      	movs	r2, #0
   810d4:	605a      	str	r2, [r3, #4]
   810d6:	683b      	ldr	r3, [r7, #0]
   810d8:	f893 310c 	ldrb.w	r3, [r3, #268]	; 0x10c
   810dc:	041b      	lsls	r3, r3, #16
   810de:	f403 02fe 	and.w	r2, r3, #8323072	; 0x7f0000
   810e2:	683b      	ldr	r3, [r7, #0]
   810e4:	685b      	ldr	r3, [r3, #4]
   810e6:	021b      	lsls	r3, r3, #8
   810e8:	f403 7340 	and.w	r3, r3, #768	; 0x300
   810ec:	431a      	orrs	r2, r3
   810ee:	687b      	ldr	r3, [r7, #4]
   810f0:	605a      	str	r2, [r3, #4]
   810f2:	687b      	ldr	r3, [r7, #4]
   810f4:	2200      	movs	r2, #0
   810f6:	60da      	str	r2, [r3, #12]
   810f8:	683a      	ldr	r2, [r7, #0]
   810fa:	683b      	ldr	r3, [r7, #0]
   810fc:	685b      	ldr	r3, [r3, #4]
   810fe:	4619      	mov	r1, r3
   81100:	4610      	mov	r0, r2
   81102:	4b10      	ldr	r3, [pc, #64]	; (81144 <twi_pdc_master_write+0xb0>)
   81104:	4798      	blx	r3
   81106:	4602      	mov	r2, r0
   81108:	687b      	ldr	r3, [r7, #4]
   8110a:	60da      	str	r2, [r3, #12]
   8110c:	f44f 7180 	mov.w	r1, #256	; 0x100
   81110:	480a      	ldr	r0, [pc, #40]	; (8113c <twi_pdc_master_write+0xa8>)
   81112:	4b0d      	ldr	r3, [pc, #52]	; (81148 <twi_pdc_master_write+0xb4>)
   81114:	4798      	blx	r3
   81116:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   8111a:	6878      	ldr	r0, [r7, #4]
   8111c:	4b0b      	ldr	r3, [pc, #44]	; (8114c <twi_pdc_master_write+0xb8>)
   8111e:	4798      	blx	r3
   81120:	2016      	movs	r0, #22
   81122:	4b0b      	ldr	r3, [pc, #44]	; (81150 <twi_pdc_master_write+0xbc>)
   81124:	4798      	blx	r3
   81126:	2016      	movs	r0, #22
   81128:	4b0a      	ldr	r3, [pc, #40]	; (81154 <twi_pdc_master_write+0xc0>)
   8112a:	4798      	blx	r3
   8112c:	2300      	movs	r3, #0
   8112e:	4618      	mov	r0, r3
   81130:	3710      	adds	r7, #16
   81132:	46bd      	mov	sp, r7
   81134:	bd80      	pop	{r7, pc}
   81136:	bf00      	nop
   81138:	20070db8 	.word	0x20070db8
   8113c:	4008c100 	.word	0x4008c100
   81140:	00080231 	.word	0x00080231
   81144:	00080f25 	.word	0x00080f25
   81148:	000802b5 	.word	0x000802b5
   8114c:	0008135d 	.word	0x0008135d
   81150:	00080d4d 	.word	0x00080d4d
   81154:	00080d1d 	.word	0x00080d1d

00081158 <twi_set_compass_rx_callback>:
   81158:	b480      	push	{r7}
   8115a:	b083      	sub	sp, #12
   8115c:	af00      	add	r7, sp, #0
   8115e:	6078      	str	r0, [r7, #4]
   81160:	4a03      	ldr	r2, [pc, #12]	; (81170 <twi_set_compass_rx_callback+0x18>)
   81162:	687b      	ldr	r3, [r7, #4]
   81164:	6013      	str	r3, [r2, #0]
   81166:	bf00      	nop
   81168:	370c      	adds	r7, #12
   8116a:	46bd      	mov	sp, r7
   8116c:	bc80      	pop	{r7}
   8116e:	4770      	bx	lr
   81170:	20070dc4 	.word	0x20070dc4

00081174 <twi_set_compass_tx_callback>:
   81174:	b480      	push	{r7}
   81176:	b083      	sub	sp, #12
   81178:	af00      	add	r7, sp, #0
   8117a:	6078      	str	r0, [r7, #4]
   8117c:	4a03      	ldr	r2, [pc, #12]	; (8118c <twi_set_compass_tx_callback+0x18>)
   8117e:	687b      	ldr	r3, [r7, #4]
   81180:	6013      	str	r3, [r2, #0]
   81182:	bf00      	nop
   81184:	370c      	adds	r7, #12
   81186:	46bd      	mov	sp, r7
   81188:	bc80      	pop	{r7}
   8118a:	4770      	bx	lr
   8118c:	20070dc0 	.word	0x20070dc0

00081190 <twi_set_lcd_tx_callback>:
   81190:	b480      	push	{r7}
   81192:	b083      	sub	sp, #12
   81194:	af00      	add	r7, sp, #0
   81196:	6078      	str	r0, [r7, #4]
   81198:	4a03      	ldr	r2, [pc, #12]	; (811a8 <twi_set_lcd_tx_callback+0x18>)
   8119a:	687b      	ldr	r3, [r7, #4]
   8119c:	6013      	str	r3, [r2, #0]
   8119e:	bf00      	nop
   811a0:	370c      	adds	r7, #12
   811a2:	46bd      	mov	sp, r7
   811a4:	bc80      	pop	{r7}
   811a6:	4770      	bx	lr
   811a8:	20070dbc 	.word	0x20070dbc

000811ac <TWI0_Handler>:
   811ac:	b590      	push	{r4, r7, lr}
   811ae:	b083      	sub	sp, #12
   811b0:	af00      	add	r7, sp, #0
   811b2:	485d      	ldr	r0, [pc, #372]	; (81328 <TWI0_Handler+0x17c>)
   811b4:	4b5d      	ldr	r3, [pc, #372]	; (8132c <TWI0_Handler+0x180>)
   811b6:	4798      	blx	r3
   811b8:	4604      	mov	r4, r0
   811ba:	485b      	ldr	r0, [pc, #364]	; (81328 <TWI0_Handler+0x17c>)
   811bc:	4b5c      	ldr	r3, [pc, #368]	; (81330 <TWI0_Handler+0x184>)
   811be:	4798      	blx	r3
   811c0:	4603      	mov	r3, r0
   811c2:	4023      	ands	r3, r4
   811c4:	607b      	str	r3, [r7, #4]
   811c6:	687b      	ldr	r3, [r7, #4]
   811c8:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
   811cc:	2b00      	cmp	r3, #0
   811ce:	d014      	beq.n	811fa <TWI0_Handler+0x4e>
   811d0:	f44f 7100 	mov.w	r1, #512	; 0x200
   811d4:	4857      	ldr	r0, [pc, #348]	; (81334 <TWI0_Handler+0x188>)
   811d6:	4b58      	ldr	r3, [pc, #352]	; (81338 <TWI0_Handler+0x18c>)
   811d8:	4798      	blx	r3
   811da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   811de:	4852      	ldr	r0, [pc, #328]	; (81328 <TWI0_Handler+0x17c>)
   811e0:	4b56      	ldr	r3, [pc, #344]	; (8133c <TWI0_Handler+0x190>)
   811e2:	4798      	blx	r3
   811e4:	2104      	movs	r1, #4
   811e6:	4850      	ldr	r0, [pc, #320]	; (81328 <TWI0_Handler+0x17c>)
   811e8:	4b55      	ldr	r3, [pc, #340]	; (81340 <TWI0_Handler+0x194>)
   811ea:	4798      	blx	r3
   811ec:	484e      	ldr	r0, [pc, #312]	; (81328 <TWI0_Handler+0x17c>)
   811ee:	4b4f      	ldr	r3, [pc, #316]	; (8132c <TWI0_Handler+0x180>)
   811f0:	4798      	blx	r3
   811f2:	4602      	mov	r2, r0
   811f4:	687b      	ldr	r3, [r7, #4]
   811f6:	4313      	orrs	r3, r2
   811f8:	607b      	str	r3, [r7, #4]
   811fa:	687b      	ldr	r3, [r7, #4]
   811fc:	f003 0304 	and.w	r3, r3, #4
   81200:	2b00      	cmp	r3, #0
   81202:	d01a      	beq.n	8123a <TWI0_Handler+0x8e>
   81204:	2104      	movs	r1, #4
   81206:	4848      	ldr	r0, [pc, #288]	; (81328 <TWI0_Handler+0x17c>)
   81208:	4b4c      	ldr	r3, [pc, #304]	; (8133c <TWI0_Handler+0x190>)
   8120a:	4798      	blx	r3
   8120c:	4b46      	ldr	r3, [pc, #280]	; (81328 <TWI0_Handler+0x17c>)
   8120e:	2202      	movs	r2, #2
   81210:	601a      	str	r2, [r3, #0]
   81212:	4a45      	ldr	r2, [pc, #276]	; (81328 <TWI0_Handler+0x17c>)
   81214:	4b4b      	ldr	r3, [pc, #300]	; (81344 <TWI0_Handler+0x198>)
   81216:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   8121a:	3b01      	subs	r3, #1
   8121c:	4949      	ldr	r1, [pc, #292]	; (81344 <TWI0_Handler+0x198>)
   8121e:	440b      	add	r3, r1
   81220:	7a1b      	ldrb	r3, [r3, #8]
   81222:	6353      	str	r3, [r2, #52]	; 0x34
   81224:	2101      	movs	r1, #1
   81226:	4840      	ldr	r0, [pc, #256]	; (81328 <TWI0_Handler+0x17c>)
   81228:	4b45      	ldr	r3, [pc, #276]	; (81340 <TWI0_Handler+0x194>)
   8122a:	4798      	blx	r3
   8122c:	483e      	ldr	r0, [pc, #248]	; (81328 <TWI0_Handler+0x17c>)
   8122e:	4b3f      	ldr	r3, [pc, #252]	; (8132c <TWI0_Handler+0x180>)
   81230:	4798      	blx	r3
   81232:	4602      	mov	r2, r0
   81234:	687b      	ldr	r3, [r7, #4]
   81236:	4313      	orrs	r3, r2
   81238:	607b      	str	r3, [r7, #4]
   8123a:	687b      	ldr	r3, [r7, #4]
   8123c:	f003 0301 	and.w	r3, r3, #1
   81240:	2b00      	cmp	r3, #0
   81242:	d014      	beq.n	8126e <TWI0_Handler+0xc2>
   81244:	2101      	movs	r1, #1
   81246:	4838      	ldr	r0, [pc, #224]	; (81328 <TWI0_Handler+0x17c>)
   81248:	4b3c      	ldr	r3, [pc, #240]	; (8133c <TWI0_Handler+0x190>)
   8124a:	4798      	blx	r3
   8124c:	4b3e      	ldr	r3, [pc, #248]	; (81348 <TWI0_Handler+0x19c>)
   8124e:	681b      	ldr	r3, [r3, #0]
   81250:	2b00      	cmp	r3, #0
   81252:	d002      	beq.n	8125a <TWI0_Handler+0xae>
   81254:	4b3c      	ldr	r3, [pc, #240]	; (81348 <TWI0_Handler+0x19c>)
   81256:	681b      	ldr	r3, [r3, #0]
   81258:	4798      	blx	r3
   8125a:	4b3c      	ldr	r3, [pc, #240]	; (8134c <TWI0_Handler+0x1a0>)
   8125c:	681b      	ldr	r3, [r3, #0]
   8125e:	2b00      	cmp	r3, #0
   81260:	d002      	beq.n	81268 <TWI0_Handler+0xbc>
   81262:	4b3a      	ldr	r3, [pc, #232]	; (8134c <TWI0_Handler+0x1a0>)
   81264:	681b      	ldr	r3, [r3, #0]
   81266:	4798      	blx	r3
   81268:	4b39      	ldr	r3, [pc, #228]	; (81350 <TWI0_Handler+0x1a4>)
   8126a:	2200      	movs	r2, #0
   8126c:	701a      	strb	r2, [r3, #0]
   8126e:	687b      	ldr	r3, [r7, #4]
   81270:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
   81274:	2b00      	cmp	r3, #0
   81276:	d016      	beq.n	812a6 <TWI0_Handler+0xfa>
   81278:	2102      	movs	r1, #2
   8127a:	482e      	ldr	r0, [pc, #184]	; (81334 <TWI0_Handler+0x188>)
   8127c:	4b2e      	ldr	r3, [pc, #184]	; (81338 <TWI0_Handler+0x18c>)
   8127e:	4798      	blx	r3
   81280:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81284:	4828      	ldr	r0, [pc, #160]	; (81328 <TWI0_Handler+0x17c>)
   81286:	4b2d      	ldr	r3, [pc, #180]	; (8133c <TWI0_Handler+0x190>)
   81288:	4798      	blx	r3
   8128a:	2102      	movs	r1, #2
   8128c:	4826      	ldr	r0, [pc, #152]	; (81328 <TWI0_Handler+0x17c>)
   8128e:	4b2c      	ldr	r3, [pc, #176]	; (81340 <TWI0_Handler+0x194>)
   81290:	4798      	blx	r3
   81292:	4b25      	ldr	r3, [pc, #148]	; (81328 <TWI0_Handler+0x17c>)
   81294:	2202      	movs	r2, #2
   81296:	601a      	str	r2, [r3, #0]
   81298:	4823      	ldr	r0, [pc, #140]	; (81328 <TWI0_Handler+0x17c>)
   8129a:	4b24      	ldr	r3, [pc, #144]	; (8132c <TWI0_Handler+0x180>)
   8129c:	4798      	blx	r3
   8129e:	4602      	mov	r2, r0
   812a0:	687b      	ldr	r3, [r7, #4]
   812a2:	4313      	orrs	r3, r2
   812a4:	607b      	str	r3, [r7, #4]
   812a6:	687b      	ldr	r3, [r7, #4]
   812a8:	f003 0302 	and.w	r3, r3, #2
   812ac:	2b00      	cmp	r3, #0
   812ae:	d018      	beq.n	812e2 <TWI0_Handler+0x136>
   812b0:	2102      	movs	r1, #2
   812b2:	481d      	ldr	r0, [pc, #116]	; (81328 <TWI0_Handler+0x17c>)
   812b4:	4b21      	ldr	r3, [pc, #132]	; (8133c <TWI0_Handler+0x190>)
   812b6:	4798      	blx	r3
   812b8:	4b26      	ldr	r3, [pc, #152]	; (81354 <TWI0_Handler+0x1a8>)
   812ba:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   812be:	3b01      	subs	r3, #1
   812c0:	4a19      	ldr	r2, [pc, #100]	; (81328 <TWI0_Handler+0x17c>)
   812c2:	6b12      	ldr	r2, [r2, #48]	; 0x30
   812c4:	b2d1      	uxtb	r1, r2
   812c6:	4a23      	ldr	r2, [pc, #140]	; (81354 <TWI0_Handler+0x1a8>)
   812c8:	4413      	add	r3, r2
   812ca:	460a      	mov	r2, r1
   812cc:	721a      	strb	r2, [r3, #8]
   812ce:	4b22      	ldr	r3, [pc, #136]	; (81358 <TWI0_Handler+0x1ac>)
   812d0:	681b      	ldr	r3, [r3, #0]
   812d2:	2b00      	cmp	r3, #0
   812d4:	d002      	beq.n	812dc <TWI0_Handler+0x130>
   812d6:	4b20      	ldr	r3, [pc, #128]	; (81358 <TWI0_Handler+0x1ac>)
   812d8:	681b      	ldr	r3, [r3, #0]
   812da:	4798      	blx	r3
   812dc:	4b1c      	ldr	r3, [pc, #112]	; (81350 <TWI0_Handler+0x1a4>)
   812de:	2200      	movs	r2, #0
   812e0:	701a      	strb	r2, [r3, #0]
   812e2:	687b      	ldr	r3, [r7, #4]
   812e4:	f403 7350 	and.w	r3, r3, #832	; 0x340
   812e8:	2b00      	cmp	r3, #0
   812ea:	d019      	beq.n	81320 <TWI0_Handler+0x174>
   812ec:	f240 2102 	movw	r1, #514	; 0x202
   812f0:	4810      	ldr	r0, [pc, #64]	; (81334 <TWI0_Handler+0x188>)
   812f2:	4b11      	ldr	r3, [pc, #68]	; (81338 <TWI0_Handler+0x18c>)
   812f4:	4798      	blx	r3
   812f6:	687b      	ldr	r3, [r7, #4]
   812f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
   812fc:	2b00      	cmp	r3, #0
   812fe:	d102      	bne.n	81306 <TWI0_Handler+0x15a>
   81300:	4b09      	ldr	r3, [pc, #36]	; (81328 <TWI0_Handler+0x17c>)
   81302:	2202      	movs	r2, #2
   81304:	601a      	str	r2, [r3, #0]
   81306:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   8130a:	4807      	ldr	r0, [pc, #28]	; (81328 <TWI0_Handler+0x17c>)
   8130c:	4b0b      	ldr	r3, [pc, #44]	; (8133c <TWI0_Handler+0x190>)
   8130e:	4798      	blx	r3
   81310:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81314:	4804      	ldr	r0, [pc, #16]	; (81328 <TWI0_Handler+0x17c>)
   81316:	4b09      	ldr	r3, [pc, #36]	; (8133c <TWI0_Handler+0x190>)
   81318:	4798      	blx	r3
   8131a:	4b0d      	ldr	r3, [pc, #52]	; (81350 <TWI0_Handler+0x1a4>)
   8131c:	2200      	movs	r2, #0
   8131e:	701a      	strb	r2, [r3, #0]
   81320:	bf00      	nop
   81322:	370c      	adds	r7, #12
   81324:	46bd      	mov	sp, r7
   81326:	bd90      	pop	{r4, r7, pc}
   81328:	4008c000 	.word	0x4008c000
   8132c:	00081395 	.word	0x00081395
   81330:	000813ab 	.word	0x000813ab
   81334:	4008c100 	.word	0x4008c100
   81338:	000802d5 	.word	0x000802d5
   8133c:	00081377 	.word	0x00081377
   81340:	0008135d 	.word	0x0008135d
   81344:	20070b98 	.word	0x20070b98
   81348:	20070dc0 	.word	0x20070dc0
   8134c:	20070dbc 	.word	0x20070dbc
   81350:	20070db8 	.word	0x20070db8
   81354:	20070ca8 	.word	0x20070ca8
   81358:	20070dc4 	.word	0x20070dc4

0008135c <twi_enable_interrupt>:
   8135c:	b480      	push	{r7}
   8135e:	b083      	sub	sp, #12
   81360:	af00      	add	r7, sp, #0
   81362:	6078      	str	r0, [r7, #4]
   81364:	6039      	str	r1, [r7, #0]
   81366:	687b      	ldr	r3, [r7, #4]
   81368:	683a      	ldr	r2, [r7, #0]
   8136a:	625a      	str	r2, [r3, #36]	; 0x24
   8136c:	bf00      	nop
   8136e:	370c      	adds	r7, #12
   81370:	46bd      	mov	sp, r7
   81372:	bc80      	pop	{r7}
   81374:	4770      	bx	lr

00081376 <twi_disable_interrupt>:
   81376:	b480      	push	{r7}
   81378:	b083      	sub	sp, #12
   8137a:	af00      	add	r7, sp, #0
   8137c:	6078      	str	r0, [r7, #4]
   8137e:	6039      	str	r1, [r7, #0]
   81380:	687b      	ldr	r3, [r7, #4]
   81382:	683a      	ldr	r2, [r7, #0]
   81384:	629a      	str	r2, [r3, #40]	; 0x28
   81386:	687b      	ldr	r3, [r7, #4]
   81388:	6a1b      	ldr	r3, [r3, #32]
   8138a:	bf00      	nop
   8138c:	370c      	adds	r7, #12
   8138e:	46bd      	mov	sp, r7
   81390:	bc80      	pop	{r7}
   81392:	4770      	bx	lr

00081394 <twi_get_interrupt_status>:
   81394:	b480      	push	{r7}
   81396:	b083      	sub	sp, #12
   81398:	af00      	add	r7, sp, #0
   8139a:	6078      	str	r0, [r7, #4]
   8139c:	687b      	ldr	r3, [r7, #4]
   8139e:	6a1b      	ldr	r3, [r3, #32]
   813a0:	4618      	mov	r0, r3
   813a2:	370c      	adds	r7, #12
   813a4:	46bd      	mov	sp, r7
   813a6:	bc80      	pop	{r7}
   813a8:	4770      	bx	lr

000813aa <twi_get_interrupt_mask>:
   813aa:	b480      	push	{r7}
   813ac:	b083      	sub	sp, #12
   813ae:	af00      	add	r7, sp, #0
   813b0:	6078      	str	r0, [r7, #4]
   813b2:	687b      	ldr	r3, [r7, #4]
   813b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   813b6:	4618      	mov	r0, r3
   813b8:	370c      	adds	r7, #12
   813ba:	46bd      	mov	sp, r7
   813bc:	bc80      	pop	{r7}
   813be:	4770      	bx	lr

000813c0 <twi_read_byte>:
   813c0:	b480      	push	{r7}
   813c2:	b083      	sub	sp, #12
   813c4:	af00      	add	r7, sp, #0
   813c6:	6078      	str	r0, [r7, #4]
   813c8:	687b      	ldr	r3, [r7, #4]
   813ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   813cc:	b2db      	uxtb	r3, r3
   813ce:	4618      	mov	r0, r3
   813d0:	370c      	adds	r7, #12
   813d2:	46bd      	mov	sp, r7
   813d4:	bc80      	pop	{r7}
   813d6:	4770      	bx	lr

000813d8 <twi_reset>:
   813d8:	b480      	push	{r7}
   813da:	b083      	sub	sp, #12
   813dc:	af00      	add	r7, sp, #0
   813de:	6078      	str	r0, [r7, #4]
   813e0:	687b      	ldr	r3, [r7, #4]
   813e2:	2280      	movs	r2, #128	; 0x80
   813e4:	601a      	str	r2, [r3, #0]
   813e6:	687b      	ldr	r3, [r7, #4]
   813e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   813ea:	bf00      	nop
   813ec:	370c      	adds	r7, #12
   813ee:	46bd      	mov	sp, r7
   813f0:	bc80      	pop	{r7}
   813f2:	4770      	bx	lr

000813f4 <compass_init>:

//local function
static void compass_callback(void);

void compass_init(void)
{
   813f4:	b580      	push	{r7, lr}
   813f6:	b082      	sub	sp, #8
   813f8:	af00      	add	r7, sp, #0
    twi_packet_t *rx_packet = twi_get_rx_packet();
   813fa:	4b0d      	ldr	r3, [pc, #52]	; (81430 <compass_init+0x3c>)
   813fc:	4798      	blx	r3
   813fe:	6078      	str	r0, [r7, #4]

    rx_packet->chip = 0x60;
   81400:	687b      	ldr	r3, [r7, #4]
   81402:	2260      	movs	r2, #96	; 0x60
   81404:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
    rx_packet->addr[0] = 0x02;
   81408:	687b      	ldr	r3, [r7, #4]
   8140a:	2202      	movs	r2, #2
   8140c:	701a      	strb	r2, [r3, #0]
    rx_packet->addr_length = 1;
   8140e:	687b      	ldr	r3, [r7, #4]
   81410:	2201      	movs	r2, #1
   81412:	605a      	str	r2, [r3, #4]
    rx_packet->length = sizeof(direction);
   81414:	687b      	ldr	r3, [r7, #4]
   81416:	2202      	movs	r2, #2
   81418:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

    twi_set_compass_tx_callback(compass_callback);
   8141c:	4805      	ldr	r0, [pc, #20]	; (81434 <compass_init+0x40>)
   8141e:	4b06      	ldr	r3, [pc, #24]	; (81438 <compass_init+0x44>)
   81420:	4798      	blx	r3
    twi_set_compass_rx_callback(compass_callback);
   81422:	4804      	ldr	r0, [pc, #16]	; (81434 <compass_init+0x40>)
   81424:	4b05      	ldr	r3, [pc, #20]	; (8143c <compass_init+0x48>)
   81426:	4798      	blx	r3
}
   81428:	bf00      	nop
   8142a:	3708      	adds	r7, #8
   8142c:	46bd      	mov	sp, r7
   8142e:	bd80      	pop	{r7, pc}
   81430:	00080fa9 	.word	0x00080fa9
   81434:	000814fd 	.word	0x000814fd
   81438:	00081175 	.word	0x00081175
   8143c:	00081159 	.word	0x00081159

00081440 <update_compass>:

void update_compass(void)
{
   81440:	b580      	push	{r7, lr}
   81442:	b082      	sub	sp, #8
   81444:	af00      	add	r7, sp, #0
    twi_packet_t *rx_packet = twi_get_rx_packet();
   81446:	4b1a      	ldr	r3, [pc, #104]	; (814b0 <update_compass+0x70>)
   81448:	4798      	blx	r3
   8144a:	6078      	str	r0, [r7, #4]

    if ((getTicks() - ul_ticks_compass) > 100)
   8144c:	4b19      	ldr	r3, [pc, #100]	; (814b4 <update_compass+0x74>)
   8144e:	4798      	blx	r3
   81450:	4602      	mov	r2, r0
   81452:	4b19      	ldr	r3, [pc, #100]	; (814b8 <update_compass+0x78>)
   81454:	681b      	ldr	r3, [r3, #0]
   81456:	1ad3      	subs	r3, r2, r3
   81458:	2b64      	cmp	r3, #100	; 0x64
   8145a:	d926      	bls.n	814aa <update_compass+0x6a>
    {
        if(lcd_is_busy())
   8145c:	4b17      	ldr	r3, [pc, #92]	; (814bc <update_compass+0x7c>)
   8145e:	4798      	blx	r3
   81460:	4603      	mov	r3, r0
   81462:	2b00      	cmp	r3, #0
   81464:	d120      	bne.n	814a8 <update_compass+0x68>
        {
            return;
        }

        ul_ticks_compass = getTicks();
   81466:	4b13      	ldr	r3, [pc, #76]	; (814b4 <update_compass+0x74>)
   81468:	4798      	blx	r3
   8146a:	4602      	mov	r2, r0
   8146c:	4b12      	ldr	r3, [pc, #72]	; (814b8 <update_compass+0x78>)
   8146e:	601a      	str	r2, [r3, #0]
        
        compassIsBusy = true;
   81470:	4b13      	ldr	r3, [pc, #76]	; (814c0 <update_compass+0x80>)
   81472:	2201      	movs	r2, #1
   81474:	701a      	strb	r2, [r3, #0]
        if(twi_pdc_master_read(TWI0, rx_packet) == TWI_SUCCESS)
   81476:	6879      	ldr	r1, [r7, #4]
   81478:	4812      	ldr	r0, [pc, #72]	; (814c4 <update_compass+0x84>)
   8147a:	4b13      	ldr	r3, [pc, #76]	; (814c8 <update_compass+0x88>)
   8147c:	4798      	blx	r3
   8147e:	4603      	mov	r3, r0
   81480:	2b00      	cmp	r3, #0
   81482:	d104      	bne.n	8148e <update_compass+0x4e>
        {
            while(compassIsBusy);
   81484:	bf00      	nop
   81486:	4b0e      	ldr	r3, [pc, #56]	; (814c0 <update_compass+0x80>)
   81488:	781b      	ldrb	r3, [r3, #0]
   8148a:	2b00      	cmp	r3, #0
   8148c:	d1fb      	bne.n	81486 <update_compass+0x46>
        }
        direction = (rx_packet->buffer[0] << 8) | rx_packet->buffer[1];
   8148e:	687b      	ldr	r3, [r7, #4]
   81490:	7a1b      	ldrb	r3, [r3, #8]
   81492:	021b      	lsls	r3, r3, #8
   81494:	b21a      	sxth	r2, r3
   81496:	687b      	ldr	r3, [r7, #4]
   81498:	7a5b      	ldrb	r3, [r3, #9]
   8149a:	b21b      	sxth	r3, r3
   8149c:	4313      	orrs	r3, r2
   8149e:	b21b      	sxth	r3, r3
   814a0:	b29a      	uxth	r2, r3
   814a2:	4b0a      	ldr	r3, [pc, #40]	; (814cc <update_compass+0x8c>)
   814a4:	801a      	strh	r2, [r3, #0]
   814a6:	e000      	b.n	814aa <update_compass+0x6a>
            return;
   814a8:	bf00      	nop
    }
}
   814aa:	3708      	adds	r7, #8
   814ac:	46bd      	mov	sp, r7
   814ae:	bd80      	pop	{r7, pc}
   814b0:	00080fa9 	.word	0x00080fa9
   814b4:	00082fd9 	.word	0x00082fd9
   814b8:	20070fe0 	.word	0x20070fe0
   814bc:	00081945 	.word	0x00081945
   814c0:	20070dc8 	.word	0x20070dc8
   814c4:	4008c000 	.word	0x4008c000
   814c8:	00080fbd 	.word	0x00080fbd
   814cc:	20070e40 	.word	0x20070e40

000814d0 <set_compass_is_busy>:

void set_compass_is_busy(void)
{
   814d0:	b480      	push	{r7}
   814d2:	af00      	add	r7, sp, #0
    compassIsBusy = true;
   814d4:	4b03      	ldr	r3, [pc, #12]	; (814e4 <set_compass_is_busy+0x14>)
   814d6:	2201      	movs	r2, #1
   814d8:	701a      	strb	r2, [r3, #0]
}
   814da:	bf00      	nop
   814dc:	46bd      	mov	sp, r7
   814de:	bc80      	pop	{r7}
   814e0:	4770      	bx	lr
   814e2:	bf00      	nop
   814e4:	20070dc8 	.word	0x20070dc8

000814e8 <compass_is_busy>:

uint8_t compass_is_busy(void)
{
   814e8:	b480      	push	{r7}
   814ea:	af00      	add	r7, sp, #0
    return compassIsBusy;
   814ec:	4b02      	ldr	r3, [pc, #8]	; (814f8 <compass_is_busy+0x10>)
   814ee:	781b      	ldrb	r3, [r3, #0]
}
   814f0:	4618      	mov	r0, r3
   814f2:	46bd      	mov	sp, r7
   814f4:	bc80      	pop	{r7}
   814f6:	4770      	bx	lr
   814f8:	20070dc8 	.word	0x20070dc8

000814fc <compass_callback>:
    return tmp_corr;
}*/

//local function
static void compass_callback(void)
{
   814fc:	b480      	push	{r7}
   814fe:	af00      	add	r7, sp, #0
    compassIsBusy = false;
   81500:	4b03      	ldr	r3, [pc, #12]	; (81510 <compass_callback+0x14>)
   81502:	2200      	movs	r2, #0
   81504:	701a      	strb	r2, [r3, #0]
}
   81506:	bf00      	nop
   81508:	46bd      	mov	sp, r7
   8150a:	bc80      	pop	{r7}
   8150c:	4770      	bx	lr
   8150e:	bf00      	nop
   81510:	20070dc8 	.word	0x20070dc8

00081514 <osc_get_rate>:
{
   81514:	b480      	push	{r7}
   81516:	b083      	sub	sp, #12
   81518:	af00      	add	r7, sp, #0
   8151a:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   8151c:	687b      	ldr	r3, [r7, #4]
   8151e:	2b07      	cmp	r3, #7
   81520:	d825      	bhi.n	8156e <osc_get_rate+0x5a>
   81522:	a201      	add	r2, pc, #4	; (adr r2, 81528 <osc_get_rate+0x14>)
   81524:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   81528:	00081549 	.word	0x00081549
   8152c:	0008154f 	.word	0x0008154f
   81530:	00081555 	.word	0x00081555
   81534:	0008155b 	.word	0x0008155b
   81538:	0008155f 	.word	0x0008155f
   8153c:	00081563 	.word	0x00081563
   81540:	00081567 	.word	0x00081567
   81544:	0008156b 	.word	0x0008156b
		return OSC_SLCK_32K_RC_HZ;
   81548:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   8154c:	e010      	b.n	81570 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
   8154e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   81552:	e00d      	b.n	81570 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
   81554:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   81558:	e00a      	b.n	81570 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
   8155a:	4b08      	ldr	r3, [pc, #32]	; (8157c <osc_get_rate+0x68>)
   8155c:	e008      	b.n	81570 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
   8155e:	4b08      	ldr	r3, [pc, #32]	; (81580 <osc_get_rate+0x6c>)
   81560:	e006      	b.n	81570 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
   81562:	4b08      	ldr	r3, [pc, #32]	; (81584 <osc_get_rate+0x70>)
   81564:	e004      	b.n	81570 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
   81566:	4b07      	ldr	r3, [pc, #28]	; (81584 <osc_get_rate+0x70>)
   81568:	e002      	b.n	81570 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
   8156a:	4b06      	ldr	r3, [pc, #24]	; (81584 <osc_get_rate+0x70>)
   8156c:	e000      	b.n	81570 <osc_get_rate+0x5c>
	return 0;
   8156e:	2300      	movs	r3, #0
}
   81570:	4618      	mov	r0, r3
   81572:	370c      	adds	r7, #12
   81574:	46bd      	mov	sp, r7
   81576:	bc80      	pop	{r7}
   81578:	4770      	bx	lr
   8157a:	bf00      	nop
   8157c:	003d0900 	.word	0x003d0900
   81580:	007a1200 	.word	0x007a1200
   81584:	00b71b00 	.word	0x00b71b00

00081588 <sysclk_get_main_hz>:
{
   81588:	b580      	push	{r7, lr}
   8158a:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
   8158c:	2006      	movs	r0, #6
   8158e:	4b04      	ldr	r3, [pc, #16]	; (815a0 <sysclk_get_main_hz+0x18>)
   81590:	4798      	blx	r3
   81592:	4602      	mov	r2, r0
   81594:	4613      	mov	r3, r2
   81596:	00db      	lsls	r3, r3, #3
   81598:	1a9b      	subs	r3, r3, r2
   8159a:	005b      	lsls	r3, r3, #1
}
   8159c:	4618      	mov	r0, r3
   8159e:	bd80      	pop	{r7, pc}
   815a0:	00081515 	.word	0x00081515

000815a4 <sysclk_get_peripheral_hz>:
{
   815a4:	b580      	push	{r7, lr}
   815a6:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
   815a8:	4b02      	ldr	r3, [pc, #8]	; (815b4 <sysclk_get_peripheral_hz+0x10>)
   815aa:	4798      	blx	r3
   815ac:	4603      	mov	r3, r0
   815ae:	085b      	lsrs	r3, r3, #1
}
   815b0:	4618      	mov	r0, r3
   815b2:	bd80      	pop	{r7, pc}
   815b4:	00081589 	.word	0x00081589

000815b8 <sysclk_enable_peripheral_clock>:
 * \brief Enable a peripheral's clock.
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
   815b8:	b580      	push	{r7, lr}
   815ba:	b082      	sub	sp, #8
   815bc:	af00      	add	r7, sp, #0
   815be:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   815c0:	6878      	ldr	r0, [r7, #4]
   815c2:	4b03      	ldr	r3, [pc, #12]	; (815d0 <sysclk_enable_peripheral_clock+0x18>)
   815c4:	4798      	blx	r3
}
   815c6:	bf00      	nop
   815c8:	3708      	adds	r7, #8
   815ca:	46bd      	mov	sp, r7
   815cc:	bd80      	pop	{r7, pc}
   815ce:	bf00      	nop
   815d0:	00083999 	.word	0x00083999

000815d4 <twi_master_setup>:
typedef twi_options_t twi_master_options_t;
typedef twi_packet_t twi_package_t;

static inline uint32_t twi_master_setup(twi_master_t p_twi,
		twi_master_options_t *p_opt)
{
   815d4:	b580      	push	{r7, lr}
   815d6:	b082      	sub	sp, #8
   815d8:	af00      	add	r7, sp, #0
   815da:	6078      	str	r0, [r7, #4]
   815dc:	6039      	str	r1, [r7, #0]
	p_opt->master_clk = sysclk_get_peripheral_hz();
   815de:	4b10      	ldr	r3, [pc, #64]	; (81620 <twi_master_setup+0x4c>)
   815e0:	4798      	blx	r3
   815e2:	4602      	mov	r2, r0
   815e4:	683b      	ldr	r3, [r7, #0]
   815e6:	601a      	str	r2, [r3, #0]
	p_opt->smbus      = 0;
   815e8:	683b      	ldr	r3, [r7, #0]
   815ea:	2200      	movs	r2, #0
   815ec:	725a      	strb	r2, [r3, #9]
	} else {
		// Do Nothing
	}
#else
#if (!(SAMG51 || SAMG53 || SAMG54))
	if (p_twi == TWI0) {
   815ee:	687b      	ldr	r3, [r7, #4]
   815f0:	4a0c      	ldr	r2, [pc, #48]	; (81624 <twi_master_setup+0x50>)
   815f2:	4293      	cmp	r3, r2
   815f4:	d103      	bne.n	815fe <twi_master_setup+0x2a>
		sysclk_enable_peripheral_clock(ID_TWI0);
   815f6:	2016      	movs	r0, #22
   815f8:	4b0b      	ldr	r3, [pc, #44]	; (81628 <twi_master_setup+0x54>)
   815fa:	4798      	blx	r3
   815fc:	e006      	b.n	8160c <twi_master_setup+0x38>
	} else
#endif
	if (p_twi == TWI1) {
   815fe:	687b      	ldr	r3, [r7, #4]
   81600:	4a0a      	ldr	r2, [pc, #40]	; (8162c <twi_master_setup+0x58>)
   81602:	4293      	cmp	r3, r2
   81604:	d102      	bne.n	8160c <twi_master_setup+0x38>
		sysclk_enable_peripheral_clock(ID_TWI1);
   81606:	2017      	movs	r0, #23
   81608:	4b07      	ldr	r3, [pc, #28]	; (81628 <twi_master_setup+0x54>)
   8160a:	4798      	blx	r3
	} else {
		// Do Nothing
	}
#endif

	return (twi_master_init(p_twi, p_opt));
   8160c:	6839      	ldr	r1, [r7, #0]
   8160e:	6878      	ldr	r0, [r7, #4]
   81610:	4b07      	ldr	r3, [pc, #28]	; (81630 <twi_master_setup+0x5c>)
   81612:	4798      	blx	r3
   81614:	4603      	mov	r3, r0
}
   81616:	4618      	mov	r0, r3
   81618:	3708      	adds	r7, #8
   8161a:	46bd      	mov	sp, r7
   8161c:	bd80      	pop	{r7, pc}
   8161e:	bf00      	nop
   81620:	000815a5 	.word	0x000815a5
   81624:	4008c000 	.word	0x4008c000
   81628:	000815b9 	.word	0x000815b9
   8162c:	40090000 	.word	0x40090000
   81630:	00080da5 	.word	0x00080da5

00081634 <lcd_init>:

/************************************************************
* Functions                                                 *
************************************************************/
void lcd_init(void)
{
   81634:	b580      	push	{r7, lr}
   81636:	af00      	add	r7, sp, #0
    twi_set_lcd_tx_callback(lcd_callback);
   81638:	4821      	ldr	r0, [pc, #132]	; (816c0 <lcd_init+0x8c>)
   8163a:	4b22      	ldr	r3, [pc, #136]	; (816c4 <lcd_init+0x90>)
   8163c:	4798      	blx	r3

    memset((void *)&twiConfig, 0, sizeof(twiConfig));
   8163e:	220c      	movs	r2, #12
   81640:	2100      	movs	r1, #0
   81642:	4821      	ldr	r0, [pc, #132]	; (816c8 <lcd_init+0x94>)
   81644:	4b21      	ldr	r3, [pc, #132]	; (816cc <lcd_init+0x98>)
   81646:	4798      	blx	r3
    twiConfig.speed = 100000;
   81648:	4b1f      	ldr	r3, [pc, #124]	; (816c8 <lcd_init+0x94>)
   8164a:	4a21      	ldr	r2, [pc, #132]	; (816d0 <lcd_init+0x9c>)
   8164c:	605a      	str	r2, [r3, #4]

    backlight = LCD_LIGHT_OFF;
   8164e:	4b21      	ldr	r3, [pc, #132]	; (816d4 <lcd_init+0xa0>)
   81650:	2200      	movs	r2, #0
   81652:	701a      	strb	r2, [r3, #0]

    send_nibble(LCD_FUNTION_WRITE, 0x03);
   81654:	2103      	movs	r1, #3
   81656:	2000      	movs	r0, #0
   81658:	4b1f      	ldr	r3, [pc, #124]	; (816d8 <lcd_init+0xa4>)
   8165a:	4798      	blx	r3
    mdelay(LCD_INIT_WAIT_TIME);
   8165c:	2006      	movs	r0, #6
   8165e:	4b1f      	ldr	r3, [pc, #124]	; (816dc <lcd_init+0xa8>)
   81660:	4798      	blx	r3
    send_nibble(LCD_FUNTION_WRITE, 0x03);
   81662:	2103      	movs	r1, #3
   81664:	2000      	movs	r0, #0
   81666:	4b1c      	ldr	r3, [pc, #112]	; (816d8 <lcd_init+0xa4>)
   81668:	4798      	blx	r3
    mdelay(LCD_INIT_WAIT_TIME);
   8166a:	2006      	movs	r0, #6
   8166c:	4b1b      	ldr	r3, [pc, #108]	; (816dc <lcd_init+0xa8>)
   8166e:	4798      	blx	r3
    send_nibble(LCD_FUNTION_WRITE, 0x03);
   81670:	2103      	movs	r1, #3
   81672:	2000      	movs	r0, #0
   81674:	4b18      	ldr	r3, [pc, #96]	; (816d8 <lcd_init+0xa4>)
   81676:	4798      	blx	r3
    mdelay(LCD_INIT_WAIT_TIME);
   81678:	2006      	movs	r0, #6
   8167a:	4b18      	ldr	r3, [pc, #96]	; (816dc <lcd_init+0xa8>)
   8167c:	4798      	blx	r3
    send_nibble(LCD_FUNTION_WRITE, 0x02);     // Interface: 4-Bit
   8167e:	2102      	movs	r1, #2
   81680:	2000      	movs	r0, #0
   81682:	4b15      	ldr	r3, [pc, #84]	; (816d8 <lcd_init+0xa4>)
   81684:	4798      	blx	r3
    send_byte(LCD_FUNTION_WRITE, 0x28);       // Interface: 4-Bit, 2-lines, 5x8-dots
   81686:	2128      	movs	r1, #40	; 0x28
   81688:	2000      	movs	r0, #0
   8168a:	4b15      	ldr	r3, [pc, #84]	; (816e0 <lcd_init+0xac>)
   8168c:	4798      	blx	r3
    send_byte(LCD_FUNTION_WRITE, 0x08);       // Display off, cursor off, cursor is underline
   8168e:	2108      	movs	r1, #8
   81690:	2000      	movs	r0, #0
   81692:	4b13      	ldr	r3, [pc, #76]	; (816e0 <lcd_init+0xac>)
   81694:	4798      	blx	r3
    send_byte(LCD_FUNTION_WRITE, 0x01);       // Clear display
   81696:	2101      	movs	r1, #1
   81698:	2000      	movs	r0, #0
   8169a:	4b11      	ldr	r3, [pc, #68]	; (816e0 <lcd_init+0xac>)
   8169c:	4798      	blx	r3
    mdelay(LCD_CLEAR_WAIT_TIME);
   8169e:	2003      	movs	r0, #3
   816a0:	4b0e      	ldr	r3, [pc, #56]	; (816dc <lcd_init+0xa8>)
   816a2:	4798      	blx	r3
    send_byte(LCD_FUNTION_WRITE, 0x06);       // Cursor moves right, no display shift
   816a4:	2106      	movs	r1, #6
   816a6:	2000      	movs	r0, #0
   816a8:	4b0d      	ldr	r3, [pc, #52]	; (816e0 <lcd_init+0xac>)
   816aa:	4798      	blx	r3
    send_byte(LCD_FUNTION_WRITE, 0x0C);       // Display on, cursor off, cursor is underline
   816ac:	210c      	movs	r1, #12
   816ae:	2000      	movs	r0, #0
   816b0:	4b0b      	ldr	r3, [pc, #44]	; (816e0 <lcd_init+0xac>)
   816b2:	4798      	blx	r3

    backlight = LCD_LIGHT_ON;
   816b4:	4b07      	ldr	r3, [pc, #28]	; (816d4 <lcd_init+0xa0>)
   816b6:	2208      	movs	r2, #8
   816b8:	701a      	strb	r2, [r3, #0]
}
   816ba:	bf00      	nop
   816bc:	bd80      	pop	{r7, pc}
   816be:	bf00      	nop
   816c0:	00081ba9 	.word	0x00081ba9
   816c4:	00081191 	.word	0x00081191
   816c8:	20070dd4 	.word	0x20070dd4
   816cc:	00085555 	.word	0x00085555
   816d0:	000186a0 	.word	0x000186a0
   816d4:	20070dc9 	.word	0x20070dc9
   816d8:	00081959 	.word	0x00081959
   816dc:	00082fed 	.word	0x00082fed
   816e0:	00081a69 	.word	0x00081a69

000816e4 <lcd_set_backlight>:

void lcd_set_backlight(backlight_t state)
{
   816e4:	b480      	push	{r7}
   816e6:	b083      	sub	sp, #12
   816e8:	af00      	add	r7, sp, #0
   816ea:	4603      	mov	r3, r0
   816ec:	71fb      	strb	r3, [r7, #7]
    backlight = state;
   816ee:	4a04      	ldr	r2, [pc, #16]	; (81700 <lcd_set_backlight+0x1c>)
   816f0:	79fb      	ldrb	r3, [r7, #7]
   816f2:	7013      	strb	r3, [r2, #0]
//    send_byte(LCD_FUNTION_WRITE, 0x01);   // clear display
//    mdelay(LCD_CLEAR_WAIT_TIME);
}
   816f4:	bf00      	nop
   816f6:	370c      	adds	r7, #12
   816f8:	46bd      	mov	sp, r7
   816fa:	bc80      	pop	{r7}
   816fc:	4770      	bx	lr
   816fe:	bf00      	nop
   81700:	20070dc9 	.word	0x20070dc9

00081704 <lcd_clear>:

void lcd_clear(void)
{
   81704:	b580      	push	{r7, lr}
   81706:	af00      	add	r7, sp, #0
    send_byte(LCD_FUNTION_WRITE, 0x01);   // clear display
   81708:	2101      	movs	r1, #1
   8170a:	2000      	movs	r0, #0
   8170c:	4b03      	ldr	r3, [pc, #12]	; (8171c <lcd_clear+0x18>)
   8170e:	4798      	blx	r3
    mdelay(LCD_CLEAR_WAIT_TIME);
   81710:	2003      	movs	r0, #3
   81712:	4b03      	ldr	r3, [pc, #12]	; (81720 <lcd_clear+0x1c>)
   81714:	4798      	blx	r3
}
   81716:	bf00      	nop
   81718:	bd80      	pop	{r7, pc}
   8171a:	bf00      	nop
   8171c:	00081a69 	.word	0x00081a69
   81720:	00082fed 	.word	0x00082fed

00081724 <lcd_print_s>:
    sprintf(str, "%10lu", data);
    lcd_print_s(line, col, str);
}

void lcd_print_s(uint8_t line, uint8_t col, const char* str)
{
   81724:	b590      	push	{r4, r7, lr}
   81726:	b087      	sub	sp, #28
   81728:	af00      	add	r7, sp, #0
   8172a:	4603      	mov	r3, r0
   8172c:	603a      	str	r2, [r7, #0]
   8172e:	71fb      	strb	r3, [r7, #7]
   81730:	460b      	mov	r3, r1
   81732:	71bb      	strb	r3, [r7, #6]
    twi_packet_t *tx_packet = twi_get_tx_packet();
   81734:	4b75      	ldr	r3, [pc, #468]	; (8190c <lcd_print_s+0x1e8>)
   81736:	4798      	blx	r3
   81738:	6138      	str	r0, [r7, #16]
    uint8_t addr;
    uint8_t cmd;
    uint8_t byte;
    uint8_t count;
    
    while(lcdIsBusy | twi_is_busy())
   8173a:	e019      	b.n	81770 <lcd_print_s+0x4c>
    {
        if((getTicks() - lcdStartTicks) > LCD_TIMEOUT_DELAY)
   8173c:	4b74      	ldr	r3, [pc, #464]	; (81910 <lcd_print_s+0x1ec>)
   8173e:	4798      	blx	r3
   81740:	4602      	mov	r2, r0
   81742:	4b74      	ldr	r3, [pc, #464]	; (81914 <lcd_print_s+0x1f0>)
   81744:	681b      	ldr	r3, [r3, #0]
   81746:	1ad3      	subs	r3, r2, r3
   81748:	2b0a      	cmp	r3, #10
   8174a:	d911      	bls.n	81770 <lcd_print_s+0x4c>
        {
            lcdIsBusy = false;
   8174c:	4b72      	ldr	r3, [pc, #456]	; (81918 <lcd_print_s+0x1f4>)
   8174e:	2200      	movs	r2, #0
   81750:	701a      	strb	r2, [r3, #0]
            lcdTimeoutErrorCntr++;
   81752:	4b72      	ldr	r3, [pc, #456]	; (8191c <lcd_print_s+0x1f8>)
   81754:	681b      	ldr	r3, [r3, #0]
   81756:	3301      	adds	r3, #1
   81758:	4a70      	ldr	r2, [pc, #448]	; (8191c <lcd_print_s+0x1f8>)
   8175a:	6013      	str	r3, [r2, #0]
            pdc_disable_transfer(PDC_TWI0, PERIPH_PTCR_TXTDIS | PERIPH_PTCR_RXTDIS);
   8175c:	f240 2102 	movw	r1, #514	; 0x202
   81760:	486f      	ldr	r0, [pc, #444]	; (81920 <lcd_print_s+0x1fc>)
   81762:	4b70      	ldr	r3, [pc, #448]	; (81924 <lcd_print_s+0x200>)
   81764:	4798      	blx	r3
            twi_master_setup(TWI0, &twiConfig);
   81766:	4970      	ldr	r1, [pc, #448]	; (81928 <lcd_print_s+0x204>)
   81768:	4870      	ldr	r0, [pc, #448]	; (8192c <lcd_print_s+0x208>)
   8176a:	4b71      	ldr	r3, [pc, #452]	; (81930 <lcd_print_s+0x20c>)
   8176c:	4798      	blx	r3
            break;
   8176e:	e009      	b.n	81784 <lcd_print_s+0x60>
    while(lcdIsBusy | twi_is_busy())
   81770:	4b70      	ldr	r3, [pc, #448]	; (81934 <lcd_print_s+0x210>)
   81772:	4798      	blx	r3
   81774:	4603      	mov	r3, r0
   81776:	461a      	mov	r2, r3
   81778:	4b67      	ldr	r3, [pc, #412]	; (81918 <lcd_print_s+0x1f4>)
   8177a:	781b      	ldrb	r3, [r3, #0]
   8177c:	4313      	orrs	r3, r2
   8177e:	b2db      	uxtb	r3, r3
   81780:	2b00      	cmp	r3, #0
   81782:	d1db      	bne.n	8173c <lcd_print_s+0x18>
        }
    }

    tx_packet->chip = 0x27;
   81784:	693b      	ldr	r3, [r7, #16]
   81786:	2227      	movs	r2, #39	; 0x27
   81788:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
    tx_packet->addr[0] = 0x00;
   8178c:	693b      	ldr	r3, [r7, #16]
   8178e:	2200      	movs	r2, #0
   81790:	701a      	strb	r2, [r3, #0]
    tx_packet->addr_length = 0;
   81792:	693b      	ldr	r3, [r7, #16]
   81794:	2200      	movs	r2, #0
   81796:	605a      	str	r2, [r3, #4]
    
    // Calculate display address
    switch(line)
   81798:	79fb      	ldrb	r3, [r7, #7]
   8179a:	2b03      	cmp	r3, #3
   8179c:	d006      	beq.n	817ac <lcd_print_s+0x88>
   8179e:	2b04      	cmp	r3, #4
   817a0:	d007      	beq.n	817b2 <lcd_print_s+0x8e>
   817a2:	2b02      	cmp	r3, #2
   817a4:	d108      	bne.n	817b8 <lcd_print_s+0x94>
    {
        case 2:
        addr = 0x80 | 0x40;   // set address to start of line 2
   817a6:	23c0      	movs	r3, #192	; 0xc0
   817a8:	75fb      	strb	r3, [r7, #23]
        break;
   817aa:	e008      	b.n	817be <lcd_print_s+0x9a>
        case 3:
        addr = 0x80 | 0x14;   // set address to start of line 3
   817ac:	2394      	movs	r3, #148	; 0x94
   817ae:	75fb      	strb	r3, [r7, #23]
        break;
   817b0:	e005      	b.n	817be <lcd_print_s+0x9a>
        case 4:
        addr = 0x80 | 0x54;   // set address to start of line 4
   817b2:	23d4      	movs	r3, #212	; 0xd4
   817b4:	75fb      	strb	r3, [r7, #23]
        break;
   817b6:	e002      	b.n	817be <lcd_print_s+0x9a>
        case 1:
        default:
        addr = 0x80;          // set address to start of line 1
   817b8:	2380      	movs	r3, #128	; 0x80
   817ba:	75fb      	strb	r3, [r7, #23]
        break;
   817bc:	bf00      	nop
    }
    addr += col;  // set column in the selected line
   817be:	7dfa      	ldrb	r2, [r7, #23]
   817c0:	79bb      	ldrb	r3, [r7, #6]
   817c2:	4413      	add	r3, r2
   817c4:	75fb      	strb	r3, [r7, #23]

    // Set cursor
    cmd = LCD_FUNTION_WRITE | backlight;
   817c6:	4b5c      	ldr	r3, [pc, #368]	; (81938 <lcd_print_s+0x214>)
   817c8:	781b      	ldrb	r3, [r3, #0]
   817ca:	73fb      	strb	r3, [r7, #15]
    tx_packet->buffer[0] = cmd | LCD_ENABLE_HIGH | (addr & 0xF0);
   817cc:	7dfb      	ldrb	r3, [r7, #23]
   817ce:	f023 030f 	bic.w	r3, r3, #15
   817d2:	b2da      	uxtb	r2, r3
   817d4:	7bfb      	ldrb	r3, [r7, #15]
   817d6:	4313      	orrs	r3, r2
   817d8:	b2db      	uxtb	r3, r3
   817da:	f043 0304 	orr.w	r3, r3, #4
   817de:	b2da      	uxtb	r2, r3
   817e0:	693b      	ldr	r3, [r7, #16]
   817e2:	721a      	strb	r2, [r3, #8]
    tx_packet->buffer[1] = cmd | LCD_ENABLE_LOW  | (addr & 0xF0);
   817e4:	f997 3017 	ldrsb.w	r3, [r7, #23]
   817e8:	f023 030f 	bic.w	r3, r3, #15
   817ec:	b25a      	sxtb	r2, r3
   817ee:	f997 300f 	ldrsb.w	r3, [r7, #15]
   817f2:	4313      	orrs	r3, r2
   817f4:	b25b      	sxtb	r3, r3
   817f6:	b2da      	uxtb	r2, r3
   817f8:	693b      	ldr	r3, [r7, #16]
   817fa:	725a      	strb	r2, [r3, #9]
    tx_packet->buffer[2] = cmd | LCD_ENABLE_HIGH | ((addr & 0x0F) << 4);
   817fc:	7dfb      	ldrb	r3, [r7, #23]
   817fe:	011b      	lsls	r3, r3, #4
   81800:	b2da      	uxtb	r2, r3
   81802:	7bfb      	ldrb	r3, [r7, #15]
   81804:	4313      	orrs	r3, r2
   81806:	b2db      	uxtb	r3, r3
   81808:	f043 0304 	orr.w	r3, r3, #4
   8180c:	b2da      	uxtb	r2, r3
   8180e:	693b      	ldr	r3, [r7, #16]
   81810:	729a      	strb	r2, [r3, #10]
    tx_packet->buffer[3] = cmd | LCD_ENABLE_LOW  | ((addr & 0x0F) << 4);
   81812:	7dfb      	ldrb	r3, [r7, #23]
   81814:	011b      	lsls	r3, r3, #4
   81816:	b25a      	sxtb	r2, r3
   81818:	f997 300f 	ldrsb.w	r3, [r7, #15]
   8181c:	4313      	orrs	r3, r2
   8181e:	b25b      	sxtb	r3, r3
   81820:	b2da      	uxtb	r2, r3
   81822:	693b      	ldr	r3, [r7, #16]
   81824:	72da      	strb	r2, [r3, #11]
    
    // write string ...
    cmd = LCD_WRITE_DDR | backlight;
   81826:	4b44      	ldr	r3, [pc, #272]	; (81938 <lcd_print_s+0x214>)
   81828:	781b      	ldrb	r3, [r3, #0]
   8182a:	f043 0301 	orr.w	r3, r3, #1
   8182e:	73fb      	strb	r3, [r7, #15]
    for(count = 0; count < strlen(str); count++)
   81830:	2300      	movs	r3, #0
   81832:	75bb      	strb	r3, [r7, #22]
   81834:	e04b      	b.n	818ce <lcd_print_s+0x1aa>
    {
        byte = str[count];
   81836:	7dbb      	ldrb	r3, [r7, #22]
   81838:	683a      	ldr	r2, [r7, #0]
   8183a:	4413      	add	r3, r2
   8183c:	781b      	ldrb	r3, [r3, #0]
   8183e:	73bb      	strb	r3, [r7, #14]
        tx_packet->buffer[4 + count * 4 + 0] = cmd | LCD_ENABLE_HIGH | (byte & 0xF0);
   81840:	7dbb      	ldrb	r3, [r7, #22]
   81842:	3301      	adds	r3, #1
   81844:	009b      	lsls	r3, r3, #2
   81846:	7bba      	ldrb	r2, [r7, #14]
   81848:	f022 020f 	bic.w	r2, r2, #15
   8184c:	b2d1      	uxtb	r1, r2
   8184e:	7bfa      	ldrb	r2, [r7, #15]
   81850:	430a      	orrs	r2, r1
   81852:	b2d2      	uxtb	r2, r2
   81854:	f042 0204 	orr.w	r2, r2, #4
   81858:	b2d1      	uxtb	r1, r2
   8185a:	693a      	ldr	r2, [r7, #16]
   8185c:	4413      	add	r3, r2
   8185e:	460a      	mov	r2, r1
   81860:	721a      	strb	r2, [r3, #8]
        tx_packet->buffer[4 + count * 4 + 1] = cmd | LCD_ENABLE_LOW  | (byte & 0xF0);
   81862:	7dbb      	ldrb	r3, [r7, #22]
   81864:	3301      	adds	r3, #1
   81866:	009b      	lsls	r3, r3, #2
   81868:	3301      	adds	r3, #1
   8186a:	f997 200e 	ldrsb.w	r2, [r7, #14]
   8186e:	f022 020f 	bic.w	r2, r2, #15
   81872:	b251      	sxtb	r1, r2
   81874:	f997 200f 	ldrsb.w	r2, [r7, #15]
   81878:	430a      	orrs	r2, r1
   8187a:	b252      	sxtb	r2, r2
   8187c:	b2d1      	uxtb	r1, r2
   8187e:	693a      	ldr	r2, [r7, #16]
   81880:	4413      	add	r3, r2
   81882:	460a      	mov	r2, r1
   81884:	721a      	strb	r2, [r3, #8]
        tx_packet->buffer[4 + count * 4 + 2] = cmd | LCD_ENABLE_HIGH | ((byte & 0x0F) << 4);
   81886:	7dbb      	ldrb	r3, [r7, #22]
   81888:	3301      	adds	r3, #1
   8188a:	009b      	lsls	r3, r3, #2
   8188c:	3302      	adds	r3, #2
   8188e:	7bba      	ldrb	r2, [r7, #14]
   81890:	0112      	lsls	r2, r2, #4
   81892:	b2d1      	uxtb	r1, r2
   81894:	7bfa      	ldrb	r2, [r7, #15]
   81896:	430a      	orrs	r2, r1
   81898:	b2d2      	uxtb	r2, r2
   8189a:	f042 0204 	orr.w	r2, r2, #4
   8189e:	b2d1      	uxtb	r1, r2
   818a0:	693a      	ldr	r2, [r7, #16]
   818a2:	4413      	add	r3, r2
   818a4:	460a      	mov	r2, r1
   818a6:	721a      	strb	r2, [r3, #8]
        tx_packet->buffer[4 + count * 4 + 3] = cmd | LCD_ENABLE_LOW  | ((byte & 0x0F) << 4);
   818a8:	7dbb      	ldrb	r3, [r7, #22]
   818aa:	3301      	adds	r3, #1
   818ac:	009b      	lsls	r3, r3, #2
   818ae:	3303      	adds	r3, #3
   818b0:	7bba      	ldrb	r2, [r7, #14]
   818b2:	0112      	lsls	r2, r2, #4
   818b4:	b251      	sxtb	r1, r2
   818b6:	f997 200f 	ldrsb.w	r2, [r7, #15]
   818ba:	430a      	orrs	r2, r1
   818bc:	b252      	sxtb	r2, r2
   818be:	b2d1      	uxtb	r1, r2
   818c0:	693a      	ldr	r2, [r7, #16]
   818c2:	4413      	add	r3, r2
   818c4:	460a      	mov	r2, r1
   818c6:	721a      	strb	r2, [r3, #8]
    for(count = 0; count < strlen(str); count++)
   818c8:	7dbb      	ldrb	r3, [r7, #22]
   818ca:	3301      	adds	r3, #1
   818cc:	75bb      	strb	r3, [r7, #22]
   818ce:	7dbc      	ldrb	r4, [r7, #22]
   818d0:	6838      	ldr	r0, [r7, #0]
   818d2:	4b1a      	ldr	r3, [pc, #104]	; (8193c <lcd_print_s+0x218>)
   818d4:	4798      	blx	r3
   818d6:	4603      	mov	r3, r0
   818d8:	429c      	cmp	r4, r3
   818da:	d3ac      	bcc.n	81836 <lcd_print_s+0x112>
    }
    tx_packet->length = 4 + count * 4;
   818dc:	7dbb      	ldrb	r3, [r7, #22]
   818de:	3301      	adds	r3, #1
   818e0:	009b      	lsls	r3, r3, #2
   818e2:	461a      	mov	r2, r3
   818e4:	693b      	ldr	r3, [r7, #16]
   818e6:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

    lcdIsBusy = true;
   818ea:	4b0b      	ldr	r3, [pc, #44]	; (81918 <lcd_print_s+0x1f4>)
   818ec:	2201      	movs	r2, #1
   818ee:	701a      	strb	r2, [r3, #0]
    twi_pdc_master_write(TWI0, tx_packet);
   818f0:	6939      	ldr	r1, [r7, #16]
   818f2:	480e      	ldr	r0, [pc, #56]	; (8192c <lcd_print_s+0x208>)
   818f4:	4b12      	ldr	r3, [pc, #72]	; (81940 <lcd_print_s+0x21c>)
   818f6:	4798      	blx	r3
    lcdStartTicks = getTicks();
   818f8:	4b05      	ldr	r3, [pc, #20]	; (81910 <lcd_print_s+0x1ec>)
   818fa:	4798      	blx	r3
   818fc:	4602      	mov	r2, r0
   818fe:	4b05      	ldr	r3, [pc, #20]	; (81914 <lcd_print_s+0x1f0>)
   81900:	601a      	str	r2, [r3, #0]
}
   81902:	bf00      	nop
   81904:	371c      	adds	r7, #28
   81906:	46bd      	mov	sp, r7
   81908:	bd90      	pop	{r4, r7, pc}
   8190a:	bf00      	nop
   8190c:	00080f95 	.word	0x00080f95
   81910:	00082fd9 	.word	0x00082fd9
   81914:	20070dcc 	.word	0x20070dcc
   81918:	20070dca 	.word	0x20070dca
   8191c:	20070dd0 	.word	0x20070dd0
   81920:	4008c100 	.word	0x4008c100
   81924:	000802d5 	.word	0x000802d5
   81928:	20070dd4 	.word	0x20070dd4
   8192c:	4008c000 	.word	0x4008c000
   81930:	000815d5 	.word	0x000815d5
   81934:	00080f81 	.word	0x00080f81
   81938:	20070dc9 	.word	0x20070dc9
   8193c:	0008563d 	.word	0x0008563d
   81940:	00081095 	.word	0x00081095

00081944 <lcd_is_busy>:
    twi_pdc_master_write(TWI0, tx_packet);
    lcdStartTicks = getTicks();
}

uint8_t lcd_is_busy(void)
{
   81944:	b480      	push	{r7}
   81946:	af00      	add	r7, sp, #0
    return lcdIsBusy;
   81948:	4b02      	ldr	r3, [pc, #8]	; (81954 <lcd_is_busy+0x10>)
   8194a:	781b      	ldrb	r3, [r3, #0]
}
   8194c:	4618      	mov	r0, r3
   8194e:	46bd      	mov	sp, r7
   81950:	bc80      	pop	{r7}
   81952:	4770      	bx	lr
   81954:	20070dca 	.word	0x20070dca

00081958 <send_nibble>:

/************************************************************
* Local Functions                                           *
************************************************************/
static void send_nibble(uint8_t cmd, uint8_t byte)
{
   81958:	b580      	push	{r7, lr}
   8195a:	b084      	sub	sp, #16
   8195c:	af00      	add	r7, sp, #0
   8195e:	4603      	mov	r3, r0
   81960:	460a      	mov	r2, r1
   81962:	71fb      	strb	r3, [r7, #7]
   81964:	4613      	mov	r3, r2
   81966:	71bb      	strb	r3, [r7, #6]
    twi_packet_t *tx_packet = twi_get_tx_packet();
   81968:	4b32      	ldr	r3, [pc, #200]	; (81a34 <send_nibble+0xdc>)
   8196a:	4798      	blx	r3
   8196c:	60f8      	str	r0, [r7, #12]

    while(lcdIsBusy | twi_is_busy())
   8196e:	e019      	b.n	819a4 <send_nibble+0x4c>
    {
        if((getTicks() - lcdStartTicks) > LCD_TIMEOUT_DELAY)
   81970:	4b31      	ldr	r3, [pc, #196]	; (81a38 <send_nibble+0xe0>)
   81972:	4798      	blx	r3
   81974:	4602      	mov	r2, r0
   81976:	4b31      	ldr	r3, [pc, #196]	; (81a3c <send_nibble+0xe4>)
   81978:	681b      	ldr	r3, [r3, #0]
   8197a:	1ad3      	subs	r3, r2, r3
   8197c:	2b0a      	cmp	r3, #10
   8197e:	d911      	bls.n	819a4 <send_nibble+0x4c>
        {
            lcdIsBusy = false;
   81980:	4b2f      	ldr	r3, [pc, #188]	; (81a40 <send_nibble+0xe8>)
   81982:	2200      	movs	r2, #0
   81984:	701a      	strb	r2, [r3, #0]
            lcdTimeoutErrorCntr++;
   81986:	4b2f      	ldr	r3, [pc, #188]	; (81a44 <send_nibble+0xec>)
   81988:	681b      	ldr	r3, [r3, #0]
   8198a:	3301      	adds	r3, #1
   8198c:	4a2d      	ldr	r2, [pc, #180]	; (81a44 <send_nibble+0xec>)
   8198e:	6013      	str	r3, [r2, #0]
            pdc_disable_transfer(PDC_TWI0, PERIPH_PTCR_TXTDIS | PERIPH_PTCR_RXTDIS);
   81990:	f240 2102 	movw	r1, #514	; 0x202
   81994:	482c      	ldr	r0, [pc, #176]	; (81a48 <send_nibble+0xf0>)
   81996:	4b2d      	ldr	r3, [pc, #180]	; (81a4c <send_nibble+0xf4>)
   81998:	4798      	blx	r3
            twi_master_setup(TWI0, &twiConfig);
   8199a:	492d      	ldr	r1, [pc, #180]	; (81a50 <send_nibble+0xf8>)
   8199c:	482d      	ldr	r0, [pc, #180]	; (81a54 <send_nibble+0xfc>)
   8199e:	4b2e      	ldr	r3, [pc, #184]	; (81a58 <send_nibble+0x100>)
   819a0:	4798      	blx	r3
            break;
   819a2:	e009      	b.n	819b8 <send_nibble+0x60>
    while(lcdIsBusy | twi_is_busy())
   819a4:	4b2d      	ldr	r3, [pc, #180]	; (81a5c <send_nibble+0x104>)
   819a6:	4798      	blx	r3
   819a8:	4603      	mov	r3, r0
   819aa:	461a      	mov	r2, r3
   819ac:	4b24      	ldr	r3, [pc, #144]	; (81a40 <send_nibble+0xe8>)
   819ae:	781b      	ldrb	r3, [r3, #0]
   819b0:	4313      	orrs	r3, r2
   819b2:	b2db      	uxtb	r3, r3
   819b4:	2b00      	cmp	r3, #0
   819b6:	d1db      	bne.n	81970 <send_nibble+0x18>
        }
    }

    tx_packet->chip = 0x27;
   819b8:	68fb      	ldr	r3, [r7, #12]
   819ba:	2227      	movs	r2, #39	; 0x27
   819bc:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
    tx_packet->addr[0] = 0x00;
   819c0:	68fb      	ldr	r3, [r7, #12]
   819c2:	2200      	movs	r2, #0
   819c4:	701a      	strb	r2, [r3, #0]
    tx_packet->addr_length = 0;
   819c6:	68fb      	ldr	r3, [r7, #12]
   819c8:	2200      	movs	r2, #0
   819ca:	605a      	str	r2, [r3, #4]
    
    cmd = (cmd & 0x0F) | backlight;                  /* mask command bits */
   819cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
   819d0:	f003 030f 	and.w	r3, r3, #15
   819d4:	b25a      	sxtb	r2, r3
   819d6:	4b22      	ldr	r3, [pc, #136]	; (81a60 <send_nibble+0x108>)
   819d8:	781b      	ldrb	r3, [r3, #0]
   819da:	b25b      	sxtb	r3, r3
   819dc:	4313      	orrs	r3, r2
   819de:	b25b      	sxtb	r3, r3
   819e0:	71fb      	strb	r3, [r7, #7]
    tx_packet->buffer[0] = cmd | LCD_ENABLE_HIGH | ((byte & 0x0F) << 4);
   819e2:	79bb      	ldrb	r3, [r7, #6]
   819e4:	011b      	lsls	r3, r3, #4
   819e6:	b2da      	uxtb	r2, r3
   819e8:	79fb      	ldrb	r3, [r7, #7]
   819ea:	4313      	orrs	r3, r2
   819ec:	b2db      	uxtb	r3, r3
   819ee:	f043 0304 	orr.w	r3, r3, #4
   819f2:	b2da      	uxtb	r2, r3
   819f4:	68fb      	ldr	r3, [r7, #12]
   819f6:	721a      	strb	r2, [r3, #8]
    tx_packet->buffer[1] = cmd | LCD_ENABLE_LOW  | ((byte & 0x0F) << 4);
   819f8:	79bb      	ldrb	r3, [r7, #6]
   819fa:	011b      	lsls	r3, r3, #4
   819fc:	b25a      	sxtb	r2, r3
   819fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81a02:	4313      	orrs	r3, r2
   81a04:	b25b      	sxtb	r3, r3
   81a06:	b2da      	uxtb	r2, r3
   81a08:	68fb      	ldr	r3, [r7, #12]
   81a0a:	725a      	strb	r2, [r3, #9]
    tx_packet->length = 2;
   81a0c:	68fb      	ldr	r3, [r7, #12]
   81a0e:	2202      	movs	r2, #2
   81a10:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
    
    lcdIsBusy = true;
   81a14:	4b0a      	ldr	r3, [pc, #40]	; (81a40 <send_nibble+0xe8>)
   81a16:	2201      	movs	r2, #1
   81a18:	701a      	strb	r2, [r3, #0]
    twi_pdc_master_write(TWI0, tx_packet);
   81a1a:	68f9      	ldr	r1, [r7, #12]
   81a1c:	480d      	ldr	r0, [pc, #52]	; (81a54 <send_nibble+0xfc>)
   81a1e:	4b11      	ldr	r3, [pc, #68]	; (81a64 <send_nibble+0x10c>)
   81a20:	4798      	blx	r3
    lcdStartTicks = getTicks();
   81a22:	4b05      	ldr	r3, [pc, #20]	; (81a38 <send_nibble+0xe0>)
   81a24:	4798      	blx	r3
   81a26:	4602      	mov	r2, r0
   81a28:	4b04      	ldr	r3, [pc, #16]	; (81a3c <send_nibble+0xe4>)
   81a2a:	601a      	str	r2, [r3, #0]
}
   81a2c:	bf00      	nop
   81a2e:	3710      	adds	r7, #16
   81a30:	46bd      	mov	sp, r7
   81a32:	bd80      	pop	{r7, pc}
   81a34:	00080f95 	.word	0x00080f95
   81a38:	00082fd9 	.word	0x00082fd9
   81a3c:	20070dcc 	.word	0x20070dcc
   81a40:	20070dca 	.word	0x20070dca
   81a44:	20070dd0 	.word	0x20070dd0
   81a48:	4008c100 	.word	0x4008c100
   81a4c:	000802d5 	.word	0x000802d5
   81a50:	20070dd4 	.word	0x20070dd4
   81a54:	4008c000 	.word	0x4008c000
   81a58:	000815d5 	.word	0x000815d5
   81a5c:	00080f81 	.word	0x00080f81
   81a60:	20070dc9 	.word	0x20070dc9
   81a64:	00081095 	.word	0x00081095

00081a68 <send_byte>:

static void send_byte(uint8_t cmd, uint8_t byte)
{
   81a68:	b580      	push	{r7, lr}
   81a6a:	b084      	sub	sp, #16
   81a6c:	af00      	add	r7, sp, #0
   81a6e:	4603      	mov	r3, r0
   81a70:	460a      	mov	r2, r1
   81a72:	71fb      	strb	r3, [r7, #7]
   81a74:	4613      	mov	r3, r2
   81a76:	71bb      	strb	r3, [r7, #6]
    twi_packet_t *tx_packet = twi_get_tx_packet();
   81a78:	4b3e      	ldr	r3, [pc, #248]	; (81b74 <send_byte+0x10c>)
   81a7a:	4798      	blx	r3
   81a7c:	60f8      	str	r0, [r7, #12]

    while(lcdIsBusy | twi_is_busy())
   81a7e:	e019      	b.n	81ab4 <send_byte+0x4c>
    {
        if((getTicks() - lcdStartTicks) > LCD_TIMEOUT_DELAY)
   81a80:	4b3d      	ldr	r3, [pc, #244]	; (81b78 <send_byte+0x110>)
   81a82:	4798      	blx	r3
   81a84:	4602      	mov	r2, r0
   81a86:	4b3d      	ldr	r3, [pc, #244]	; (81b7c <send_byte+0x114>)
   81a88:	681b      	ldr	r3, [r3, #0]
   81a8a:	1ad3      	subs	r3, r2, r3
   81a8c:	2b0a      	cmp	r3, #10
   81a8e:	d911      	bls.n	81ab4 <send_byte+0x4c>
        {
            lcdIsBusy = false;
   81a90:	4b3b      	ldr	r3, [pc, #236]	; (81b80 <send_byte+0x118>)
   81a92:	2200      	movs	r2, #0
   81a94:	701a      	strb	r2, [r3, #0]
            lcdTimeoutErrorCntr++;
   81a96:	4b3b      	ldr	r3, [pc, #236]	; (81b84 <send_byte+0x11c>)
   81a98:	681b      	ldr	r3, [r3, #0]
   81a9a:	3301      	adds	r3, #1
   81a9c:	4a39      	ldr	r2, [pc, #228]	; (81b84 <send_byte+0x11c>)
   81a9e:	6013      	str	r3, [r2, #0]
            pdc_disable_transfer(PDC_TWI0, PERIPH_PTCR_TXTDIS | PERIPH_PTCR_RXTDIS);
   81aa0:	f240 2102 	movw	r1, #514	; 0x202
   81aa4:	4838      	ldr	r0, [pc, #224]	; (81b88 <send_byte+0x120>)
   81aa6:	4b39      	ldr	r3, [pc, #228]	; (81b8c <send_byte+0x124>)
   81aa8:	4798      	blx	r3
            twi_master_setup(TWI0, &twiConfig);
   81aaa:	4939      	ldr	r1, [pc, #228]	; (81b90 <send_byte+0x128>)
   81aac:	4839      	ldr	r0, [pc, #228]	; (81b94 <send_byte+0x12c>)
   81aae:	4b3a      	ldr	r3, [pc, #232]	; (81b98 <send_byte+0x130>)
   81ab0:	4798      	blx	r3
            break;
   81ab2:	e009      	b.n	81ac8 <send_byte+0x60>
    while(lcdIsBusy | twi_is_busy())
   81ab4:	4b39      	ldr	r3, [pc, #228]	; (81b9c <send_byte+0x134>)
   81ab6:	4798      	blx	r3
   81ab8:	4603      	mov	r3, r0
   81aba:	461a      	mov	r2, r3
   81abc:	4b30      	ldr	r3, [pc, #192]	; (81b80 <send_byte+0x118>)
   81abe:	781b      	ldrb	r3, [r3, #0]
   81ac0:	4313      	orrs	r3, r2
   81ac2:	b2db      	uxtb	r3, r3
   81ac4:	2b00      	cmp	r3, #0
   81ac6:	d1db      	bne.n	81a80 <send_byte+0x18>
        }
    }

    tx_packet->chip = 0x27;
   81ac8:	68fb      	ldr	r3, [r7, #12]
   81aca:	2227      	movs	r2, #39	; 0x27
   81acc:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
    tx_packet->addr[0] = 0x00;
   81ad0:	68fb      	ldr	r3, [r7, #12]
   81ad2:	2200      	movs	r2, #0
   81ad4:	701a      	strb	r2, [r3, #0]
    tx_packet->addr_length = 0;
   81ad6:	68fb      	ldr	r3, [r7, #12]
   81ad8:	2200      	movs	r2, #0
   81ada:	605a      	str	r2, [r3, #4]
    
    cmd = (cmd & 0x0F) | backlight;                  /* mask command bits */
   81adc:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81ae0:	f003 030f 	and.w	r3, r3, #15
   81ae4:	b25a      	sxtb	r2, r3
   81ae6:	4b2e      	ldr	r3, [pc, #184]	; (81ba0 <send_byte+0x138>)
   81ae8:	781b      	ldrb	r3, [r3, #0]
   81aea:	b25b      	sxtb	r3, r3
   81aec:	4313      	orrs	r3, r2
   81aee:	b25b      	sxtb	r3, r3
   81af0:	71fb      	strb	r3, [r7, #7]
    tx_packet->buffer[0] = cmd | LCD_ENABLE_HIGH | (byte & 0xF0) ;
   81af2:	79bb      	ldrb	r3, [r7, #6]
   81af4:	f023 030f 	bic.w	r3, r3, #15
   81af8:	b2da      	uxtb	r2, r3
   81afa:	79fb      	ldrb	r3, [r7, #7]
   81afc:	4313      	orrs	r3, r2
   81afe:	b2db      	uxtb	r3, r3
   81b00:	f043 0304 	orr.w	r3, r3, #4
   81b04:	b2da      	uxtb	r2, r3
   81b06:	68fb      	ldr	r3, [r7, #12]
   81b08:	721a      	strb	r2, [r3, #8]
    tx_packet->buffer[1] = cmd | LCD_ENABLE_LOW  | (byte & 0xF0) ;
   81b0a:	f997 3006 	ldrsb.w	r3, [r7, #6]
   81b0e:	f023 030f 	bic.w	r3, r3, #15
   81b12:	b25a      	sxtb	r2, r3
   81b14:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81b18:	4313      	orrs	r3, r2
   81b1a:	b25b      	sxtb	r3, r3
   81b1c:	b2da      	uxtb	r2, r3
   81b1e:	68fb      	ldr	r3, [r7, #12]
   81b20:	725a      	strb	r2, [r3, #9]
    tx_packet->buffer[2] = cmd | LCD_ENABLE_HIGH | ((byte & 0x0F) << 4);
   81b22:	79bb      	ldrb	r3, [r7, #6]
   81b24:	011b      	lsls	r3, r3, #4
   81b26:	b2da      	uxtb	r2, r3
   81b28:	79fb      	ldrb	r3, [r7, #7]
   81b2a:	4313      	orrs	r3, r2
   81b2c:	b2db      	uxtb	r3, r3
   81b2e:	f043 0304 	orr.w	r3, r3, #4
   81b32:	b2da      	uxtb	r2, r3
   81b34:	68fb      	ldr	r3, [r7, #12]
   81b36:	729a      	strb	r2, [r3, #10]
    tx_packet->buffer[3] = cmd | LCD_ENABLE_LOW  | ((byte & 0x0F) << 4);
   81b38:	79bb      	ldrb	r3, [r7, #6]
   81b3a:	011b      	lsls	r3, r3, #4
   81b3c:	b25a      	sxtb	r2, r3
   81b3e:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81b42:	4313      	orrs	r3, r2
   81b44:	b25b      	sxtb	r3, r3
   81b46:	b2da      	uxtb	r2, r3
   81b48:	68fb      	ldr	r3, [r7, #12]
   81b4a:	72da      	strb	r2, [r3, #11]
    tx_packet->length = 4;
   81b4c:	68fb      	ldr	r3, [r7, #12]
   81b4e:	2204      	movs	r2, #4
   81b50:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
    
    lcdIsBusy = true;
   81b54:	4b0a      	ldr	r3, [pc, #40]	; (81b80 <send_byte+0x118>)
   81b56:	2201      	movs	r2, #1
   81b58:	701a      	strb	r2, [r3, #0]
    twi_pdc_master_write(TWI0, tx_packet);
   81b5a:	68f9      	ldr	r1, [r7, #12]
   81b5c:	480d      	ldr	r0, [pc, #52]	; (81b94 <send_byte+0x12c>)
   81b5e:	4b11      	ldr	r3, [pc, #68]	; (81ba4 <send_byte+0x13c>)
   81b60:	4798      	blx	r3
    lcdStartTicks = getTicks();
   81b62:	4b05      	ldr	r3, [pc, #20]	; (81b78 <send_byte+0x110>)
   81b64:	4798      	blx	r3
   81b66:	4602      	mov	r2, r0
   81b68:	4b04      	ldr	r3, [pc, #16]	; (81b7c <send_byte+0x114>)
   81b6a:	601a      	str	r2, [r3, #0]
}
   81b6c:	bf00      	nop
   81b6e:	3710      	adds	r7, #16
   81b70:	46bd      	mov	sp, r7
   81b72:	bd80      	pop	{r7, pc}
   81b74:	00080f95 	.word	0x00080f95
   81b78:	00082fd9 	.word	0x00082fd9
   81b7c:	20070dcc 	.word	0x20070dcc
   81b80:	20070dca 	.word	0x20070dca
   81b84:	20070dd0 	.word	0x20070dd0
   81b88:	4008c100 	.word	0x4008c100
   81b8c:	000802d5 	.word	0x000802d5
   81b90:	20070dd4 	.word	0x20070dd4
   81b94:	4008c000 	.word	0x4008c000
   81b98:	000815d5 	.word	0x000815d5
   81b9c:	00080f81 	.word	0x00080f81
   81ba0:	20070dc9 	.word	0x20070dc9
   81ba4:	00081095 	.word	0x00081095

00081ba8 <lcd_callback>:

static void lcd_callback(void)
{
   81ba8:	b480      	push	{r7}
   81baa:	af00      	add	r7, sp, #0
    lcdIsBusy = false;
   81bac:	4b03      	ldr	r3, [pc, #12]	; (81bbc <lcd_callback+0x14>)
   81bae:	2200      	movs	r2, #0
   81bb0:	701a      	strb	r2, [r3, #0]
}
   81bb2:	bf00      	nop
   81bb4:	46bd      	mov	sp, r7
   81bb6:	bc80      	pop	{r7}
   81bb8:	4770      	bx	lr
   81bba:	bf00      	nop
   81bbc:	20070dca 	.word	0x20070dca

00081bc0 <ioport_set_pin_level>:
 *
 * \param pin IOPORT pin to configure
 * \param level Logical value of the pin
 */
static inline void ioport_set_pin_level(ioport_pin_t pin, bool level)
{
   81bc0:	b480      	push	{r7}
   81bc2:	b08b      	sub	sp, #44	; 0x2c
   81bc4:	af00      	add	r7, sp, #0
   81bc6:	6078      	str	r0, [r7, #4]
   81bc8:	460b      	mov	r3, r1
   81bca:	70fb      	strb	r3, [r7, #3]
   81bcc:	687b      	ldr	r3, [r7, #4]
   81bce:	627b      	str	r3, [r7, #36]	; 0x24
   81bd0:	78fb      	ldrb	r3, [r7, #3]
   81bd2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   81bd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   81bd8:	61fb      	str	r3, [r7, #28]
   81bda:	69fb      	ldr	r3, [r7, #28]
   81bdc:	61bb      	str	r3, [r7, #24]
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   81bde:	69bb      	ldr	r3, [r7, #24]
   81be0:	095b      	lsrs	r3, r3, #5
   81be2:	617b      	str	r3, [r7, #20]
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   81be4:	697b      	ldr	r3, [r7, #20]
   81be6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81bea:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81bee:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);
   81bf0:	613b      	str	r3, [r7, #16]

	if (level) {
   81bf2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   81bf6:	2b00      	cmp	r3, #0
   81bf8:	d009      	beq.n	81c0e <ioport_set_pin_level+0x4e>
   81bfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   81bfc:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   81bfe:	68fb      	ldr	r3, [r7, #12]
   81c00:	f003 031f 	and.w	r3, r3, #31
   81c04:	2201      	movs	r2, #1
   81c06:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   81c08:	693b      	ldr	r3, [r7, #16]
   81c0a:	631a      	str	r2, [r3, #48]	; 0x30
	arch_ioport_set_pin_level(pin, level);
}
   81c0c:	e008      	b.n	81c20 <ioport_set_pin_level+0x60>
   81c0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   81c10:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   81c12:	68bb      	ldr	r3, [r7, #8]
   81c14:	f003 031f 	and.w	r3, r3, #31
   81c18:	2201      	movs	r2, #1
   81c1a:	409a      	lsls	r2, r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   81c1c:	693b      	ldr	r3, [r7, #16]
   81c1e:	635a      	str	r2, [r3, #52]	; 0x34
   81c20:	bf00      	nop
   81c22:	372c      	adds	r7, #44	; 0x2c
   81c24:	46bd      	mov	sp, r7
   81c26:	bc80      	pop	{r7}
   81c28:	4770      	bx	lr

00081c2a <ioport_get_pin_level>:
 *
 * \param pin IOPORT pin to read
 * \return Current logical value of the specified pin
 */
static inline bool ioport_get_pin_level(ioport_pin_t pin)
{
   81c2a:	b480      	push	{r7}
   81c2c:	b089      	sub	sp, #36	; 0x24
   81c2e:	af00      	add	r7, sp, #0
   81c30:	6078      	str	r0, [r7, #4]
   81c32:	687b      	ldr	r3, [r7, #4]
   81c34:	61fb      	str	r3, [r7, #28]
   81c36:	69fb      	ldr	r3, [r7, #28]
   81c38:	61bb      	str	r3, [r7, #24]
   81c3a:	69bb      	ldr	r3, [r7, #24]
   81c3c:	617b      	str	r3, [r7, #20]
	return pin >> 5;
   81c3e:	697b      	ldr	r3, [r7, #20]
   81c40:	095b      	lsrs	r3, r3, #5
   81c42:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   81c44:	693b      	ldr	r3, [r7, #16]
   81c46:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81c4a:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81c4e:	025b      	lsls	r3, r3, #9
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   81c50:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   81c52:	69fb      	ldr	r3, [r7, #28]
   81c54:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   81c56:	68fb      	ldr	r3, [r7, #12]
   81c58:	f003 031f 	and.w	r3, r3, #31
   81c5c:	2101      	movs	r1, #1
   81c5e:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   81c62:	4013      	ands	r3, r2
   81c64:	2b00      	cmp	r3, #0
   81c66:	bf14      	ite	ne
   81c68:	2301      	movne	r3, #1
   81c6a:	2300      	moveq	r3, #0
   81c6c:	b2db      	uxtb	r3, r3
	return arch_ioport_get_pin_level(pin);
}
   81c6e:	4618      	mov	r0, r3
   81c70:	3724      	adds	r7, #36	; 0x24
   81c72:	46bd      	mov	sp, r7
   81c74:	bc80      	pop	{r7}
   81c76:	4770      	bx	lr

00081c78 <menu>:
static void print_menu_sensors(void);
static void print_menu_settings(void);
static void print_cursor(menu_info_t *info);

void menu(event_t event1)
{
   81c78:	b580      	push	{r7, lr}
   81c7a:	b082      	sub	sp, #8
   81c7c:	af00      	add	r7, sp, #0
   81c7e:	4603      	mov	r3, r0
   81c80:	71fb      	strb	r3, [r7, #7]
    switch (act_menu)
   81c82:	4b28      	ldr	r3, [pc, #160]	; (81d24 <menu+0xac>)
   81c84:	781b      	ldrb	r3, [r3, #0]
   81c86:	2b09      	cmp	r3, #9
   81c88:	d847      	bhi.n	81d1a <menu+0xa2>
   81c8a:	a201      	add	r2, pc, #4	; (adr r2, 81c90 <menu+0x18>)
   81c8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   81c90:	00081cb9 	.word	0x00081cb9
   81c94:	00081cc3 	.word	0x00081cc3
   81c98:	00081ccd 	.word	0x00081ccd
   81c9c:	00081cd7 	.word	0x00081cd7
   81ca0:	00081ce1 	.word	0x00081ce1
   81ca4:	00081cff 	.word	0x00081cff
   81ca8:	00081d09 	.word	0x00081d09
   81cac:	00081ceb 	.word	0x00081ceb
   81cb0:	00081cf5 	.word	0x00081cf5
   81cb4:	00081d13 	.word	0x00081d13
    {
        case MENU_MAIN:
            menu_main(event1);
   81cb8:	79fb      	ldrb	r3, [r7, #7]
   81cba:	4618      	mov	r0, r3
   81cbc:	4b1a      	ldr	r3, [pc, #104]	; (81d28 <menu+0xb0>)
   81cbe:	4798      	blx	r3
            break;
   81cc0:	e02c      	b.n	81d1c <menu+0xa4>
        case MENU_MATCH:
            menu_match(event1);
   81cc2:	79fb      	ldrb	r3, [r7, #7]
   81cc4:	4618      	mov	r0, r3
   81cc6:	4b19      	ldr	r3, [pc, #100]	; (81d2c <menu+0xb4>)
   81cc8:	4798      	blx	r3
            break;
   81cca:	e027      	b.n	81d1c <menu+0xa4>
        case MENU_SENSORS:
            menu_sensors(event1);
   81ccc:	79fb      	ldrb	r3, [r7, #7]
   81cce:	4618      	mov	r0, r3
   81cd0:	4b17      	ldr	r3, [pc, #92]	; (81d30 <menu+0xb8>)
   81cd2:	4798      	blx	r3
            break;
   81cd4:	e022      	b.n	81d1c <menu+0xa4>
        case MENU_SETTINGS:
            menu_settings(event1);
   81cd6:	79fb      	ldrb	r3, [r7, #7]
   81cd8:	4618      	mov	r0, r3
   81cda:	4b16      	ldr	r3, [pc, #88]	; (81d34 <menu+0xbc>)
   81cdc:	4798      	blx	r3
            break;
   81cde:	e01d      	b.n	81d1c <menu+0xa4>
        case MENU_BALL:
            menu_ball(event1);
   81ce0:	79fb      	ldrb	r3, [r7, #7]
   81ce2:	4618      	mov	r0, r3
   81ce4:	4b14      	ldr	r3, [pc, #80]	; (81d38 <menu+0xc0>)
   81ce6:	4798      	blx	r3
            break;
   81ce8:	e018      	b.n	81d1c <menu+0xa4>
        case MENU_COMPASS:
            menu_compass(event1);
   81cea:	79fb      	ldrb	r3, [r7, #7]
   81cec:	4618      	mov	r0, r3
   81cee:	4b13      	ldr	r3, [pc, #76]	; (81d3c <menu+0xc4>)
   81cf0:	4798      	blx	r3
            break;
   81cf2:	e013      	b.n	81d1c <menu+0xa4>
        case MENU_COMPASS_CALIBRATION:
            menu_compass_calibration(event1);
   81cf4:	79fb      	ldrb	r3, [r7, #7]
   81cf6:	4618      	mov	r0, r3
   81cf8:	4b11      	ldr	r3, [pc, #68]	; (81d40 <menu+0xc8>)
   81cfa:	4798      	blx	r3
            break;
   81cfc:	e00e      	b.n	81d1c <menu+0xa4>
        case MENU_LINE:
            menu_line(event1);
   81cfe:	79fb      	ldrb	r3, [r7, #7]
   81d00:	4618      	mov	r0, r3
   81d02:	4b10      	ldr	r3, [pc, #64]	; (81d44 <menu+0xcc>)
   81d04:	4798      	blx	r3
            break;
   81d06:	e009      	b.n	81d1c <menu+0xa4>
        case MENU_LINE_CALIBRATION:
            menu_line_calibration(event1);
   81d08:	79fb      	ldrb	r3, [r7, #7]
   81d0a:	4618      	mov	r0, r3
   81d0c:	4b0e      	ldr	r3, [pc, #56]	; (81d48 <menu+0xd0>)
   81d0e:	4798      	blx	r3
            break;
   81d10:	e004      	b.n	81d1c <menu+0xa4>
        case MENU_SHUTDOWN:
            menu_shutdown(event1);
   81d12:	79fb      	ldrb	r3, [r7, #7]
   81d14:	4618      	mov	r0, r3
   81d16:	4b0d      	ldr	r3, [pc, #52]	; (81d4c <menu+0xd4>)
   81d18:	4798      	blx	r3
        default:
            break;
   81d1a:	bf00      	nop
    }
}
   81d1c:	bf00      	nop
   81d1e:	3708      	adds	r7, #8
   81d20:	46bd      	mov	sp, r7
   81d22:	bd80      	pop	{r7, pc}
   81d24:	20070de0 	.word	0x20070de0
   81d28:	00081d51 	.word	0x00081d51
   81d2c:	00081e79 	.word	0x00081e79
   81d30:	00081ea9 	.word	0x00081ea9
   81d34:	00082255 	.word	0x00082255
   81d38:	00081fcd 	.word	0x00081fcd
   81d3c:	00082021 	.word	0x00082021
   81d40:	000820f5 	.word	0x000820f5
   81d44:	000821f5 	.word	0x000821f5
   81d48:	00082225 	.word	0x00082225
   81d4c:	00082379 	.word	0x00082379

00081d50 <menu_main>:

static void menu_main(event_t event1)
{
   81d50:	b580      	push	{r7, lr}
   81d52:	b082      	sub	sp, #8
   81d54:	af00      	add	r7, sp, #0
   81d56:	4603      	mov	r3, r0
   81d58:	71fb      	strb	r3, [r7, #7]
    if (print_menu)
   81d5a:	4b41      	ldr	r3, [pc, #260]	; (81e60 <menu_main+0x110>)
   81d5c:	781b      	ldrb	r3, [r3, #0]
   81d5e:	2b00      	cmp	r3, #0
   81d60:	d004      	beq.n	81d6c <menu_main+0x1c>
    {
        print_menu = 0;
   81d62:	4b3f      	ldr	r3, [pc, #252]	; (81e60 <menu_main+0x110>)
   81d64:	2200      	movs	r2, #0
   81d66:	701a      	strb	r2, [r3, #0]
        print_menu_main();
   81d68:	4b3e      	ldr	r3, [pc, #248]	; (81e64 <menu_main+0x114>)
   81d6a:	4798      	blx	r3
    }
    
    update_battery(0);
   81d6c:	2000      	movs	r0, #0
   81d6e:	4b3e      	ldr	r3, [pc, #248]	; (81e68 <menu_main+0x118>)
   81d70:	4798      	blx	r3
    
    switch (event1)
   81d72:	79fb      	ldrb	r3, [r7, #7]
   81d74:	3b01      	subs	r3, #1
   81d76:	2b0f      	cmp	r3, #15
   81d78:	d868      	bhi.n	81e4c <menu_main+0xfc>
   81d7a:	a201      	add	r2, pc, #4	; (adr r2, 81d80 <menu_main+0x30>)
   81d7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   81d80:	00081dc1 	.word	0x00081dc1
   81d84:	00081e4d 	.word	0x00081e4d
   81d88:	00081e4d 	.word	0x00081e4d
   81d8c:	00081e4d 	.word	0x00081e4d
   81d90:	00081e4d 	.word	0x00081e4d
   81d94:	00081e4d 	.word	0x00081e4d
   81d98:	00081e01 	.word	0x00081e01
   81d9c:	00081e4d 	.word	0x00081e4d
   81da0:	00081e4d 	.word	0x00081e4d
   81da4:	00081e4d 	.word	0x00081e4d
   81da8:	00081e4d 	.word	0x00081e4d
   81dac:	00081e4d 	.word	0x00081e4d
   81db0:	00081de1 	.word	0x00081de1
   81db4:	00081e4d 	.word	0x00081e4d
   81db8:	00081e4d 	.word	0x00081e4d
   81dbc:	00081e3f 	.word	0x00081e3f
    {
        case EVENT_BUTTON_UP_P:
            if (menu_info.main.act_cursor_line > menu_info.main.min_cursor_line)
   81dc0:	4b2a      	ldr	r3, [pc, #168]	; (81e6c <menu_main+0x11c>)
   81dc2:	781a      	ldrb	r2, [r3, #0]
   81dc4:	4b29      	ldr	r3, [pc, #164]	; (81e6c <menu_main+0x11c>)
   81dc6:	789b      	ldrb	r3, [r3, #2]
   81dc8:	429a      	cmp	r2, r3
   81dca:	d941      	bls.n	81e50 <menu_main+0x100>
            {
                menu_info.main.act_cursor_line--;
   81dcc:	4b27      	ldr	r3, [pc, #156]	; (81e6c <menu_main+0x11c>)
   81dce:	781b      	ldrb	r3, [r3, #0]
   81dd0:	3b01      	subs	r3, #1
   81dd2:	b2da      	uxtb	r2, r3
   81dd4:	4b25      	ldr	r3, [pc, #148]	; (81e6c <menu_main+0x11c>)
   81dd6:	701a      	strb	r2, [r3, #0]
                print_cursor(&menu_info.main);
   81dd8:	4824      	ldr	r0, [pc, #144]	; (81e6c <menu_main+0x11c>)
   81dda:	4b25      	ldr	r3, [pc, #148]	; (81e70 <menu_main+0x120>)
   81ddc:	4798      	blx	r3
            }
            break;
   81dde:	e037      	b.n	81e50 <menu_main+0x100>
        case EVENT_BUTTON_DOWN_P:
            if (menu_info.main.act_cursor_line < menu_info.main.max_cursor_line)
   81de0:	4b22      	ldr	r3, [pc, #136]	; (81e6c <menu_main+0x11c>)
   81de2:	781a      	ldrb	r2, [r3, #0]
   81de4:	4b21      	ldr	r3, [pc, #132]	; (81e6c <menu_main+0x11c>)
   81de6:	78db      	ldrb	r3, [r3, #3]
   81de8:	429a      	cmp	r2, r3
   81dea:	d233      	bcs.n	81e54 <menu_main+0x104>
            {
                menu_info.main.act_cursor_line++;
   81dec:	4b1f      	ldr	r3, [pc, #124]	; (81e6c <menu_main+0x11c>)
   81dee:	781b      	ldrb	r3, [r3, #0]
   81df0:	3301      	adds	r3, #1
   81df2:	b2da      	uxtb	r2, r3
   81df4:	4b1d      	ldr	r3, [pc, #116]	; (81e6c <menu_main+0x11c>)
   81df6:	701a      	strb	r2, [r3, #0]
                print_cursor(&menu_info.main);
   81df8:	481c      	ldr	r0, [pc, #112]	; (81e6c <menu_main+0x11c>)
   81dfa:	4b1d      	ldr	r3, [pc, #116]	; (81e70 <menu_main+0x120>)
   81dfc:	4798      	blx	r3
            }
            break;
   81dfe:	e029      	b.n	81e54 <menu_main+0x104>
        case EVENT_BUTTON_MID_P:
            {
                switch (menu_info.main.act_cursor_line)
   81e00:	4b1a      	ldr	r3, [pc, #104]	; (81e6c <menu_main+0x11c>)
   81e02:	781b      	ldrb	r3, [r3, #0]
   81e04:	2b03      	cmp	r3, #3
   81e06:	d00b      	beq.n	81e20 <menu_main+0xd0>
   81e08:	2b04      	cmp	r3, #4
   81e0a:	d010      	beq.n	81e2e <menu_main+0xde>
   81e0c:	2b02      	cmp	r3, #2
   81e0e:	d000      	beq.n	81e12 <menu_main+0xc2>
                    case 4:
                        act_menu = MENU_SETTINGS;
                        print_menu = 1;
                        break;
                    default:
                        break;
   81e10:	e014      	b.n	81e3c <menu_main+0xec>
                        act_menu = MENU_MATCH;
   81e12:	4b18      	ldr	r3, [pc, #96]	; (81e74 <menu_main+0x124>)
   81e14:	2201      	movs	r2, #1
   81e16:	701a      	strb	r2, [r3, #0]
                        print_menu = 1;
   81e18:	4b11      	ldr	r3, [pc, #68]	; (81e60 <menu_main+0x110>)
   81e1a:	2201      	movs	r2, #1
   81e1c:	701a      	strb	r2, [r3, #0]
                        break;
   81e1e:	e00d      	b.n	81e3c <menu_main+0xec>
                        act_menu = MENU_SENSORS;
   81e20:	4b14      	ldr	r3, [pc, #80]	; (81e74 <menu_main+0x124>)
   81e22:	2202      	movs	r2, #2
   81e24:	701a      	strb	r2, [r3, #0]
                        print_menu = 1;
   81e26:	4b0e      	ldr	r3, [pc, #56]	; (81e60 <menu_main+0x110>)
   81e28:	2201      	movs	r2, #1
   81e2a:	701a      	strb	r2, [r3, #0]
                        break;
   81e2c:	e006      	b.n	81e3c <menu_main+0xec>
                        act_menu = MENU_SETTINGS;
   81e2e:	4b11      	ldr	r3, [pc, #68]	; (81e74 <menu_main+0x124>)
   81e30:	2203      	movs	r2, #3
   81e32:	701a      	strb	r2, [r3, #0]
                        print_menu = 1;
   81e34:	4b0a      	ldr	r3, [pc, #40]	; (81e60 <menu_main+0x110>)
   81e36:	2201      	movs	r2, #1
   81e38:	701a      	strb	r2, [r3, #0]
                        break;
   81e3a:	bf00      	nop
                }
            }
            break;
   81e3c:	e00b      	b.n	81e56 <menu_main+0x106>
        case EVENT_BUTTON_RETURN_P:
            act_menu = MENU_SHUTDOWN;
   81e3e:	4b0d      	ldr	r3, [pc, #52]	; (81e74 <menu_main+0x124>)
   81e40:	2209      	movs	r2, #9
   81e42:	701a      	strb	r2, [r3, #0]
            print_menu = 1;
   81e44:	4b06      	ldr	r3, [pc, #24]	; (81e60 <menu_main+0x110>)
   81e46:	2201      	movs	r2, #1
   81e48:	701a      	strb	r2, [r3, #0]
            break;
   81e4a:	e004      	b.n	81e56 <menu_main+0x106>
        default:
            break;
   81e4c:	bf00      	nop
   81e4e:	e002      	b.n	81e56 <menu_main+0x106>
            break;
   81e50:	bf00      	nop
   81e52:	e000      	b.n	81e56 <menu_main+0x106>
            break;
   81e54:	bf00      	nop
    }
}
   81e56:	bf00      	nop
   81e58:	3708      	adds	r7, #8
   81e5a:	46bd      	mov	sp, r7
   81e5c:	bd80      	pop	{r7, pc}
   81e5e:	bf00      	nop
   81e60:	2007018c 	.word	0x2007018c
   81e64:	00082489 	.word	0x00082489
   81e68:	00083061 	.word	0x00083061
   81e6c:	20070190 	.word	0x20070190
   81e70:	000825c9 	.word	0x000825c9
   81e74:	20070de0 	.word	0x20070de0

00081e78 <menu_match>:

static void menu_match(event_t event1)
{
   81e78:	b480      	push	{r7}
   81e7a:	b083      	sub	sp, #12
   81e7c:	af00      	add	r7, sp, #0
   81e7e:	4603      	mov	r3, r0
   81e80:	71fb      	strb	r3, [r7, #7]
    
    
    if(event1 == EVENT_BUTTON_RETURN_P)
   81e82:	79fb      	ldrb	r3, [r7, #7]
   81e84:	2b10      	cmp	r3, #16
   81e86:	d105      	bne.n	81e94 <menu_match+0x1c>
    {
        act_menu = MENU_MAIN;
   81e88:	4b05      	ldr	r3, [pc, #20]	; (81ea0 <menu_match+0x28>)
   81e8a:	2200      	movs	r2, #0
   81e8c:	701a      	strb	r2, [r3, #0]
        print_menu = 1;
   81e8e:	4b05      	ldr	r3, [pc, #20]	; (81ea4 <menu_match+0x2c>)
   81e90:	2201      	movs	r2, #1
   81e92:	701a      	strb	r2, [r3, #0]
    }
}
   81e94:	bf00      	nop
   81e96:	370c      	adds	r7, #12
   81e98:	46bd      	mov	sp, r7
   81e9a:	bc80      	pop	{r7}
   81e9c:	4770      	bx	lr
   81e9e:	bf00      	nop
   81ea0:	20070de0 	.word	0x20070de0
   81ea4:	2007018c 	.word	0x2007018c

00081ea8 <menu_sensors>:

static void menu_sensors(event_t event1)
{
   81ea8:	b580      	push	{r7, lr}
   81eaa:	b082      	sub	sp, #8
   81eac:	af00      	add	r7, sp, #0
   81eae:	4603      	mov	r3, r0
   81eb0:	71fb      	strb	r3, [r7, #7]
    if (print_menu)
   81eb2:	4b40      	ldr	r3, [pc, #256]	; (81fb4 <menu_sensors+0x10c>)
   81eb4:	781b      	ldrb	r3, [r3, #0]
   81eb6:	2b00      	cmp	r3, #0
   81eb8:	d004      	beq.n	81ec4 <menu_sensors+0x1c>
    {
        print_menu = 0;
   81eba:	4b3e      	ldr	r3, [pc, #248]	; (81fb4 <menu_sensors+0x10c>)
   81ebc:	2200      	movs	r2, #0
   81ebe:	701a      	strb	r2, [r3, #0]
        print_menu_sensors();
   81ec0:	4b3d      	ldr	r3, [pc, #244]	; (81fb8 <menu_sensors+0x110>)
   81ec2:	4798      	blx	r3
    }
    
    switch(event1)
   81ec4:	79fb      	ldrb	r3, [r7, #7]
   81ec6:	3b01      	subs	r3, #1
   81ec8:	2b0f      	cmp	r3, #15
   81eca:	d869      	bhi.n	81fa0 <menu_sensors+0xf8>
   81ecc:	a201      	add	r2, pc, #4	; (adr r2, 81ed4 <menu_sensors+0x2c>)
   81ece:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   81ed2:	bf00      	nop
   81ed4:	00081f15 	.word	0x00081f15
   81ed8:	00081fa1 	.word	0x00081fa1
   81edc:	00081fa1 	.word	0x00081fa1
   81ee0:	00081fa1 	.word	0x00081fa1
   81ee4:	00081fa1 	.word	0x00081fa1
   81ee8:	00081fa1 	.word	0x00081fa1
   81eec:	00081f55 	.word	0x00081f55
   81ef0:	00081fa1 	.word	0x00081fa1
   81ef4:	00081fa1 	.word	0x00081fa1
   81ef8:	00081fa1 	.word	0x00081fa1
   81efc:	00081fa1 	.word	0x00081fa1
   81f00:	00081fa1 	.word	0x00081fa1
   81f04:	00081f35 	.word	0x00081f35
   81f08:	00081fa1 	.word	0x00081fa1
   81f0c:	00081fa1 	.word	0x00081fa1
   81f10:	00081f93 	.word	0x00081f93
    {
        case EVENT_BUTTON_UP_P:
            if (menu_info.sensors.act_cursor_line > menu_info.sensors.min_cursor_line)
   81f14:	4b29      	ldr	r3, [pc, #164]	; (81fbc <menu_sensors+0x114>)
   81f16:	791a      	ldrb	r2, [r3, #4]
   81f18:	4b28      	ldr	r3, [pc, #160]	; (81fbc <menu_sensors+0x114>)
   81f1a:	799b      	ldrb	r3, [r3, #6]
   81f1c:	429a      	cmp	r2, r3
   81f1e:	d941      	bls.n	81fa4 <menu_sensors+0xfc>
            {
                menu_info.sensors.act_cursor_line--;
   81f20:	4b26      	ldr	r3, [pc, #152]	; (81fbc <menu_sensors+0x114>)
   81f22:	791b      	ldrb	r3, [r3, #4]
   81f24:	3b01      	subs	r3, #1
   81f26:	b2da      	uxtb	r2, r3
   81f28:	4b24      	ldr	r3, [pc, #144]	; (81fbc <menu_sensors+0x114>)
   81f2a:	711a      	strb	r2, [r3, #4]
                print_cursor(&menu_info.sensors);
   81f2c:	4824      	ldr	r0, [pc, #144]	; (81fc0 <menu_sensors+0x118>)
   81f2e:	4b25      	ldr	r3, [pc, #148]	; (81fc4 <menu_sensors+0x11c>)
   81f30:	4798      	blx	r3
            }
            break;
   81f32:	e037      	b.n	81fa4 <menu_sensors+0xfc>
        case EVENT_BUTTON_DOWN_P:
            if (menu_info.sensors.act_cursor_line < menu_info.sensors.max_cursor_line)
   81f34:	4b21      	ldr	r3, [pc, #132]	; (81fbc <menu_sensors+0x114>)
   81f36:	791a      	ldrb	r2, [r3, #4]
   81f38:	4b20      	ldr	r3, [pc, #128]	; (81fbc <menu_sensors+0x114>)
   81f3a:	79db      	ldrb	r3, [r3, #7]
   81f3c:	429a      	cmp	r2, r3
   81f3e:	d233      	bcs.n	81fa8 <menu_sensors+0x100>
            {
                menu_info.sensors.act_cursor_line++;
   81f40:	4b1e      	ldr	r3, [pc, #120]	; (81fbc <menu_sensors+0x114>)
   81f42:	791b      	ldrb	r3, [r3, #4]
   81f44:	3301      	adds	r3, #1
   81f46:	b2da      	uxtb	r2, r3
   81f48:	4b1c      	ldr	r3, [pc, #112]	; (81fbc <menu_sensors+0x114>)
   81f4a:	711a      	strb	r2, [r3, #4]
                print_cursor(&menu_info.sensors);
   81f4c:	481c      	ldr	r0, [pc, #112]	; (81fc0 <menu_sensors+0x118>)
   81f4e:	4b1d      	ldr	r3, [pc, #116]	; (81fc4 <menu_sensors+0x11c>)
   81f50:	4798      	blx	r3
            }
            break;
   81f52:	e029      	b.n	81fa8 <menu_sensors+0x100>
        case EVENT_BUTTON_MID_P:
            switch (menu_info.sensors.act_cursor_line)
   81f54:	4b19      	ldr	r3, [pc, #100]	; (81fbc <menu_sensors+0x114>)
   81f56:	791b      	ldrb	r3, [r3, #4]
   81f58:	2b02      	cmp	r3, #2
   81f5a:	d00b      	beq.n	81f74 <menu_sensors+0xcc>
   81f5c:	2b03      	cmp	r3, #3
   81f5e:	d010      	beq.n	81f82 <menu_sensors+0xda>
   81f60:	2b01      	cmp	r3, #1
   81f62:	d000      	beq.n	81f66 <menu_sensors+0xbe>
                case 3:
                    act_menu = MENU_LINE;
                    print_menu = 1;
                    break;
                default:
                    break;
   81f64:	e014      	b.n	81f90 <menu_sensors+0xe8>
                    act_menu = MENU_BALL;
   81f66:	4b18      	ldr	r3, [pc, #96]	; (81fc8 <menu_sensors+0x120>)
   81f68:	2204      	movs	r2, #4
   81f6a:	701a      	strb	r2, [r3, #0]
                    print_menu = 1;
   81f6c:	4b11      	ldr	r3, [pc, #68]	; (81fb4 <menu_sensors+0x10c>)
   81f6e:	2201      	movs	r2, #1
   81f70:	701a      	strb	r2, [r3, #0]
                    break;
   81f72:	e00d      	b.n	81f90 <menu_sensors+0xe8>
                    act_menu = MENU_COMPASS;
   81f74:	4b14      	ldr	r3, [pc, #80]	; (81fc8 <menu_sensors+0x120>)
   81f76:	2207      	movs	r2, #7
   81f78:	701a      	strb	r2, [r3, #0]
                    print_menu = 1;
   81f7a:	4b0e      	ldr	r3, [pc, #56]	; (81fb4 <menu_sensors+0x10c>)
   81f7c:	2201      	movs	r2, #1
   81f7e:	701a      	strb	r2, [r3, #0]
                    break;
   81f80:	e006      	b.n	81f90 <menu_sensors+0xe8>
                    act_menu = MENU_LINE;
   81f82:	4b11      	ldr	r3, [pc, #68]	; (81fc8 <menu_sensors+0x120>)
   81f84:	2205      	movs	r2, #5
   81f86:	701a      	strb	r2, [r3, #0]
                    print_menu = 1;
   81f88:	4b0a      	ldr	r3, [pc, #40]	; (81fb4 <menu_sensors+0x10c>)
   81f8a:	2201      	movs	r2, #1
   81f8c:	701a      	strb	r2, [r3, #0]
                    break;
   81f8e:	bf00      	nop
            }
            break;
   81f90:	e00b      	b.n	81faa <menu_sensors+0x102>
        case EVENT_BUTTON_RETURN_P:
            act_menu = MENU_MAIN;
   81f92:	4b0d      	ldr	r3, [pc, #52]	; (81fc8 <menu_sensors+0x120>)
   81f94:	2200      	movs	r2, #0
   81f96:	701a      	strb	r2, [r3, #0]
            print_menu = 1;
   81f98:	4b06      	ldr	r3, [pc, #24]	; (81fb4 <menu_sensors+0x10c>)
   81f9a:	2201      	movs	r2, #1
   81f9c:	701a      	strb	r2, [r3, #0]
            break;
   81f9e:	e004      	b.n	81faa <menu_sensors+0x102>
        default:
            break;
   81fa0:	bf00      	nop
   81fa2:	e002      	b.n	81faa <menu_sensors+0x102>
            break;
   81fa4:	bf00      	nop
   81fa6:	e000      	b.n	81faa <menu_sensors+0x102>
            break;
   81fa8:	bf00      	nop
    }
}
   81faa:	bf00      	nop
   81fac:	3708      	adds	r7, #8
   81fae:	46bd      	mov	sp, r7
   81fb0:	bd80      	pop	{r7, pc}
   81fb2:	bf00      	nop
   81fb4:	2007018c 	.word	0x2007018c
   81fb8:	000824f9 	.word	0x000824f9
   81fbc:	20070190 	.word	0x20070190
   81fc0:	20070194 	.word	0x20070194
   81fc4:	000825c9 	.word	0x000825c9
   81fc8:	20070de0 	.word	0x20070de0

00081fcc <menu_ball>:

static void menu_ball(event_t event1)
{
   81fcc:	b580      	push	{r7, lr}
   81fce:	b082      	sub	sp, #8
   81fd0:	af00      	add	r7, sp, #0
   81fd2:	4603      	mov	r3, r0
   81fd4:	71fb      	strb	r3, [r7, #7]
    if(print_menu)
   81fd6:	4b0d      	ldr	r3, [pc, #52]	; (8200c <menu_ball+0x40>)
   81fd8:	781b      	ldrb	r3, [r3, #0]
   81fda:	2b00      	cmp	r3, #0
   81fdc:	d004      	beq.n	81fe8 <menu_ball+0x1c>
    {
        print_menu = 0;
   81fde:	4b0b      	ldr	r3, [pc, #44]	; (8200c <menu_ball+0x40>)
   81fe0:	2200      	movs	r2, #0
   81fe2:	701a      	strb	r2, [r3, #0]
        lcd_clear();
   81fe4:	4b0a      	ldr	r3, [pc, #40]	; (82010 <menu_ball+0x44>)
   81fe6:	4798      	blx	r3
    {
        lcd_print_s(2, 0, "Direction: no ball");
    }
    
    sprintf(sprintf_buf, "Having ball: %1d", rpi_rx.ibit.have_ball);*/
    lcd_print_s(3, 0, sprintf_buf);
   81fe8:	4a0a      	ldr	r2, [pc, #40]	; (82014 <menu_ball+0x48>)
   81fea:	2100      	movs	r1, #0
   81fec:	2003      	movs	r0, #3
   81fee:	4b0a      	ldr	r3, [pc, #40]	; (82018 <menu_ball+0x4c>)
   81ff0:	4798      	blx	r3
    
    if(event1 == EVENT_BUTTON_RETURN_P)
   81ff2:	79fb      	ldrb	r3, [r7, #7]
   81ff4:	2b10      	cmp	r3, #16
   81ff6:	d105      	bne.n	82004 <menu_ball+0x38>
    {
        act_menu = MENU_SENSORS;
   81ff8:	4b08      	ldr	r3, [pc, #32]	; (8201c <menu_ball+0x50>)
   81ffa:	2202      	movs	r2, #2
   81ffc:	701a      	strb	r2, [r3, #0]
        print_menu = 1;
   81ffe:	4b03      	ldr	r3, [pc, #12]	; (8200c <menu_ball+0x40>)
   82000:	2201      	movs	r2, #1
   82002:	701a      	strb	r2, [r3, #0]
    }
}
   82004:	bf00      	nop
   82006:	3708      	adds	r7, #8
   82008:	46bd      	mov	sp, r7
   8200a:	bd80      	pop	{r7, pc}
   8200c:	2007018c 	.word	0x2007018c
   82010:	00081705 	.word	0x00081705
   82014:	20070e70 	.word	0x20070e70
   82018:	00081725 	.word	0x00081725
   8201c:	20070de0 	.word	0x20070de0

00082020 <menu_compass>:

static void menu_compass(event_t event1)
{
   82020:	b590      	push	{r4, r7, lr}
   82022:	b083      	sub	sp, #12
   82024:	af00      	add	r7, sp, #0
   82026:	4603      	mov	r3, r0
   82028:	71fb      	strb	r3, [r7, #7]
    static uint16_t prev_direction = 0;
    
    if(print_menu)
   8202a:	4b24      	ldr	r3, [pc, #144]	; (820bc <menu_compass+0x9c>)
   8202c:	781b      	ldrb	r3, [r3, #0]
   8202e:	2b00      	cmp	r3, #0
   82030:	d004      	beq.n	8203c <menu_compass+0x1c>
    {
        print_menu = 0;
   82032:	4b22      	ldr	r3, [pc, #136]	; (820bc <menu_compass+0x9c>)
   82034:	2200      	movs	r2, #0
   82036:	701a      	strb	r2, [r3, #0]
        lcd_clear();
   82038:	4b21      	ldr	r3, [pc, #132]	; (820c0 <menu_compass+0xa0>)
   8203a:	4798      	blx	r3
    }
    
    update_compass();
   8203c:	4b21      	ldr	r3, [pc, #132]	; (820c4 <menu_compass+0xa4>)
   8203e:	4798      	blx	r3
    if(direction != prev_direction)
   82040:	4b21      	ldr	r3, [pc, #132]	; (820c8 <menu_compass+0xa8>)
   82042:	881a      	ldrh	r2, [r3, #0]
   82044:	4b21      	ldr	r3, [pc, #132]	; (820cc <menu_compass+0xac>)
   82046:	881b      	ldrh	r3, [r3, #0]
   82048:	429a      	cmp	r2, r3
   8204a:	d01e      	beq.n	8208a <menu_compass+0x6a>
    {
        prev_direction = direction;
   8204c:	4b1e      	ldr	r3, [pc, #120]	; (820c8 <menu_compass+0xa8>)
   8204e:	881a      	ldrh	r2, [r3, #0]
   82050:	4b1e      	ldr	r3, [pc, #120]	; (820cc <menu_compass+0xac>)
   82052:	801a      	strh	r2, [r3, #0]
        sprintf(sprintf_buf, "  Direction: %3.1f  ", (float)direction / 10.0);
   82054:	4b1c      	ldr	r3, [pc, #112]	; (820c8 <menu_compass+0xa8>)
   82056:	881a      	ldrh	r2, [r3, #0]
   82058:	4b1d      	ldr	r3, [pc, #116]	; (820d0 <menu_compass+0xb0>)
   8205a:	4610      	mov	r0, r2
   8205c:	4798      	blx	r3
   8205e:	4602      	mov	r2, r0
   82060:	4b1c      	ldr	r3, [pc, #112]	; (820d4 <menu_compass+0xb4>)
   82062:	4610      	mov	r0, r2
   82064:	4798      	blx	r3
   82066:	4c1c      	ldr	r4, [pc, #112]	; (820d8 <menu_compass+0xb8>)
   82068:	f04f 0200 	mov.w	r2, #0
   8206c:	4b1b      	ldr	r3, [pc, #108]	; (820dc <menu_compass+0xbc>)
   8206e:	47a0      	blx	r4
   82070:	4603      	mov	r3, r0
   82072:	460c      	mov	r4, r1
   82074:	461a      	mov	r2, r3
   82076:	4623      	mov	r3, r4
   82078:	4919      	ldr	r1, [pc, #100]	; (820e0 <menu_compass+0xc0>)
   8207a:	481a      	ldr	r0, [pc, #104]	; (820e4 <menu_compass+0xc4>)
   8207c:	4c1a      	ldr	r4, [pc, #104]	; (820e8 <menu_compass+0xc8>)
   8207e:	47a0      	blx	r4
        lcd_print_s(2, 0, sprintf_buf);
   82080:	4a18      	ldr	r2, [pc, #96]	; (820e4 <menu_compass+0xc4>)
   82082:	2100      	movs	r1, #0
   82084:	2002      	movs	r0, #2
   82086:	4b19      	ldr	r3, [pc, #100]	; (820ec <menu_compass+0xcc>)
   82088:	4798      	blx	r3
    }
    
    switch(event1)
   8208a:	79fb      	ldrb	r3, [r7, #7]
   8208c:	2b07      	cmp	r3, #7
   8208e:	d002      	beq.n	82096 <menu_compass+0x76>
   82090:	2b10      	cmp	r3, #16
   82092:	d007      	beq.n	820a4 <menu_compass+0x84>
        case EVENT_BUTTON_RETURN_P:
            act_menu = MENU_SENSORS;
            print_menu = 1;
            break;
        default:
            break;
   82094:	e00d      	b.n	820b2 <menu_compass+0x92>
            act_menu = MENU_COMPASS_CALIBRATION;
   82096:	4b16      	ldr	r3, [pc, #88]	; (820f0 <menu_compass+0xd0>)
   82098:	2208      	movs	r2, #8
   8209a:	701a      	strb	r2, [r3, #0]
            print_menu = 1;
   8209c:	4b07      	ldr	r3, [pc, #28]	; (820bc <menu_compass+0x9c>)
   8209e:	2201      	movs	r2, #1
   820a0:	701a      	strb	r2, [r3, #0]
            break;
   820a2:	e006      	b.n	820b2 <menu_compass+0x92>
            act_menu = MENU_SENSORS;
   820a4:	4b12      	ldr	r3, [pc, #72]	; (820f0 <menu_compass+0xd0>)
   820a6:	2202      	movs	r2, #2
   820a8:	701a      	strb	r2, [r3, #0]
            print_menu = 1;
   820aa:	4b04      	ldr	r3, [pc, #16]	; (820bc <menu_compass+0x9c>)
   820ac:	2201      	movs	r2, #1
   820ae:	701a      	strb	r2, [r3, #0]
            break;
   820b0:	bf00      	nop
    }
}
   820b2:	bf00      	nop
   820b4:	370c      	adds	r7, #12
   820b6:	46bd      	mov	sp, r7
   820b8:	bd90      	pop	{r4, r7, pc}
   820ba:	bf00      	nop
   820bc:	2007018c 	.word	0x2007018c
   820c0:	00081705 	.word	0x00081705
   820c4:	00081441 	.word	0x00081441
   820c8:	20070e40 	.word	0x20070e40
   820cc:	20070de4 	.word	0x20070de4
   820d0:	0008507d 	.word	0x0008507d
   820d4:	00084a45 	.word	0x00084a45
   820d8:	00084d41 	.word	0x00084d41
   820dc:	40240000 	.word	0x40240000
   820e0:	00089648 	.word	0x00089648
   820e4:	20070e70 	.word	0x20070e70
   820e8:	000855f1 	.word	0x000855f1
   820ec:	00081725 	.word	0x00081725
   820f0:	20070de0 	.word	0x20070de0

000820f4 <menu_compass_calibration>:

static void menu_compass_calibration(event_t event1)
{
   820f4:	b580      	push	{r7, lr}
   820f6:	b084      	sub	sp, #16
   820f8:	af00      	add	r7, sp, #0
   820fa:	4603      	mov	r3, r0
   820fc:	71fb      	strb	r3, [r7, #7]
    if(print_menu)
   820fe:	4b2e      	ldr	r3, [pc, #184]	; (821b8 <menu_compass_calibration+0xc4>)
   82100:	781b      	ldrb	r3, [r3, #0]
   82102:	2b00      	cmp	r3, #0
   82104:	d016      	beq.n	82134 <menu_compass_calibration+0x40>
    {
        print_menu = 0;
   82106:	4b2c      	ldr	r3, [pc, #176]	; (821b8 <menu_compass_calibration+0xc4>)
   82108:	2200      	movs	r2, #0
   8210a:	701a      	strb	r2, [r3, #0]
        lcd_clear();
   8210c:	4b2b      	ldr	r3, [pc, #172]	; (821bc <menu_compass_calibration+0xc8>)
   8210e:	4798      	blx	r3
        lcd_print_s(2, 1, "calibrate compass");
   82110:	4a2b      	ldr	r2, [pc, #172]	; (821c0 <menu_compass_calibration+0xcc>)
   82112:	2101      	movs	r1, #1
   82114:	2002      	movs	r0, #2
   82116:	4b2b      	ldr	r3, [pc, #172]	; (821c4 <menu_compass_calibration+0xd0>)
   82118:	4798      	blx	r3
        sprintf(sprintf_buf, "  Direction: %1d  ", compass_cal_step + 1);
   8211a:	4b2b      	ldr	r3, [pc, #172]	; (821c8 <menu_compass_calibration+0xd4>)
   8211c:	781b      	ldrb	r3, [r3, #0]
   8211e:	3301      	adds	r3, #1
   82120:	461a      	mov	r2, r3
   82122:	492a      	ldr	r1, [pc, #168]	; (821cc <menu_compass_calibration+0xd8>)
   82124:	482a      	ldr	r0, [pc, #168]	; (821d0 <menu_compass_calibration+0xdc>)
   82126:	4b2b      	ldr	r3, [pc, #172]	; (821d4 <menu_compass_calibration+0xe0>)
   82128:	4798      	blx	r3
        lcd_print_s(3, 1, sprintf_buf);
   8212a:	4a29      	ldr	r2, [pc, #164]	; (821d0 <menu_compass_calibration+0xdc>)
   8212c:	2101      	movs	r1, #1
   8212e:	2003      	movs	r0, #3
   82130:	4b24      	ldr	r3, [pc, #144]	; (821c4 <menu_compass_calibration+0xd0>)
   82132:	4798      	blx	r3
    }
    
    if(event1 == EVENT_BUTTON_MID_P)
   82134:	79fb      	ldrb	r3, [r7, #7]
   82136:	2b07      	cmp	r3, #7
   82138:	d139      	bne.n	821ae <menu_compass_calibration+0xba>
    {
        twi_packet_t *tx_packet = twi_get_tx_packet();
   8213a:	4b27      	ldr	r3, [pc, #156]	; (821d8 <menu_compass_calibration+0xe4>)
   8213c:	4798      	blx	r3
   8213e:	60f8      	str	r0, [r7, #12]
        
        tx_packet->chip = 0x60;
   82140:	68fb      	ldr	r3, [r7, #12]
   82142:	2260      	movs	r2, #96	; 0x60
   82144:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
        tx_packet->addr[0] = 0x0f;
   82148:	68fb      	ldr	r3, [r7, #12]
   8214a:	220f      	movs	r2, #15
   8214c:	701a      	strb	r2, [r3, #0]
        tx_packet->addr_length = 1;
   8214e:	68fb      	ldr	r3, [r7, #12]
   82150:	2201      	movs	r2, #1
   82152:	605a      	str	r2, [r3, #4]
        
        tx_packet->buffer[0] = 0xff;
   82154:	68fb      	ldr	r3, [r7, #12]
   82156:	22ff      	movs	r2, #255	; 0xff
   82158:	721a      	strb	r2, [r3, #8]
        tx_packet->length = 1;
   8215a:	68fb      	ldr	r3, [r7, #12]
   8215c:	2201      	movs	r2, #1
   8215e:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
        
        set_compass_is_busy();
   82162:	4b1e      	ldr	r3, [pc, #120]	; (821dc <menu_compass_calibration+0xe8>)
   82164:	4798      	blx	r3
        twi_pdc_master_write(TWI0, tx_packet);
   82166:	68f9      	ldr	r1, [r7, #12]
   82168:	481d      	ldr	r0, [pc, #116]	; (821e0 <menu_compass_calibration+0xec>)
   8216a:	4b1e      	ldr	r3, [pc, #120]	; (821e4 <menu_compass_calibration+0xf0>)
   8216c:	4798      	blx	r3
        while(compass_is_busy());
   8216e:	bf00      	nop
   82170:	4b1d      	ldr	r3, [pc, #116]	; (821e8 <menu_compass_calibration+0xf4>)
   82172:	4798      	blx	r3
   82174:	4603      	mov	r3, r0
   82176:	2b00      	cmp	r3, #0
   82178:	d1fa      	bne.n	82170 <menu_compass_calibration+0x7c>
        mdelay(500);
   8217a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   8217e:	4b1b      	ldr	r3, [pc, #108]	; (821ec <menu_compass_calibration+0xf8>)
   82180:	4798      	blx	r3
        
        compass_cal_step++;
   82182:	4b11      	ldr	r3, [pc, #68]	; (821c8 <menu_compass_calibration+0xd4>)
   82184:	781b      	ldrb	r3, [r3, #0]
   82186:	3301      	adds	r3, #1
   82188:	b2da      	uxtb	r2, r3
   8218a:	4b0f      	ldr	r3, [pc, #60]	; (821c8 <menu_compass_calibration+0xd4>)
   8218c:	701a      	strb	r2, [r3, #0]
        
        if(compass_cal_step == 4)
   8218e:	4b0e      	ldr	r3, [pc, #56]	; (821c8 <menu_compass_calibration+0xd4>)
   82190:	781b      	ldrb	r3, [r3, #0]
   82192:	2b04      	cmp	r3, #4
   82194:	d108      	bne.n	821a8 <menu_compass_calibration+0xb4>
        {
            compass_cal_step = 0;
   82196:	4b0c      	ldr	r3, [pc, #48]	; (821c8 <menu_compass_calibration+0xd4>)
   82198:	2200      	movs	r2, #0
   8219a:	701a      	strb	r2, [r3, #0]
            act_menu = MENU_COMPASS;
   8219c:	4b14      	ldr	r3, [pc, #80]	; (821f0 <menu_compass_calibration+0xfc>)
   8219e:	2207      	movs	r2, #7
   821a0:	701a      	strb	r2, [r3, #0]
            print_menu = 1;
   821a2:	4b05      	ldr	r3, [pc, #20]	; (821b8 <menu_compass_calibration+0xc4>)
   821a4:	2201      	movs	r2, #1
   821a6:	701a      	strb	r2, [r3, #0]
        }
        print_menu = 1;
   821a8:	4b03      	ldr	r3, [pc, #12]	; (821b8 <menu_compass_calibration+0xc4>)
   821aa:	2201      	movs	r2, #1
   821ac:	701a      	strb	r2, [r3, #0]
    }
}
   821ae:	bf00      	nop
   821b0:	3710      	adds	r7, #16
   821b2:	46bd      	mov	sp, r7
   821b4:	bd80      	pop	{r7, pc}
   821b6:	bf00      	nop
   821b8:	2007018c 	.word	0x2007018c
   821bc:	00081705 	.word	0x00081705
   821c0:	00089660 	.word	0x00089660
   821c4:	00081725 	.word	0x00081725
   821c8:	20070de1 	.word	0x20070de1
   821cc:	00089674 	.word	0x00089674
   821d0:	20070e70 	.word	0x20070e70
   821d4:	000855f1 	.word	0x000855f1
   821d8:	00080f95 	.word	0x00080f95
   821dc:	000814d1 	.word	0x000814d1
   821e0:	4008c000 	.word	0x4008c000
   821e4:	00081095 	.word	0x00081095
   821e8:	000814e9 	.word	0x000814e9
   821ec:	00082fed 	.word	0x00082fed
   821f0:	20070de0 	.word	0x20070de0

000821f4 <menu_line>:

static void menu_line(event_t event1)
{
   821f4:	b480      	push	{r7}
   821f6:	b083      	sub	sp, #12
   821f8:	af00      	add	r7, sp, #0
   821fa:	4603      	mov	r3, r0
   821fc:	71fb      	strb	r3, [r7, #7]
    
    
    if(event1 == EVENT_BUTTON_RETURN_P)
   821fe:	79fb      	ldrb	r3, [r7, #7]
   82200:	2b10      	cmp	r3, #16
   82202:	d105      	bne.n	82210 <menu_line+0x1c>
    {
        act_menu = MENU_SENSORS;
   82204:	4b05      	ldr	r3, [pc, #20]	; (8221c <menu_line+0x28>)
   82206:	2202      	movs	r2, #2
   82208:	701a      	strb	r2, [r3, #0]
        print_menu = 1;
   8220a:	4b05      	ldr	r3, [pc, #20]	; (82220 <menu_line+0x2c>)
   8220c:	2201      	movs	r2, #1
   8220e:	701a      	strb	r2, [r3, #0]
    }
}
   82210:	bf00      	nop
   82212:	370c      	adds	r7, #12
   82214:	46bd      	mov	sp, r7
   82216:	bc80      	pop	{r7}
   82218:	4770      	bx	lr
   8221a:	bf00      	nop
   8221c:	20070de0 	.word	0x20070de0
   82220:	2007018c 	.word	0x2007018c

00082224 <menu_line_calibration>:

static void menu_line_calibration(event_t event1)
{
   82224:	b480      	push	{r7}
   82226:	b083      	sub	sp, #12
   82228:	af00      	add	r7, sp, #0
   8222a:	4603      	mov	r3, r0
   8222c:	71fb      	strb	r3, [r7, #7]
    
    
    if(event1 == EVENT_BUTTON_RETURN_P)
   8222e:	79fb      	ldrb	r3, [r7, #7]
   82230:	2b10      	cmp	r3, #16
   82232:	d105      	bne.n	82240 <menu_line_calibration+0x1c>
    {
        act_menu = MENU_LINE;
   82234:	4b05      	ldr	r3, [pc, #20]	; (8224c <menu_line_calibration+0x28>)
   82236:	2205      	movs	r2, #5
   82238:	701a      	strb	r2, [r3, #0]
        print_menu = 1;
   8223a:	4b05      	ldr	r3, [pc, #20]	; (82250 <menu_line_calibration+0x2c>)
   8223c:	2201      	movs	r2, #1
   8223e:	701a      	strb	r2, [r3, #0]
    }
}
   82240:	bf00      	nop
   82242:	370c      	adds	r7, #12
   82244:	46bd      	mov	sp, r7
   82246:	bc80      	pop	{r7}
   82248:	4770      	bx	lr
   8224a:	bf00      	nop
   8224c:	20070de0 	.word	0x20070de0
   82250:	2007018c 	.word	0x2007018c

00082254 <menu_settings>:

static void menu_settings(event_t event1)
{
   82254:	b580      	push	{r7, lr}
   82256:	b082      	sub	sp, #8
   82258:	af00      	add	r7, sp, #0
   8225a:	4603      	mov	r3, r0
   8225c:	71fb      	strb	r3, [r7, #7]
    if (print_menu)
   8225e:	4b40      	ldr	r3, [pc, #256]	; (82360 <menu_settings+0x10c>)
   82260:	781b      	ldrb	r3, [r3, #0]
   82262:	2b00      	cmp	r3, #0
   82264:	d004      	beq.n	82270 <menu_settings+0x1c>
    {
        print_menu = 0;
   82266:	4b3e      	ldr	r3, [pc, #248]	; (82360 <menu_settings+0x10c>)
   82268:	2200      	movs	r2, #0
   8226a:	701a      	strb	r2, [r3, #0]
        print_menu_settings();
   8226c:	4b3d      	ldr	r3, [pc, #244]	; (82364 <menu_settings+0x110>)
   8226e:	4798      	blx	r3
    }
    
    switch(event1)
   82270:	79fb      	ldrb	r3, [r7, #7]
   82272:	3b01      	subs	r3, #1
   82274:	2b0f      	cmp	r3, #15
   82276:	d869      	bhi.n	8234c <menu_settings+0xf8>
   82278:	a201      	add	r2, pc, #4	; (adr r2, 82280 <menu_settings+0x2c>)
   8227a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8227e:	bf00      	nop
   82280:	000822c1 	.word	0x000822c1
   82284:	0008234d 	.word	0x0008234d
   82288:	0008234d 	.word	0x0008234d
   8228c:	0008234d 	.word	0x0008234d
   82290:	0008234d 	.word	0x0008234d
   82294:	0008234d 	.word	0x0008234d
   82298:	00082301 	.word	0x00082301
   8229c:	0008234d 	.word	0x0008234d
   822a0:	0008234d 	.word	0x0008234d
   822a4:	0008234d 	.word	0x0008234d
   822a8:	0008234d 	.word	0x0008234d
   822ac:	0008234d 	.word	0x0008234d
   822b0:	000822e1 	.word	0x000822e1
   822b4:	0008234d 	.word	0x0008234d
   822b8:	0008234d 	.word	0x0008234d
   822bc:	0008233f 	.word	0x0008233f
    {
        case EVENT_BUTTON_UP_P:
            if (menu_info.settings.act_cursor_line > menu_info.settings.min_cursor_line)
   822c0:	4b29      	ldr	r3, [pc, #164]	; (82368 <menu_settings+0x114>)
   822c2:	7a1a      	ldrb	r2, [r3, #8]
   822c4:	4b28      	ldr	r3, [pc, #160]	; (82368 <menu_settings+0x114>)
   822c6:	7a9b      	ldrb	r3, [r3, #10]
   822c8:	429a      	cmp	r2, r3
   822ca:	d941      	bls.n	82350 <menu_settings+0xfc>
            {
                menu_info.settings.act_cursor_line--;
   822cc:	4b26      	ldr	r3, [pc, #152]	; (82368 <menu_settings+0x114>)
   822ce:	7a1b      	ldrb	r3, [r3, #8]
   822d0:	3b01      	subs	r3, #1
   822d2:	b2da      	uxtb	r2, r3
   822d4:	4b24      	ldr	r3, [pc, #144]	; (82368 <menu_settings+0x114>)
   822d6:	721a      	strb	r2, [r3, #8]
                print_cursor(&menu_info.settings);
   822d8:	4824      	ldr	r0, [pc, #144]	; (8236c <menu_settings+0x118>)
   822da:	4b25      	ldr	r3, [pc, #148]	; (82370 <menu_settings+0x11c>)
   822dc:	4798      	blx	r3
            }
            break;
   822de:	e037      	b.n	82350 <menu_settings+0xfc>
        case EVENT_BUTTON_DOWN_P:
            if (menu_info.settings.act_cursor_line < menu_info.settings.max_cursor_line)
   822e0:	4b21      	ldr	r3, [pc, #132]	; (82368 <menu_settings+0x114>)
   822e2:	7a1a      	ldrb	r2, [r3, #8]
   822e4:	4b20      	ldr	r3, [pc, #128]	; (82368 <menu_settings+0x114>)
   822e6:	7adb      	ldrb	r3, [r3, #11]
   822e8:	429a      	cmp	r2, r3
   822ea:	d233      	bcs.n	82354 <menu_settings+0x100>
            {
                menu_info.settings.act_cursor_line++;
   822ec:	4b1e      	ldr	r3, [pc, #120]	; (82368 <menu_settings+0x114>)
   822ee:	7a1b      	ldrb	r3, [r3, #8]
   822f0:	3301      	adds	r3, #1
   822f2:	b2da      	uxtb	r2, r3
   822f4:	4b1c      	ldr	r3, [pc, #112]	; (82368 <menu_settings+0x114>)
   822f6:	721a      	strb	r2, [r3, #8]
                print_cursor(&menu_info.settings);
   822f8:	481c      	ldr	r0, [pc, #112]	; (8236c <menu_settings+0x118>)
   822fa:	4b1d      	ldr	r3, [pc, #116]	; (82370 <menu_settings+0x11c>)
   822fc:	4798      	blx	r3
            }
            break;
   822fe:	e029      	b.n	82354 <menu_settings+0x100>
        case EVENT_BUTTON_MID_P:
            switch (menu_info.settings.act_cursor_line)
   82300:	4b19      	ldr	r3, [pc, #100]	; (82368 <menu_settings+0x114>)
   82302:	7a1b      	ldrb	r3, [r3, #8]
   82304:	2b02      	cmp	r3, #2
   82306:	d00b      	beq.n	82320 <menu_settings+0xcc>
   82308:	2b03      	cmp	r3, #3
   8230a:	d010      	beq.n	8232e <menu_settings+0xda>
   8230c:	2b01      	cmp	r3, #1
   8230e:	d000      	beq.n	82312 <menu_settings+0xbe>
                case 3:
                    act_menu = MENU_LINE;
                    print_menu = 1;
                    break;
                default:
                    break;
   82310:	e014      	b.n	8233c <menu_settings+0xe8>
                    act_menu = MENU_BALL;
   82312:	4b18      	ldr	r3, [pc, #96]	; (82374 <menu_settings+0x120>)
   82314:	2204      	movs	r2, #4
   82316:	701a      	strb	r2, [r3, #0]
                    print_menu = 1;
   82318:	4b11      	ldr	r3, [pc, #68]	; (82360 <menu_settings+0x10c>)
   8231a:	2201      	movs	r2, #1
   8231c:	701a      	strb	r2, [r3, #0]
                    break;
   8231e:	e00d      	b.n	8233c <menu_settings+0xe8>
                    act_menu = MENU_COMPASS;
   82320:	4b14      	ldr	r3, [pc, #80]	; (82374 <menu_settings+0x120>)
   82322:	2207      	movs	r2, #7
   82324:	701a      	strb	r2, [r3, #0]
                    print_menu = 1;
   82326:	4b0e      	ldr	r3, [pc, #56]	; (82360 <menu_settings+0x10c>)
   82328:	2201      	movs	r2, #1
   8232a:	701a      	strb	r2, [r3, #0]
                    break;
   8232c:	e006      	b.n	8233c <menu_settings+0xe8>
                    act_menu = MENU_LINE;
   8232e:	4b11      	ldr	r3, [pc, #68]	; (82374 <menu_settings+0x120>)
   82330:	2205      	movs	r2, #5
   82332:	701a      	strb	r2, [r3, #0]
                    print_menu = 1;
   82334:	4b0a      	ldr	r3, [pc, #40]	; (82360 <menu_settings+0x10c>)
   82336:	2201      	movs	r2, #1
   82338:	701a      	strb	r2, [r3, #0]
                    break;
   8233a:	bf00      	nop
            }
            break;
   8233c:	e00b      	b.n	82356 <menu_settings+0x102>
        case EVENT_BUTTON_RETURN_P:
            act_menu = MENU_MAIN;
   8233e:	4b0d      	ldr	r3, [pc, #52]	; (82374 <menu_settings+0x120>)
   82340:	2200      	movs	r2, #0
   82342:	701a      	strb	r2, [r3, #0]
            print_menu = 1;
   82344:	4b06      	ldr	r3, [pc, #24]	; (82360 <menu_settings+0x10c>)
   82346:	2201      	movs	r2, #1
   82348:	701a      	strb	r2, [r3, #0]
            break;
   8234a:	e004      	b.n	82356 <menu_settings+0x102>
        default:
            break;
   8234c:	bf00      	nop
   8234e:	e002      	b.n	82356 <menu_settings+0x102>
            break;
   82350:	bf00      	nop
   82352:	e000      	b.n	82356 <menu_settings+0x102>
            break;
   82354:	bf00      	nop
    }
}
   82356:	bf00      	nop
   82358:	3708      	adds	r7, #8
   8235a:	46bd      	mov	sp, r7
   8235c:	bd80      	pop	{r7, pc}
   8235e:	bf00      	nop
   82360:	2007018c 	.word	0x2007018c
   82364:	00082561 	.word	0x00082561
   82368:	20070190 	.word	0x20070190
   8236c:	20070198 	.word	0x20070198
   82370:	000825c9 	.word	0x000825c9
   82374:	20070de0 	.word	0x20070de0

00082378 <menu_shutdown>:

static void menu_shutdown(event_t event1)
{
   82378:	b580      	push	{r7, lr}
   8237a:	b082      	sub	sp, #8
   8237c:	af00      	add	r7, sp, #0
   8237e:	4603      	mov	r3, r0
   82380:	71fb      	strb	r3, [r7, #7]
    if(shutdown_confirmed)
   82382:	4b35      	ldr	r3, [pc, #212]	; (82458 <menu_shutdown+0xe0>)
   82384:	781b      	ldrb	r3, [r3, #0]
   82386:	2b00      	cmp	r3, #0
   82388:	d043      	beq.n	82412 <menu_shutdown+0x9a>
    {
        lcd_clear();
   8238a:	4b34      	ldr	r3, [pc, #208]	; (8245c <menu_shutdown+0xe4>)
   8238c:	4798      	blx	r3
        lcd_print_s(2, 2, "shutting down...");
   8238e:	4a34      	ldr	r2, [pc, #208]	; (82460 <menu_shutdown+0xe8>)
   82390:	2102      	movs	r1, #2
   82392:	2002      	movs	r0, #2
   82394:	4b33      	ldr	r3, [pc, #204]	; (82464 <menu_shutdown+0xec>)
   82396:	4798      	blx	r3
        
        ioport_set_pin_level(LED_ONBOARD, 0);
   82398:	2100      	movs	r1, #0
   8239a:	206a      	movs	r0, #106	; 0x6a
   8239c:	4b32      	ldr	r3, [pc, #200]	; (82468 <menu_shutdown+0xf0>)
   8239e:	4798      	blx	r3
        ioport_set_pin_level(LED_BAT, 0);
   823a0:	2100      	movs	r1, #0
   823a2:	2066      	movs	r0, #102	; 0x66
   823a4:	4b30      	ldr	r3, [pc, #192]	; (82468 <menu_shutdown+0xf0>)
   823a6:	4798      	blx	r3
        ioport_set_pin_level(LED_M1, 0);
   823a8:	2100      	movs	r1, #0
   823aa:	2067      	movs	r0, #103	; 0x67
   823ac:	4b2e      	ldr	r3, [pc, #184]	; (82468 <menu_shutdown+0xf0>)
   823ae:	4798      	blx	r3
        ioport_set_pin_level(LED_M2, 0);
   823b0:	2100      	movs	r1, #0
   823b2:	2068      	movs	r0, #104	; 0x68
   823b4:	4b2c      	ldr	r3, [pc, #176]	; (82468 <menu_shutdown+0xf0>)
   823b6:	4798      	blx	r3
        ioport_set_pin_level(LED_M3, 0);
   823b8:	2100      	movs	r1, #0
   823ba:	2069      	movs	r0, #105	; 0x69
   823bc:	4b2a      	ldr	r3, [pc, #168]	; (82468 <menu_shutdown+0xf0>)
   823be:	4798      	blx	r3
        pwm_channel_disable(PWM, MREAR);
        
        pwm_channel_disable(PWM, ENC_CLK);
        
        sensor_parameters.ibit.sleep_mode = 1;*/
        update_comm();
   823c0:	4b2a      	ldr	r3, [pc, #168]	; (8246c <menu_shutdown+0xf4>)
   823c2:	4798      	blx	r3
        
        ioport_set_pin_level(RPI1, 0);
   823c4:	2100      	movs	r1, #0
   823c6:	2001      	movs	r0, #1
   823c8:	4b27      	ldr	r3, [pc, #156]	; (82468 <menu_shutdown+0xf0>)
   823ca:	4798      	blx	r3
        while (ioport_get_pin_level(RPI2) == 1);
   823cc:	bf00      	nop
   823ce:	2008      	movs	r0, #8
   823d0:	4b27      	ldr	r3, [pc, #156]	; (82470 <menu_shutdown+0xf8>)
   823d2:	4798      	blx	r3
   823d4:	4603      	mov	r3, r0
   823d6:	2b00      	cmp	r3, #0
   823d8:	d1f9      	bne.n	823ce <menu_shutdown+0x56>
        mdelay(7500);
   823da:	f641 504c 	movw	r0, #7500	; 0x1d4c
   823de:	4b25      	ldr	r3, [pc, #148]	; (82474 <menu_shutdown+0xfc>)
   823e0:	4798      	blx	r3
        
        lcd_set_backlight(LCD_LIGHT_OFF);
   823e2:	2000      	movs	r0, #0
   823e4:	4b24      	ldr	r3, [pc, #144]	; (82478 <menu_shutdown+0x100>)
   823e6:	4798      	blx	r3
        lcd_clear();    // required to turn backlight on/off
   823e8:	4b1c      	ldr	r3, [pc, #112]	; (8245c <menu_shutdown+0xe4>)
   823ea:	4798      	blx	r3
        mdelay(100);
   823ec:	2064      	movs	r0, #100	; 0x64
   823ee:	4b21      	ldr	r3, [pc, #132]	; (82474 <menu_shutdown+0xfc>)
   823f0:	4798      	blx	r3
        lcd_set_backlight(LCD_LIGHT_ON);
   823f2:	2008      	movs	r0, #8
   823f4:	4b20      	ldr	r3, [pc, #128]	; (82478 <menu_shutdown+0x100>)
   823f6:	4798      	blx	r3
        lcd_clear();    // required to turn backlight on/off
   823f8:	4b18      	ldr	r3, [pc, #96]	; (8245c <menu_shutdown+0xe4>)
   823fa:	4798      	blx	r3
        mdelay(100);
   823fc:	2064      	movs	r0, #100	; 0x64
   823fe:	4b1d      	ldr	r3, [pc, #116]	; (82474 <menu_shutdown+0xfc>)
   82400:	4798      	blx	r3
        lcd_set_backlight(LCD_LIGHT_OFF);
   82402:	2000      	movs	r0, #0
   82404:	4b1c      	ldr	r3, [pc, #112]	; (82478 <menu_shutdown+0x100>)
   82406:	4798      	blx	r3
        lcd_clear();    // required to turn backlight on/off
   82408:	4b14      	ldr	r3, [pc, #80]	; (8245c <menu_shutdown+0xe4>)
   8240a:	4798      	blx	r3
        
        while(1)
        {
            update_comm();
   8240c:	4b17      	ldr	r3, [pc, #92]	; (8246c <menu_shutdown+0xf4>)
   8240e:	4798      	blx	r3
   82410:	e7fc      	b.n	8240c <menu_shutdown+0x94>
            //check_bat();
        }
    }
    else
    {
        if(print_menu)
   82412:	4b1a      	ldr	r3, [pc, #104]	; (8247c <menu_shutdown+0x104>)
   82414:	781b      	ldrb	r3, [r3, #0]
   82416:	2b00      	cmp	r3, #0
   82418:	d009      	beq.n	8242e <menu_shutdown+0xb6>
        {
            print_menu = 0;
   8241a:	4b18      	ldr	r3, [pc, #96]	; (8247c <menu_shutdown+0x104>)
   8241c:	2200      	movs	r2, #0
   8241e:	701a      	strb	r2, [r3, #0]
            lcd_clear();
   82420:	4b0e      	ldr	r3, [pc, #56]	; (8245c <menu_shutdown+0xe4>)
   82422:	4798      	blx	r3
            lcd_print_s(2, 1, "confirm shutdown?");
   82424:	4a16      	ldr	r2, [pc, #88]	; (82480 <menu_shutdown+0x108>)
   82426:	2101      	movs	r1, #1
   82428:	2002      	movs	r0, #2
   8242a:	4b0e      	ldr	r3, [pc, #56]	; (82464 <menu_shutdown+0xec>)
   8242c:	4798      	blx	r3
        }
    }
    
    switch (event1)
   8242e:	79fb      	ldrb	r3, [r7, #7]
   82430:	2b07      	cmp	r3, #7
   82432:	d002      	beq.n	8243a <menu_shutdown+0xc2>
   82434:	2b10      	cmp	r3, #16
   82436:	d004      	beq.n	82442 <menu_shutdown+0xca>
        case EVENT_BUTTON_RETURN_P:
            act_menu = MENU_MAIN;
            print_menu = 1;
            break;
        default:
            break;
   82438:	e00a      	b.n	82450 <menu_shutdown+0xd8>
            shutdown_confirmed = 1;
   8243a:	4b07      	ldr	r3, [pc, #28]	; (82458 <menu_shutdown+0xe0>)
   8243c:	2201      	movs	r2, #1
   8243e:	701a      	strb	r2, [r3, #0]
            break;
   82440:	e006      	b.n	82450 <menu_shutdown+0xd8>
            act_menu = MENU_MAIN;
   82442:	4b10      	ldr	r3, [pc, #64]	; (82484 <menu_shutdown+0x10c>)
   82444:	2200      	movs	r2, #0
   82446:	701a      	strb	r2, [r3, #0]
            print_menu = 1;
   82448:	4b0c      	ldr	r3, [pc, #48]	; (8247c <menu_shutdown+0x104>)
   8244a:	2201      	movs	r2, #1
   8244c:	701a      	strb	r2, [r3, #0]
            break;
   8244e:	bf00      	nop
    }
}
   82450:	bf00      	nop
   82452:	3708      	adds	r7, #8
   82454:	46bd      	mov	sp, r7
   82456:	bd80      	pop	{r7, pc}
   82458:	20070de2 	.word	0x20070de2
   8245c:	00081705 	.word	0x00081705
   82460:	00089688 	.word	0x00089688
   82464:	00081725 	.word	0x00081725
   82468:	00081bc1 	.word	0x00081bc1
   8246c:	00083019 	.word	0x00083019
   82470:	00081c2b 	.word	0x00081c2b
   82474:	00082fed 	.word	0x00082fed
   82478:	000816e5 	.word	0x000816e5
   8247c:	2007018c 	.word	0x2007018c
   82480:	0008969c 	.word	0x0008969c
   82484:	20070de0 	.word	0x20070de0

00082488 <print_menu_main>:

static void print_menu_main(void)
{
   82488:	b590      	push	{r4, r7, lr}
   8248a:	b085      	sub	sp, #20
   8248c:	af00      	add	r7, sp, #0
    const char *text[4] = {"    noOS ONE", " Match", " Sensors", " Settings"};
   8248e:	4b14      	ldr	r3, [pc, #80]	; (824e0 <print_menu_main+0x58>)
   82490:	463c      	mov	r4, r7
   82492:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   82494:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
//    lcd_print_m(text);
    lcd_clear();
   82498:	4b12      	ldr	r3, [pc, #72]	; (824e4 <print_menu_main+0x5c>)
   8249a:	4798      	blx	r3
    lcd_print_s(1, 0, text[0]);
   8249c:	683b      	ldr	r3, [r7, #0]
   8249e:	461a      	mov	r2, r3
   824a0:	2100      	movs	r1, #0
   824a2:	2001      	movs	r0, #1
   824a4:	4b10      	ldr	r3, [pc, #64]	; (824e8 <print_menu_main+0x60>)
   824a6:	4798      	blx	r3
    lcd_print_s(2, 0, text[1]);
   824a8:	687b      	ldr	r3, [r7, #4]
   824aa:	461a      	mov	r2, r3
   824ac:	2100      	movs	r1, #0
   824ae:	2002      	movs	r0, #2
   824b0:	4b0d      	ldr	r3, [pc, #52]	; (824e8 <print_menu_main+0x60>)
   824b2:	4798      	blx	r3
    lcd_print_s(3, 0, text[2]);
   824b4:	68bb      	ldr	r3, [r7, #8]
   824b6:	461a      	mov	r2, r3
   824b8:	2100      	movs	r1, #0
   824ba:	2003      	movs	r0, #3
   824bc:	4b0a      	ldr	r3, [pc, #40]	; (824e8 <print_menu_main+0x60>)
   824be:	4798      	blx	r3
    lcd_print_s(4, 0, text[3]);
   824c0:	68fb      	ldr	r3, [r7, #12]
   824c2:	461a      	mov	r2, r3
   824c4:	2100      	movs	r1, #0
   824c6:	2004      	movs	r0, #4
   824c8:	4b07      	ldr	r3, [pc, #28]	; (824e8 <print_menu_main+0x60>)
   824ca:	4798      	blx	r3
    print_cursor(&menu_info.main);
   824cc:	4807      	ldr	r0, [pc, #28]	; (824ec <print_menu_main+0x64>)
   824ce:	4b08      	ldr	r3, [pc, #32]	; (824f0 <print_menu_main+0x68>)
   824d0:	4798      	blx	r3
    update_battery(1);
   824d2:	2001      	movs	r0, #1
   824d4:	4b07      	ldr	r3, [pc, #28]	; (824f4 <print_menu_main+0x6c>)
   824d6:	4798      	blx	r3
}
   824d8:	bf00      	nop
   824da:	3714      	adds	r7, #20
   824dc:	46bd      	mov	sp, r7
   824de:	bd90      	pop	{r4, r7, pc}
   824e0:	000896e0 	.word	0x000896e0
   824e4:	00081705 	.word	0x00081705
   824e8:	00081725 	.word	0x00081725
   824ec:	20070190 	.word	0x20070190
   824f0:	000825c9 	.word	0x000825c9
   824f4:	00083061 	.word	0x00083061

000824f8 <print_menu_sensors>:

static void print_menu_sensors(void)
{
   824f8:	b590      	push	{r4, r7, lr}
   824fa:	b085      	sub	sp, #20
   824fc:	af00      	add	r7, sp, #0
    const char *text[4] = {" Ball", " Compass", " Line", " "};
   824fe:	4b13      	ldr	r3, [pc, #76]	; (8254c <print_menu_sensors+0x54>)
   82500:	463c      	mov	r4, r7
   82502:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   82504:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
//    lcd_print_m(text);
    lcd_clear();
   82508:	4b11      	ldr	r3, [pc, #68]	; (82550 <print_menu_sensors+0x58>)
   8250a:	4798      	blx	r3
    lcd_print_s(1, 0, text[0]);
   8250c:	683b      	ldr	r3, [r7, #0]
   8250e:	461a      	mov	r2, r3
   82510:	2100      	movs	r1, #0
   82512:	2001      	movs	r0, #1
   82514:	4b0f      	ldr	r3, [pc, #60]	; (82554 <print_menu_sensors+0x5c>)
   82516:	4798      	blx	r3
    lcd_print_s(2, 0, text[1]);
   82518:	687b      	ldr	r3, [r7, #4]
   8251a:	461a      	mov	r2, r3
   8251c:	2100      	movs	r1, #0
   8251e:	2002      	movs	r0, #2
   82520:	4b0c      	ldr	r3, [pc, #48]	; (82554 <print_menu_sensors+0x5c>)
   82522:	4798      	blx	r3
    lcd_print_s(3, 0, text[2]);
   82524:	68bb      	ldr	r3, [r7, #8]
   82526:	461a      	mov	r2, r3
   82528:	2100      	movs	r1, #0
   8252a:	2003      	movs	r0, #3
   8252c:	4b09      	ldr	r3, [pc, #36]	; (82554 <print_menu_sensors+0x5c>)
   8252e:	4798      	blx	r3
    lcd_print_s(4, 0, text[3]);
   82530:	68fb      	ldr	r3, [r7, #12]
   82532:	461a      	mov	r2, r3
   82534:	2100      	movs	r1, #0
   82536:	2004      	movs	r0, #4
   82538:	4b06      	ldr	r3, [pc, #24]	; (82554 <print_menu_sensors+0x5c>)
   8253a:	4798      	blx	r3
    print_cursor(&menu_info.sensors);
   8253c:	4806      	ldr	r0, [pc, #24]	; (82558 <print_menu_sensors+0x60>)
   8253e:	4b07      	ldr	r3, [pc, #28]	; (8255c <print_menu_sensors+0x64>)
   82540:	4798      	blx	r3
}
   82542:	bf00      	nop
   82544:	3714      	adds	r7, #20
   82546:	46bd      	mov	sp, r7
   82548:	bd90      	pop	{r4, r7, pc}
   8254a:	bf00      	nop
   8254c:	00089710 	.word	0x00089710
   82550:	00081705 	.word	0x00081705
   82554:	00081725 	.word	0x00081725
   82558:	20070194 	.word	0x20070194
   8255c:	000825c9 	.word	0x000825c9

00082560 <print_menu_settings>:

static void print_menu_settings(void)
{
   82560:	b590      	push	{r4, r7, lr}
   82562:	b085      	sub	sp, #20
   82564:	af00      	add	r7, sp, #0
    const char *text[4] = {" ", " ", " ", " "};
   82566:	4b13      	ldr	r3, [pc, #76]	; (825b4 <print_menu_settings+0x54>)
   82568:	463c      	mov	r4, r7
   8256a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   8256c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
//    lcd_print_m(text);
    lcd_clear();
   82570:	4b11      	ldr	r3, [pc, #68]	; (825b8 <print_menu_settings+0x58>)
   82572:	4798      	blx	r3
    lcd_print_s(1, 0, text[0]);
   82574:	683b      	ldr	r3, [r7, #0]
   82576:	461a      	mov	r2, r3
   82578:	2100      	movs	r1, #0
   8257a:	2001      	movs	r0, #1
   8257c:	4b0f      	ldr	r3, [pc, #60]	; (825bc <print_menu_settings+0x5c>)
   8257e:	4798      	blx	r3
    lcd_print_s(2, 0, text[1]);
   82580:	687b      	ldr	r3, [r7, #4]
   82582:	461a      	mov	r2, r3
   82584:	2100      	movs	r1, #0
   82586:	2002      	movs	r0, #2
   82588:	4b0c      	ldr	r3, [pc, #48]	; (825bc <print_menu_settings+0x5c>)
   8258a:	4798      	blx	r3
    lcd_print_s(3, 0, text[2]);
   8258c:	68bb      	ldr	r3, [r7, #8]
   8258e:	461a      	mov	r2, r3
   82590:	2100      	movs	r1, #0
   82592:	2003      	movs	r0, #3
   82594:	4b09      	ldr	r3, [pc, #36]	; (825bc <print_menu_settings+0x5c>)
   82596:	4798      	blx	r3
    lcd_print_s(4, 0, text[3]);
   82598:	68fb      	ldr	r3, [r7, #12]
   8259a:	461a      	mov	r2, r3
   8259c:	2100      	movs	r1, #0
   8259e:	2004      	movs	r0, #4
   825a0:	4b06      	ldr	r3, [pc, #24]	; (825bc <print_menu_settings+0x5c>)
   825a2:	4798      	blx	r3
    print_cursor(&menu_info.settings);
   825a4:	4806      	ldr	r0, [pc, #24]	; (825c0 <print_menu_settings+0x60>)
   825a6:	4b07      	ldr	r3, [pc, #28]	; (825c4 <print_menu_settings+0x64>)
   825a8:	4798      	blx	r3
}
   825aa:	bf00      	nop
   825ac:	3714      	adds	r7, #20
   825ae:	46bd      	mov	sp, r7
   825b0:	bd90      	pop	{r4, r7, pc}
   825b2:	bf00      	nop
   825b4:	00089720 	.word	0x00089720
   825b8:	00081705 	.word	0x00081705
   825bc:	00081725 	.word	0x00081725
   825c0:	20070198 	.word	0x20070198
   825c4:	000825c9 	.word	0x000825c9

000825c8 <print_cursor>:

static void print_cursor(menu_info_t *info)
{
   825c8:	b580      	push	{r7, lr}
   825ca:	b082      	sub	sp, #8
   825cc:	af00      	add	r7, sp, #0
   825ce:	6078      	str	r0, [r7, #4]
    lcd_print_s(info->prev_cursor_line, 0, " ");
   825d0:	687b      	ldr	r3, [r7, #4]
   825d2:	785b      	ldrb	r3, [r3, #1]
   825d4:	4a09      	ldr	r2, [pc, #36]	; (825fc <print_cursor+0x34>)
   825d6:	2100      	movs	r1, #0
   825d8:	4618      	mov	r0, r3
   825da:	4b09      	ldr	r3, [pc, #36]	; (82600 <print_cursor+0x38>)
   825dc:	4798      	blx	r3
    lcd_print_s(info->act_cursor_line, 0, ">");
   825de:	687b      	ldr	r3, [r7, #4]
   825e0:	781b      	ldrb	r3, [r3, #0]
   825e2:	4a08      	ldr	r2, [pc, #32]	; (82604 <print_cursor+0x3c>)
   825e4:	2100      	movs	r1, #0
   825e6:	4618      	mov	r0, r3
   825e8:	4b05      	ldr	r3, [pc, #20]	; (82600 <print_cursor+0x38>)
   825ea:	4798      	blx	r3
    
    info->prev_cursor_line = info->act_cursor_line;
   825ec:	687b      	ldr	r3, [r7, #4]
   825ee:	781a      	ldrb	r2, [r3, #0]
   825f0:	687b      	ldr	r3, [r7, #4]
   825f2:	705a      	strb	r2, [r3, #1]
}
   825f4:	bf00      	nop
   825f6:	3708      	adds	r7, #8
   825f8:	46bd      	mov	sp, r7
   825fa:	bd80      	pop	{r7, pc}
   825fc:	0008970c 	.word	0x0008970c
   82600:	00081725 	.word	0x00081725
   82604:	00089730 	.word	0x00089730

00082608 <button_events>:

event_t button_events(void)
{
   82608:	b580      	push	{r7, lr}
   8260a:	b082      	sub	sp, #8
   8260c:	af00      	add	r7, sp, #0
    event_t nextEvent = EVENT_NO_EVENT;
   8260e:	2300      	movs	r3, #0
   82610:	71fb      	strb	r3, [r7, #7]

    if (getTicks() >= (ticks_button_update + 30))
   82612:	4b75      	ldr	r3, [pc, #468]	; (827e8 <button_events+0x1e0>)
   82614:	4798      	blx	r3
   82616:	4602      	mov	r2, r0
   82618:	4b74      	ldr	r3, [pc, #464]	; (827ec <button_events+0x1e4>)
   8261a:	681b      	ldr	r3, [r3, #0]
   8261c:	331e      	adds	r3, #30
   8261e:	429a      	cmp	r2, r3
   82620:	f0c0 80dd 	bcc.w	827de <button_events+0x1d6>
    {
        ticks_button_update = getTicks();
   82624:	4b70      	ldr	r3, [pc, #448]	; (827e8 <button_events+0x1e0>)
   82626:	4798      	blx	r3
   82628:	4602      	mov	r2, r0
   8262a:	4b70      	ldr	r3, [pc, #448]	; (827ec <button_events+0x1e4>)
   8262c:	601a      	str	r2, [r3, #0]
        
        pb_up_act = ioport_get_pin_level(PB_UP);
   8262e:	2060      	movs	r0, #96	; 0x60
   82630:	4b6f      	ldr	r3, [pc, #444]	; (827f0 <button_events+0x1e8>)
   82632:	4798      	blx	r3
   82634:	4603      	mov	r3, r0
   82636:	461a      	mov	r2, r3
   82638:	4b6e      	ldr	r3, [pc, #440]	; (827f4 <button_events+0x1ec>)
   8263a:	701a      	strb	r2, [r3, #0]
        pb_left_act = ioport_get_pin_level(PB_LEFT);
   8263c:	2061      	movs	r0, #97	; 0x61
   8263e:	4b6c      	ldr	r3, [pc, #432]	; (827f0 <button_events+0x1e8>)
   82640:	4798      	blx	r3
   82642:	4603      	mov	r3, r0
   82644:	461a      	mov	r2, r3
   82646:	4b6c      	ldr	r3, [pc, #432]	; (827f8 <button_events+0x1f0>)
   82648:	701a      	strb	r2, [r3, #0]
        pb_mid_act = ioport_get_pin_level(PB_MID);
   8264a:	2062      	movs	r0, #98	; 0x62
   8264c:	4b68      	ldr	r3, [pc, #416]	; (827f0 <button_events+0x1e8>)
   8264e:	4798      	blx	r3
   82650:	4603      	mov	r3, r0
   82652:	461a      	mov	r2, r3
   82654:	4b69      	ldr	r3, [pc, #420]	; (827fc <button_events+0x1f4>)
   82656:	701a      	strb	r2, [r3, #0]
        pb_right_act = ioport_get_pin_level(PB_RIGHT);
   82658:	2063      	movs	r0, #99	; 0x63
   8265a:	4b65      	ldr	r3, [pc, #404]	; (827f0 <button_events+0x1e8>)
   8265c:	4798      	blx	r3
   8265e:	4603      	mov	r3, r0
   82660:	461a      	mov	r2, r3
   82662:	4b67      	ldr	r3, [pc, #412]	; (82800 <button_events+0x1f8>)
   82664:	701a      	strb	r2, [r3, #0]
        pb_down_act = ioport_get_pin_level(PB_DOWN);
   82666:	2064      	movs	r0, #100	; 0x64
   82668:	4b61      	ldr	r3, [pc, #388]	; (827f0 <button_events+0x1e8>)
   8266a:	4798      	blx	r3
   8266c:	4603      	mov	r3, r0
   8266e:	461a      	mov	r2, r3
   82670:	4b64      	ldr	r3, [pc, #400]	; (82804 <button_events+0x1fc>)
   82672:	701a      	strb	r2, [r3, #0]
        pb_return_act = ioport_get_pin_level(PB_RETURN);
   82674:	2065      	movs	r0, #101	; 0x65
   82676:	4b5e      	ldr	r3, [pc, #376]	; (827f0 <button_events+0x1e8>)
   82678:	4798      	blx	r3
   8267a:	4603      	mov	r3, r0
   8267c:	461a      	mov	r2, r3
   8267e:	4b62      	ldr	r3, [pc, #392]	; (82808 <button_events+0x200>)
   82680:	701a      	strb	r2, [r3, #0]
        
        if (pb_up_act != pb_up_prev && pb_up_act == 0)
   82682:	4b5c      	ldr	r3, [pc, #368]	; (827f4 <button_events+0x1ec>)
   82684:	781a      	ldrb	r2, [r3, #0]
   82686:	4b61      	ldr	r3, [pc, #388]	; (8280c <button_events+0x204>)
   82688:	781b      	ldrb	r3, [r3, #0]
   8268a:	429a      	cmp	r2, r3
   8268c:	d006      	beq.n	8269c <button_events+0x94>
   8268e:	4b59      	ldr	r3, [pc, #356]	; (827f4 <button_events+0x1ec>)
   82690:	781b      	ldrb	r3, [r3, #0]
   82692:	2b00      	cmp	r3, #0
   82694:	d102      	bne.n	8269c <button_events+0x94>
        {
            nextEvent = EVENT_BUTTON_UP_P;
   82696:	2301      	movs	r3, #1
   82698:	71fb      	strb	r3, [r7, #7]
   8269a:	e00b      	b.n	826b4 <button_events+0xac>
        }
        else if (pb_up_act != pb_up_prev && pb_up_act == 1)
   8269c:	4b55      	ldr	r3, [pc, #340]	; (827f4 <button_events+0x1ec>)
   8269e:	781a      	ldrb	r2, [r3, #0]
   826a0:	4b5a      	ldr	r3, [pc, #360]	; (8280c <button_events+0x204>)
   826a2:	781b      	ldrb	r3, [r3, #0]
   826a4:	429a      	cmp	r2, r3
   826a6:	d005      	beq.n	826b4 <button_events+0xac>
   826a8:	4b52      	ldr	r3, [pc, #328]	; (827f4 <button_events+0x1ec>)
   826aa:	781b      	ldrb	r3, [r3, #0]
   826ac:	2b01      	cmp	r3, #1
   826ae:	d101      	bne.n	826b4 <button_events+0xac>
        {
            nextEvent = EVENT_BUTTON_UP_R;
   826b0:	2303      	movs	r3, #3
   826b2:	71fb      	strb	r3, [r7, #7]
        /*else if (pb_up_act == pb_up_prev && pb_up_act == 0)
        {
            nextEvent = EVENT_BUTTON_UP_H;
        }*/
        
        if (pb_left_act != pb_left_prev && pb_left_act == 0)
   826b4:	4b50      	ldr	r3, [pc, #320]	; (827f8 <button_events+0x1f0>)
   826b6:	781a      	ldrb	r2, [r3, #0]
   826b8:	4b55      	ldr	r3, [pc, #340]	; (82810 <button_events+0x208>)
   826ba:	781b      	ldrb	r3, [r3, #0]
   826bc:	429a      	cmp	r2, r3
   826be:	d006      	beq.n	826ce <button_events+0xc6>
   826c0:	4b4d      	ldr	r3, [pc, #308]	; (827f8 <button_events+0x1f0>)
   826c2:	781b      	ldrb	r3, [r3, #0]
   826c4:	2b00      	cmp	r3, #0
   826c6:	d102      	bne.n	826ce <button_events+0xc6>
        {
            nextEvent = EVENT_BUTTON_LEFT_P;
   826c8:	2304      	movs	r3, #4
   826ca:	71fb      	strb	r3, [r7, #7]
   826cc:	e00b      	b.n	826e6 <button_events+0xde>
        }
        else if (pb_left_act != pb_left_prev && pb_left_act == 1)
   826ce:	4b4a      	ldr	r3, [pc, #296]	; (827f8 <button_events+0x1f0>)
   826d0:	781a      	ldrb	r2, [r3, #0]
   826d2:	4b4f      	ldr	r3, [pc, #316]	; (82810 <button_events+0x208>)
   826d4:	781b      	ldrb	r3, [r3, #0]
   826d6:	429a      	cmp	r2, r3
   826d8:	d005      	beq.n	826e6 <button_events+0xde>
   826da:	4b47      	ldr	r3, [pc, #284]	; (827f8 <button_events+0x1f0>)
   826dc:	781b      	ldrb	r3, [r3, #0]
   826de:	2b01      	cmp	r3, #1
   826e0:	d101      	bne.n	826e6 <button_events+0xde>
        {
            nextEvent = EVENT_BUTTON_LEFT_R;
   826e2:	2306      	movs	r3, #6
   826e4:	71fb      	strb	r3, [r7, #7]
        /*else if (pb_left_act == pb_left_prev && pb_left_act == 0)
        {
            nextEvent = EVENT_BUTTON_LEFT_H;
        }*/
        
        if (pb_mid_act != pb_mid_prev && pb_mid_act == 0)
   826e6:	4b45      	ldr	r3, [pc, #276]	; (827fc <button_events+0x1f4>)
   826e8:	781a      	ldrb	r2, [r3, #0]
   826ea:	4b4a      	ldr	r3, [pc, #296]	; (82814 <button_events+0x20c>)
   826ec:	781b      	ldrb	r3, [r3, #0]
   826ee:	429a      	cmp	r2, r3
   826f0:	d006      	beq.n	82700 <button_events+0xf8>
   826f2:	4b42      	ldr	r3, [pc, #264]	; (827fc <button_events+0x1f4>)
   826f4:	781b      	ldrb	r3, [r3, #0]
   826f6:	2b00      	cmp	r3, #0
   826f8:	d102      	bne.n	82700 <button_events+0xf8>
        {
            nextEvent = EVENT_BUTTON_MID_P;
   826fa:	2307      	movs	r3, #7
   826fc:	71fb      	strb	r3, [r7, #7]
   826fe:	e00b      	b.n	82718 <button_events+0x110>
        }
        else if (pb_mid_act != pb_mid_prev && pb_mid_act == 1)
   82700:	4b3e      	ldr	r3, [pc, #248]	; (827fc <button_events+0x1f4>)
   82702:	781a      	ldrb	r2, [r3, #0]
   82704:	4b43      	ldr	r3, [pc, #268]	; (82814 <button_events+0x20c>)
   82706:	781b      	ldrb	r3, [r3, #0]
   82708:	429a      	cmp	r2, r3
   8270a:	d005      	beq.n	82718 <button_events+0x110>
   8270c:	4b3b      	ldr	r3, [pc, #236]	; (827fc <button_events+0x1f4>)
   8270e:	781b      	ldrb	r3, [r3, #0]
   82710:	2b01      	cmp	r3, #1
   82712:	d101      	bne.n	82718 <button_events+0x110>
        {
            nextEvent = EVENT_BUTTON_MID_R;
   82714:	2309      	movs	r3, #9
   82716:	71fb      	strb	r3, [r7, #7]
        /*else if (pb_mid_act == pb_mid_prev && pb_mid_act == 0)
        {
            nextEvent = EVENT_BUTTON_MID_H;
        }*/
        
        if (pb_right_act != pb_right_prev && pb_right_act == 0)
   82718:	4b39      	ldr	r3, [pc, #228]	; (82800 <button_events+0x1f8>)
   8271a:	781a      	ldrb	r2, [r3, #0]
   8271c:	4b3e      	ldr	r3, [pc, #248]	; (82818 <button_events+0x210>)
   8271e:	781b      	ldrb	r3, [r3, #0]
   82720:	429a      	cmp	r2, r3
   82722:	d006      	beq.n	82732 <button_events+0x12a>
   82724:	4b36      	ldr	r3, [pc, #216]	; (82800 <button_events+0x1f8>)
   82726:	781b      	ldrb	r3, [r3, #0]
   82728:	2b00      	cmp	r3, #0
   8272a:	d102      	bne.n	82732 <button_events+0x12a>
        {
            nextEvent = EVENT_BUTTON_RIGHT_P;
   8272c:	230a      	movs	r3, #10
   8272e:	71fb      	strb	r3, [r7, #7]
   82730:	e00b      	b.n	8274a <button_events+0x142>
        }
        else if (pb_right_act != pb_right_prev && pb_right_act == 1)
   82732:	4b33      	ldr	r3, [pc, #204]	; (82800 <button_events+0x1f8>)
   82734:	781a      	ldrb	r2, [r3, #0]
   82736:	4b38      	ldr	r3, [pc, #224]	; (82818 <button_events+0x210>)
   82738:	781b      	ldrb	r3, [r3, #0]
   8273a:	429a      	cmp	r2, r3
   8273c:	d005      	beq.n	8274a <button_events+0x142>
   8273e:	4b30      	ldr	r3, [pc, #192]	; (82800 <button_events+0x1f8>)
   82740:	781b      	ldrb	r3, [r3, #0]
   82742:	2b01      	cmp	r3, #1
   82744:	d101      	bne.n	8274a <button_events+0x142>
        {
            nextEvent = EVENT_BUTTON_RIGHT_R;
   82746:	230c      	movs	r3, #12
   82748:	71fb      	strb	r3, [r7, #7]
        /*else if (pb_right_act == pb_right_prev && pb_right_act == 0)
        {
            nextEvent = EVENT_BUTTON_RIGHT_H;
        }*/
        
        if (pb_down_act != pb_down_prev && pb_down_act == 0)
   8274a:	4b2e      	ldr	r3, [pc, #184]	; (82804 <button_events+0x1fc>)
   8274c:	781a      	ldrb	r2, [r3, #0]
   8274e:	4b33      	ldr	r3, [pc, #204]	; (8281c <button_events+0x214>)
   82750:	781b      	ldrb	r3, [r3, #0]
   82752:	429a      	cmp	r2, r3
   82754:	d006      	beq.n	82764 <button_events+0x15c>
   82756:	4b2b      	ldr	r3, [pc, #172]	; (82804 <button_events+0x1fc>)
   82758:	781b      	ldrb	r3, [r3, #0]
   8275a:	2b00      	cmp	r3, #0
   8275c:	d102      	bne.n	82764 <button_events+0x15c>
        {
            nextEvent = EVENT_BUTTON_DOWN_P;
   8275e:	230d      	movs	r3, #13
   82760:	71fb      	strb	r3, [r7, #7]
   82762:	e00b      	b.n	8277c <button_events+0x174>
        }
        else if (pb_down_act != pb_down_prev && pb_down_act == 1)
   82764:	4b27      	ldr	r3, [pc, #156]	; (82804 <button_events+0x1fc>)
   82766:	781a      	ldrb	r2, [r3, #0]
   82768:	4b2c      	ldr	r3, [pc, #176]	; (8281c <button_events+0x214>)
   8276a:	781b      	ldrb	r3, [r3, #0]
   8276c:	429a      	cmp	r2, r3
   8276e:	d005      	beq.n	8277c <button_events+0x174>
   82770:	4b24      	ldr	r3, [pc, #144]	; (82804 <button_events+0x1fc>)
   82772:	781b      	ldrb	r3, [r3, #0]
   82774:	2b01      	cmp	r3, #1
   82776:	d101      	bne.n	8277c <button_events+0x174>
        {
            nextEvent = EVENT_BUTTON_DOWN_R;
   82778:	230f      	movs	r3, #15
   8277a:	71fb      	strb	r3, [r7, #7]
        /*else if (pb_down_act == pb_down_prev && pb_down_act == 0)
        {
            nextEvent = EVENT_BUTTON_DOWN_H;
        }*/
        
        if (pb_return_act != pb_return_prev && pb_return_act == 0)
   8277c:	4b22      	ldr	r3, [pc, #136]	; (82808 <button_events+0x200>)
   8277e:	781a      	ldrb	r2, [r3, #0]
   82780:	4b27      	ldr	r3, [pc, #156]	; (82820 <button_events+0x218>)
   82782:	781b      	ldrb	r3, [r3, #0]
   82784:	429a      	cmp	r2, r3
   82786:	d006      	beq.n	82796 <button_events+0x18e>
   82788:	4b1f      	ldr	r3, [pc, #124]	; (82808 <button_events+0x200>)
   8278a:	781b      	ldrb	r3, [r3, #0]
   8278c:	2b00      	cmp	r3, #0
   8278e:	d102      	bne.n	82796 <button_events+0x18e>
        {
            nextEvent = EVENT_BUTTON_RETURN_P;
   82790:	2310      	movs	r3, #16
   82792:	71fb      	strb	r3, [r7, #7]
   82794:	e00b      	b.n	827ae <button_events+0x1a6>
        }
        else if (pb_return_act != pb_return_prev && pb_return_act == 1)
   82796:	4b1c      	ldr	r3, [pc, #112]	; (82808 <button_events+0x200>)
   82798:	781a      	ldrb	r2, [r3, #0]
   8279a:	4b21      	ldr	r3, [pc, #132]	; (82820 <button_events+0x218>)
   8279c:	781b      	ldrb	r3, [r3, #0]
   8279e:	429a      	cmp	r2, r3
   827a0:	d005      	beq.n	827ae <button_events+0x1a6>
   827a2:	4b19      	ldr	r3, [pc, #100]	; (82808 <button_events+0x200>)
   827a4:	781b      	ldrb	r3, [r3, #0]
   827a6:	2b01      	cmp	r3, #1
   827a8:	d101      	bne.n	827ae <button_events+0x1a6>
        {
            nextEvent = EVENT_BUTTON_RETURN_R;
   827aa:	2312      	movs	r3, #18
   827ac:	71fb      	strb	r3, [r7, #7]
        /*else if (pb_return_act == pb_up_prev && pb_return_act == 0)
        {
            nextEvent = EVENT_BUTTON_RETURN_H;
        }*/
        
        pb_up_prev = pb_up_act;
   827ae:	4b11      	ldr	r3, [pc, #68]	; (827f4 <button_events+0x1ec>)
   827b0:	781a      	ldrb	r2, [r3, #0]
   827b2:	4b16      	ldr	r3, [pc, #88]	; (8280c <button_events+0x204>)
   827b4:	701a      	strb	r2, [r3, #0]
        pb_left_prev = pb_left_act;
   827b6:	4b10      	ldr	r3, [pc, #64]	; (827f8 <button_events+0x1f0>)
   827b8:	781a      	ldrb	r2, [r3, #0]
   827ba:	4b15      	ldr	r3, [pc, #84]	; (82810 <button_events+0x208>)
   827bc:	701a      	strb	r2, [r3, #0]
        pb_mid_prev = pb_mid_act;
   827be:	4b0f      	ldr	r3, [pc, #60]	; (827fc <button_events+0x1f4>)
   827c0:	781a      	ldrb	r2, [r3, #0]
   827c2:	4b14      	ldr	r3, [pc, #80]	; (82814 <button_events+0x20c>)
   827c4:	701a      	strb	r2, [r3, #0]
        pb_right_prev = pb_right_act;
   827c6:	4b0e      	ldr	r3, [pc, #56]	; (82800 <button_events+0x1f8>)
   827c8:	781a      	ldrb	r2, [r3, #0]
   827ca:	4b13      	ldr	r3, [pc, #76]	; (82818 <button_events+0x210>)
   827cc:	701a      	strb	r2, [r3, #0]
        pb_down_prev = pb_down_act;
   827ce:	4b0d      	ldr	r3, [pc, #52]	; (82804 <button_events+0x1fc>)
   827d0:	781a      	ldrb	r2, [r3, #0]
   827d2:	4b12      	ldr	r3, [pc, #72]	; (8281c <button_events+0x214>)
   827d4:	701a      	strb	r2, [r3, #0]
        pb_return_prev = pb_return_act;
   827d6:	4b0c      	ldr	r3, [pc, #48]	; (82808 <button_events+0x200>)
   827d8:	781a      	ldrb	r2, [r3, #0]
   827da:	4b11      	ldr	r3, [pc, #68]	; (82820 <button_events+0x218>)
   827dc:	701a      	strb	r2, [r3, #0]
    }

    return nextEvent;
   827de:	79fb      	ldrb	r3, [r7, #7]
}
   827e0:	4618      	mov	r0, r3
   827e2:	3708      	adds	r7, #8
   827e4:	46bd      	mov	sp, r7
   827e6:	bd80      	pop	{r7, pc}
   827e8:	00082fd9 	.word	0x00082fd9
   827ec:	20070e44 	.word	0x20070e44
   827f0:	00081c2b 	.word	0x00081c2b
   827f4:	20070e6d 	.word	0x20070e6d
   827f8:	20070e54 	.word	0x20070e54
   827fc:	20070e6c 	.word	0x20070e6c
   82800:	20070e6e 	.word	0x20070e6e
   82804:	20070e50 	.word	0x20070e50
   82808:	20070e4c 	.word	0x20070e4c
   8280c:	20070e51 	.word	0x20070e51
   82810:	20070e4f 	.word	0x20070e4f
   82814:	20070e4d 	.word	0x20070e4d
   82818:	20070e52 	.word	0x20070e52
   8281c:	20070e4e 	.word	0x20070e4e
   82820:	20070e53 	.word	0x20070e53

00082824 <NVIC_EnableIRQ>:
{
   82824:	b480      	push	{r7}
   82826:	b083      	sub	sp, #12
   82828:	af00      	add	r7, sp, #0
   8282a:	4603      	mov	r3, r0
   8282c:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8282e:	4908      	ldr	r1, [pc, #32]	; (82850 <NVIC_EnableIRQ+0x2c>)
   82830:	f997 3007 	ldrsb.w	r3, [r7, #7]
   82834:	095b      	lsrs	r3, r3, #5
   82836:	79fa      	ldrb	r2, [r7, #7]
   82838:	f002 021f 	and.w	r2, r2, #31
   8283c:	2001      	movs	r0, #1
   8283e:	fa00 f202 	lsl.w	r2, r0, r2
   82842:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
   82846:	bf00      	nop
   82848:	370c      	adds	r7, #12
   8284a:	46bd      	mov	sp, r7
   8284c:	bc80      	pop	{r7}
   8284e:	4770      	bx	lr
   82850:	e000e100 	.word	0xe000e100

00082854 <NVIC_DisableIRQ>:
    The function disables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
   82854:	b480      	push	{r7}
   82856:	b083      	sub	sp, #12
   82858:	af00      	add	r7, sp, #0
   8285a:	4603      	mov	r3, r0
   8285c:	71fb      	strb	r3, [r7, #7]
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   8285e:	4909      	ldr	r1, [pc, #36]	; (82884 <NVIC_DisableIRQ+0x30>)
   82860:	f997 3007 	ldrsb.w	r3, [r7, #7]
   82864:	095b      	lsrs	r3, r3, #5
   82866:	79fa      	ldrb	r2, [r7, #7]
   82868:	f002 021f 	and.w	r2, r2, #31
   8286c:	2001      	movs	r0, #1
   8286e:	fa00 f202 	lsl.w	r2, r0, r2
   82872:	3320      	adds	r3, #32
   82874:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
   82878:	bf00      	nop
   8287a:	370c      	adds	r7, #12
   8287c:	46bd      	mov	sp, r7
   8287e:	bc80      	pop	{r7}
   82880:	4770      	bx	lr
   82882:	bf00      	nop
   82884:	e000e100 	.word	0xe000e100

00082888 <NVIC_ClearPendingIRQ>:
    The function clears the pending bit of an external interrupt.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
   82888:	b480      	push	{r7}
   8288a:	b083      	sub	sp, #12
   8288c:	af00      	add	r7, sp, #0
   8288e:	4603      	mov	r3, r0
   82890:	71fb      	strb	r3, [r7, #7]
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   82892:	4909      	ldr	r1, [pc, #36]	; (828b8 <NVIC_ClearPendingIRQ+0x30>)
   82894:	f997 3007 	ldrsb.w	r3, [r7, #7]
   82898:	095b      	lsrs	r3, r3, #5
   8289a:	79fa      	ldrb	r2, [r7, #7]
   8289c:	f002 021f 	and.w	r2, r2, #31
   828a0:	2001      	movs	r0, #1
   828a2:	fa00 f202 	lsl.w	r2, r0, r2
   828a6:	3360      	adds	r3, #96	; 0x60
   828a8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
   828ac:	bf00      	nop
   828ae:	370c      	adds	r7, #12
   828b0:	46bd      	mov	sp, r7
   828b2:	bc80      	pop	{r7}
   828b4:	4770      	bx	lr
   828b6:	bf00      	nop
   828b8:	e000e100 	.word	0xe000e100

000828bc <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
   828bc:	b480      	push	{r7}
   828be:	b083      	sub	sp, #12
   828c0:	af00      	add	r7, sp, #0
   828c2:	4603      	mov	r3, r0
   828c4:	6039      	str	r1, [r7, #0]
   828c6:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
   828c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
   828cc:	2b00      	cmp	r3, #0
   828ce:	da0b      	bge.n	828e8 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
   828d0:	490d      	ldr	r1, [pc, #52]	; (82908 <NVIC_SetPriority+0x4c>)
   828d2:	79fb      	ldrb	r3, [r7, #7]
   828d4:	f003 030f 	and.w	r3, r3, #15
   828d8:	3b04      	subs	r3, #4
   828da:	683a      	ldr	r2, [r7, #0]
   828dc:	b2d2      	uxtb	r2, r2
   828de:	0112      	lsls	r2, r2, #4
   828e0:	b2d2      	uxtb	r2, r2
   828e2:	440b      	add	r3, r1
   828e4:	761a      	strb	r2, [r3, #24]
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
}
   828e6:	e009      	b.n	828fc <NVIC_SetPriority+0x40>
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   828e8:	4908      	ldr	r1, [pc, #32]	; (8290c <NVIC_SetPriority+0x50>)
   828ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
   828ee:	683a      	ldr	r2, [r7, #0]
   828f0:	b2d2      	uxtb	r2, r2
   828f2:	0112      	lsls	r2, r2, #4
   828f4:	b2d2      	uxtb	r2, r2
   828f6:	440b      	add	r3, r1
   828f8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
   828fc:	bf00      	nop
   828fe:	370c      	adds	r7, #12
   82900:	46bd      	mov	sp, r7
   82902:	bc80      	pop	{r7}
   82904:	4770      	bx	lr
   82906:	bf00      	nop
   82908:	e000ed00 	.word	0xe000ed00
   8290c:	e000e100 	.word	0xe000e100

00082910 <sysclk_enable_peripheral_clock>:
{
   82910:	b580      	push	{r7, lr}
   82912:	b082      	sub	sp, #8
   82914:	af00      	add	r7, sp, #0
   82916:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   82918:	6878      	ldr	r0, [r7, #4]
   8291a:	4b03      	ldr	r3, [pc, #12]	; (82928 <sysclk_enable_peripheral_clock+0x18>)
   8291c:	4798      	blx	r3
}
   8291e:	bf00      	nop
   82920:	3708      	adds	r7, #8
   82922:	46bd      	mov	sp, r7
   82924:	bd80      	pop	{r7, pc}
   82926:	bf00      	nop
   82928:	00083999 	.word	0x00083999

0008292c <ioport_set_pin_level>:
{
   8292c:	b480      	push	{r7}
   8292e:	b08b      	sub	sp, #44	; 0x2c
   82930:	af00      	add	r7, sp, #0
   82932:	6078      	str	r0, [r7, #4]
   82934:	460b      	mov	r3, r1
   82936:	70fb      	strb	r3, [r7, #3]
   82938:	687b      	ldr	r3, [r7, #4]
   8293a:	627b      	str	r3, [r7, #36]	; 0x24
   8293c:	78fb      	ldrb	r3, [r7, #3]
   8293e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   82942:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   82944:	61fb      	str	r3, [r7, #28]
   82946:	69fb      	ldr	r3, [r7, #28]
   82948:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   8294a:	69bb      	ldr	r3, [r7, #24]
   8294c:	095b      	lsrs	r3, r3, #5
   8294e:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   82950:	697b      	ldr	r3, [r7, #20]
   82952:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   82956:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8295a:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   8295c:	613b      	str	r3, [r7, #16]
	if (level) {
   8295e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   82962:	2b00      	cmp	r3, #0
   82964:	d009      	beq.n	8297a <ioport_set_pin_level+0x4e>
   82966:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   82968:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8296a:	68fb      	ldr	r3, [r7, #12]
   8296c:	f003 031f 	and.w	r3, r3, #31
   82970:	2201      	movs	r2, #1
   82972:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   82974:	693b      	ldr	r3, [r7, #16]
   82976:	631a      	str	r2, [r3, #48]	; 0x30
}
   82978:	e008      	b.n	8298c <ioport_set_pin_level+0x60>
   8297a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   8297c:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   8297e:	68bb      	ldr	r3, [r7, #8]
   82980:	f003 031f 	and.w	r3, r3, #31
   82984:	2201      	movs	r2, #1
   82986:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   82988:	693b      	ldr	r3, [r7, #16]
   8298a:	635a      	str	r2, [r3, #52]	; 0x34
   8298c:	bf00      	nop
   8298e:	372c      	adds	r7, #44	; 0x2c
   82990:	46bd      	mov	sp, r7
   82992:	bc80      	pop	{r7}
   82994:	4770      	bx	lr

00082996 <ioport_get_port_level>:
 * \return Logical levels of the specified pins from the read port, returned as
 * a mask.
 */
static inline ioport_port_mask_t ioport_get_port_level(ioport_pin_t port,
		ioport_port_mask_t mask)
{
   82996:	b480      	push	{r7}
   82998:	b087      	sub	sp, #28
   8299a:	af00      	add	r7, sp, #0
   8299c:	6078      	str	r0, [r7, #4]
   8299e:	6039      	str	r1, [r7, #0]
   829a0:	687b      	ldr	r3, [r7, #4]
   829a2:	617b      	str	r3, [r7, #20]
   829a4:	683b      	ldr	r3, [r7, #0]
   829a6:	613b      	str	r3, [r7, #16]
   829a8:	697b      	ldr	r3, [r7, #20]
   829aa:	60fb      	str	r3, [r7, #12]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   829ac:	68fb      	ldr	r3, [r7, #12]
   829ae:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   829b2:	f203 7307 	addw	r3, r3, #1799	; 0x707
   829b6:	025b      	lsls	r3, r3, #9
}

__always_inline static ioport_port_mask_t arch_ioport_get_port_level(
		ioport_port_t port, ioport_port_mask_t mask)
{
	return arch_ioport_port_to_base(port)->PIO_PDSR & mask;
   829b8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   829ba:	693b      	ldr	r3, [r7, #16]
   829bc:	4013      	ands	r3, r2
	return arch_ioport_get_port_level(port, mask);
   829be:	bf00      	nop
}
   829c0:	4618      	mov	r0, r3
   829c2:	371c      	adds	r7, #28
   829c4:	46bd      	mov	sp, r7
   829c6:	bc80      	pop	{r7}
   829c8:	4770      	bx	lr
	...

000829cc <motor_init>:
float CosinMA1 = -0.866025404f;
float CosinMA2 = 0.866025404f;
float CosinMA3 = 0.0f;

void motor_init(void)
{
   829cc:	b5b0      	push	{r4, r5, r7, lr}
   829ce:	af00      	add	r7, sp, #0
	/* Initialize PWM channel for MLeft */
  /* Period is left-aligned */
  g_pwm_channel_MLeft.alignment = PWM_ALIGN_LEFT;
   829d0:	4b5e      	ldr	r3, [pc, #376]	; (82b4c <motor_init+0x180>)
   829d2:	2200      	movs	r2, #0
   829d4:	811a      	strh	r2, [r3, #8]
  /* Output waveform starts at a low level */
  g_pwm_channel_MLeft.polarity = PWM_LOW;
   829d6:	4b5d      	ldr	r3, [pc, #372]	; (82b4c <motor_init+0x180>)
   829d8:	2200      	movs	r2, #0
   829da:	729a      	strb	r2, [r3, #10]
  /* Use PWM clock A as source clock */
  g_pwm_channel_MLeft.ul_prescaler = PWM_CMR_CPRE_CLKA;
   829dc:	4b5b      	ldr	r3, [pc, #364]	; (82b4c <motor_init+0x180>)
   829de:	220b      	movs	r2, #11
   829e0:	605a      	str	r2, [r3, #4]
  /* Period value of output waveform */
  g_pwm_channel_MLeft.ul_period = PERIOD_VALUE;
   829e2:	4b5a      	ldr	r3, [pc, #360]	; (82b4c <motor_init+0x180>)
   829e4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   829e8:	611a      	str	r2, [r3, #16]
  /* Duty cycle value of output waveform */
  g_pwm_channel_MLeft.ul_duty = INIT_DUTY_VALUE;
   829ea:	4b58      	ldr	r3, [pc, #352]	; (82b4c <motor_init+0x180>)
   829ec:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
   829f0:	60da      	str	r2, [r3, #12]
  g_pwm_channel_MLeft.channel = MOTOR_LEFT;
   829f2:	4b56      	ldr	r3, [pc, #344]	; (82b4c <motor_init+0x180>)
   829f4:	2200      	movs	r2, #0
   829f6:	601a      	str	r2, [r3, #0]
  pwm_channel_init(PWM, &g_pwm_channel_MLeft);
   829f8:	4954      	ldr	r1, [pc, #336]	; (82b4c <motor_init+0x180>)
   829fa:	4855      	ldr	r0, [pc, #340]	; (82b50 <motor_init+0x184>)
   829fc:	4b55      	ldr	r3, [pc, #340]	; (82b54 <motor_init+0x188>)
   829fe:	4798      	blx	r3
	
	
  /* Initialize PWM channel for MRight */
  /* Period is left-aligned */
  g_pwm_channel_MRight.alignment = PWM_ALIGN_LEFT;
   82a00:	4b55      	ldr	r3, [pc, #340]	; (82b58 <motor_init+0x18c>)
   82a02:	2200      	movs	r2, #0
   82a04:	811a      	strh	r2, [r3, #8]
  /* Output waveform starts at a low level */
  g_pwm_channel_MRight.polarity = PWM_LOW;
   82a06:	4b54      	ldr	r3, [pc, #336]	; (82b58 <motor_init+0x18c>)
   82a08:	2200      	movs	r2, #0
   82a0a:	729a      	strb	r2, [r3, #10]
  /* Use PWM clock A as source clock */
  g_pwm_channel_MRight.ul_prescaler = PWM_CMR_CPRE_CLKA;
   82a0c:	4b52      	ldr	r3, [pc, #328]	; (82b58 <motor_init+0x18c>)
   82a0e:	220b      	movs	r2, #11
   82a10:	605a      	str	r2, [r3, #4]
  /* Period value of output waveform */
  g_pwm_channel_MRight.ul_period = PERIOD_VALUE;
   82a12:	4b51      	ldr	r3, [pc, #324]	; (82b58 <motor_init+0x18c>)
   82a14:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   82a18:	611a      	str	r2, [r3, #16]
  /* Duty cycle value of output waveform */
  g_pwm_channel_MRight.ul_duty = INIT_DUTY_VALUE;
   82a1a:	4b4f      	ldr	r3, [pc, #316]	; (82b58 <motor_init+0x18c>)
   82a1c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
   82a20:	60da      	str	r2, [r3, #12]
  g_pwm_channel_MRight.channel = MOTOR_RIGHT;
   82a22:	4b4d      	ldr	r3, [pc, #308]	; (82b58 <motor_init+0x18c>)
   82a24:	2201      	movs	r2, #1
   82a26:	601a      	str	r2, [r3, #0]
  pwm_channel_init(PWM, &g_pwm_channel_MRight);
   82a28:	494b      	ldr	r1, [pc, #300]	; (82b58 <motor_init+0x18c>)
   82a2a:	4849      	ldr	r0, [pc, #292]	; (82b50 <motor_init+0x184>)
   82a2c:	4b49      	ldr	r3, [pc, #292]	; (82b54 <motor_init+0x188>)
   82a2e:	4798      	blx	r3
	
	
  /* Initialize PWM channel for MBack */
  /* Period is left-aligned */
  g_pwm_channel_MRear.alignment = PWM_ALIGN_LEFT;
   82a30:	4b4a      	ldr	r3, [pc, #296]	; (82b5c <motor_init+0x190>)
   82a32:	2200      	movs	r2, #0
   82a34:	811a      	strh	r2, [r3, #8]
  /* Output waveform starts at a low level */
  g_pwm_channel_MRear.polarity = PWM_LOW;
   82a36:	4b49      	ldr	r3, [pc, #292]	; (82b5c <motor_init+0x190>)
   82a38:	2200      	movs	r2, #0
   82a3a:	729a      	strb	r2, [r3, #10]
  /* Use PWM clock A as source clock */
  g_pwm_channel_MRear.ul_prescaler = PWM_CMR_CPRE_CLKA;
   82a3c:	4b47      	ldr	r3, [pc, #284]	; (82b5c <motor_init+0x190>)
   82a3e:	220b      	movs	r2, #11
   82a40:	605a      	str	r2, [r3, #4]
  /* Period value of output waveform */
  g_pwm_channel_MRear.ul_period = PERIOD_VALUE;
   82a42:	4b46      	ldr	r3, [pc, #280]	; (82b5c <motor_init+0x190>)
   82a44:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   82a48:	611a      	str	r2, [r3, #16]
  /* Duty cycle value of output waveform */
  g_pwm_channel_MRear.ul_duty = INIT_DUTY_VALUE;
   82a4a:	4b44      	ldr	r3, [pc, #272]	; (82b5c <motor_init+0x190>)
   82a4c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
   82a50:	60da      	str	r2, [r3, #12]
  g_pwm_channel_MRear.channel = MOTOR_REAR;
   82a52:	4b42      	ldr	r3, [pc, #264]	; (82b5c <motor_init+0x190>)
   82a54:	2202      	movs	r2, #2
   82a56:	601a      	str	r2, [r3, #0]
  pwm_channel_init(PWM, &g_pwm_channel_MRear);
   82a58:	4940      	ldr	r1, [pc, #256]	; (82b5c <motor_init+0x190>)
   82a5a:	483d      	ldr	r0, [pc, #244]	; (82b50 <motor_init+0x184>)
   82a5c:	4b3d      	ldr	r3, [pc, #244]	; (82b54 <motor_init+0x188>)
   82a5e:	4798      	blx	r3
  
  pwm_channel_disable(PWM, MOTOR_LEFT);
   82a60:	2100      	movs	r1, #0
   82a62:	483b      	ldr	r0, [pc, #236]	; (82b50 <motor_init+0x184>)
   82a64:	4b3e      	ldr	r3, [pc, #248]	; (82b60 <motor_init+0x194>)
   82a66:	4798      	blx	r3
  pwm_channel_disable(PWM, MOTOR_RIGHT);
   82a68:	2101      	movs	r1, #1
   82a6a:	4839      	ldr	r0, [pc, #228]	; (82b50 <motor_init+0x184>)
   82a6c:	4b3c      	ldr	r3, [pc, #240]	; (82b60 <motor_init+0x194>)
   82a6e:	4798      	blx	r3
  pwm_channel_disable(PWM, MOTOR_REAR);
   82a70:	2102      	movs	r1, #2
   82a72:	4837      	ldr	r0, [pc, #220]	; (82b50 <motor_init+0x184>)
   82a74:	4b3a      	ldr	r3, [pc, #232]	; (82b60 <motor_init+0x194>)
   82a76:	4798      	blx	r3
  
  g_pwm_channel_ENC.alignment = PWM_ALIGN_LEFT;
   82a78:	4b3a      	ldr	r3, [pc, #232]	; (82b64 <motor_init+0x198>)
   82a7a:	2200      	movs	r2, #0
   82a7c:	811a      	strh	r2, [r3, #8]
  g_pwm_channel_ENC.polarity = PWM_LOW;
   82a7e:	4b39      	ldr	r3, [pc, #228]	; (82b64 <motor_init+0x198>)
   82a80:	2200      	movs	r2, #0
   82a82:	729a      	strb	r2, [r3, #10]
  g_pwm_channel_ENC.ul_prescaler = PWM_CMR_CPRE_CLKA;
   82a84:	4b37      	ldr	r3, [pc, #220]	; (82b64 <motor_init+0x198>)
   82a86:	220b      	movs	r2, #11
   82a88:	605a      	str	r2, [r3, #4]
  g_pwm_channel_ENC.ul_period = 330;
   82a8a:	4b36      	ldr	r3, [pc, #216]	; (82b64 <motor_init+0x198>)
   82a8c:	f44f 72a5 	mov.w	r2, #330	; 0x14a
   82a90:	611a      	str	r2, [r3, #16]
  g_pwm_channel_ENC.ul_duty = 165;
   82a92:	4b34      	ldr	r3, [pc, #208]	; (82b64 <motor_init+0x198>)
   82a94:	22a5      	movs	r2, #165	; 0xa5
   82a96:	60da      	str	r2, [r3, #12]
  g_pwm_channel_ENC.channel = ENC_CLK;
   82a98:	4b32      	ldr	r3, [pc, #200]	; (82b64 <motor_init+0x198>)
   82a9a:	2255      	movs	r2, #85	; 0x55
   82a9c:	601a      	str	r2, [r3, #0]
  pwm_channel_init(PWM, &g_pwm_channel_ENC);
   82a9e:	4931      	ldr	r1, [pc, #196]	; (82b64 <motor_init+0x198>)
   82aa0:	482b      	ldr	r0, [pc, #172]	; (82b50 <motor_init+0x184>)
   82aa2:	4b2c      	ldr	r3, [pc, #176]	; (82b54 <motor_init+0x188>)
   82aa4:	4798      	blx	r3
  pwm_channel_enable(PWM, ENC_CLK);
   82aa6:	2155      	movs	r1, #85	; 0x55
   82aa8:	4829      	ldr	r0, [pc, #164]	; (82b50 <motor_init+0x184>)
   82aaa:	4b2f      	ldr	r3, [pc, #188]	; (82b68 <motor_init+0x19c>)
   82aac:	4798      	blx	r3
  
  sysclk_enable_peripheral_clock(ID_TC1);
   82aae:	201c      	movs	r0, #28
   82ab0:	4b2e      	ldr	r3, [pc, #184]	; (82b6c <motor_init+0x1a0>)
   82ab2:	4798      	blx	r3
  tc_init(TC0, 1, TC_CMR_TCCLKS_TIMER_CLOCK4 | TC_CMR_CPCTRG);
   82ab4:	f244 0203 	movw	r2, #16387	; 0x4003
   82ab8:	2101      	movs	r1, #1
   82aba:	482d      	ldr	r0, [pc, #180]	; (82b70 <motor_init+0x1a4>)
   82abc:	4b2d      	ldr	r3, [pc, #180]	; (82b74 <motor_init+0x1a8>)
   82abe:	4798      	blx	r3
  tc_write_rc(TC0, 1, 5249);  //MCLK / 128 * 0,008
   82ac0:	f241 4281 	movw	r2, #5249	; 0x1481
   82ac4:	2101      	movs	r1, #1
   82ac6:	482a      	ldr	r0, [pc, #168]	; (82b70 <motor_init+0x1a4>)
   82ac8:	4b2b      	ldr	r3, [pc, #172]	; (82b78 <motor_init+0x1ac>)
   82aca:	4798      	blx	r3
  NVIC_DisableIRQ(TC1_IRQn);
   82acc:	201c      	movs	r0, #28
   82ace:	4b2b      	ldr	r3, [pc, #172]	; (82b7c <motor_init+0x1b0>)
   82ad0:	4798      	blx	r3
  NVIC_ClearPendingIRQ(TC1_IRQn);
   82ad2:	201c      	movs	r0, #28
   82ad4:	4b2a      	ldr	r3, [pc, #168]	; (82b80 <motor_init+0x1b4>)
   82ad6:	4798      	blx	r3
  NVIC_SetPriority(TC1_IRQn, 0);
   82ad8:	2100      	movs	r1, #0
   82ada:	201c      	movs	r0, #28
   82adc:	4b29      	ldr	r3, [pc, #164]	; (82b84 <motor_init+0x1b8>)
   82ade:	4798      	blx	r3
  NVIC_EnableIRQ(TC1_IRQn);
   82ae0:	201c      	movs	r0, #28
   82ae2:	4b29      	ldr	r3, [pc, #164]	; (82b88 <motor_init+0x1bc>)
   82ae4:	4798      	blx	r3
  tc_enable_interrupt(TC0, 1, TC_IER_CPCS);
   82ae6:	2210      	movs	r2, #16
   82ae8:	2101      	movs	r1, #1
   82aea:	4821      	ldr	r0, [pc, #132]	; (82b70 <motor_init+0x1a4>)
   82aec:	4b27      	ldr	r3, [pc, #156]	; (82b8c <motor_init+0x1c0>)
   82aee:	4798      	blx	r3
  tc_start(TC0, 1);
   82af0:	2101      	movs	r1, #1
   82af2:	481f      	ldr	r0, [pc, #124]	; (82b70 <motor_init+0x1a4>)
   82af4:	4b26      	ldr	r3, [pc, #152]	; (82b90 <motor_init+0x1c4>)
   82af6:	4798      	blx	r3
  
  mleft_pid_reg.kp = 15.0f;
   82af8:	4b26      	ldr	r3, [pc, #152]	; (82b94 <motor_init+0x1c8>)
   82afa:	4a27      	ldr	r2, [pc, #156]	; (82b98 <motor_init+0x1cc>)
   82afc:	601a      	str	r2, [r3, #0]
  mleft_pid_reg.ki = 10.0f;
   82afe:	4b25      	ldr	r3, [pc, #148]	; (82b94 <motor_init+0x1c8>)
   82b00:	4a26      	ldr	r2, [pc, #152]	; (82b9c <motor_init+0x1d0>)
   82b02:	605a      	str	r2, [r3, #4]
  mleft_pid_reg.kc = 1.0f;
   82b04:	4b23      	ldr	r3, [pc, #140]	; (82b94 <motor_init+0x1c8>)
   82b06:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
   82b0a:	609a      	str	r2, [r3, #8]
  mleft_pid_reg.kd = 5.0f;
   82b0c:	4b21      	ldr	r3, [pc, #132]	; (82b94 <motor_init+0x1c8>)
   82b0e:	4a24      	ldr	r2, [pc, #144]	; (82ba0 <motor_init+0x1d4>)
   82b10:	60da      	str	r2, [r3, #12]
  mleft_pid_reg.outMin = -500.0f;
   82b12:	4b20      	ldr	r3, [pc, #128]	; (82b94 <motor_init+0x1c8>)
   82b14:	4a23      	ldr	r2, [pc, #140]	; (82ba4 <motor_init+0x1d8>)
   82b16:	619a      	str	r2, [r3, #24]
  mleft_pid_reg.outMax = 500.0f;
   82b18:	4b1e      	ldr	r3, [pc, #120]	; (82b94 <motor_init+0x1c8>)
   82b1a:	4a23      	ldr	r2, [pc, #140]	; (82ba8 <motor_init+0x1dc>)
   82b1c:	615a      	str	r2, [r3, #20]
  
  mright_pid_reg = mleft_pid_reg;
   82b1e:	4a23      	ldr	r2, [pc, #140]	; (82bac <motor_init+0x1e0>)
   82b20:	4b1c      	ldr	r3, [pc, #112]	; (82b94 <motor_init+0x1c8>)
   82b22:	4614      	mov	r4, r2
   82b24:	461d      	mov	r5, r3
   82b26:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   82b28:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   82b2a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   82b2c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   82b2e:	682b      	ldr	r3, [r5, #0]
   82b30:	6023      	str	r3, [r4, #0]
  mrear_pid_reg = mleft_pid_reg;
   82b32:	4a1f      	ldr	r2, [pc, #124]	; (82bb0 <motor_init+0x1e4>)
   82b34:	4b17      	ldr	r3, [pc, #92]	; (82b94 <motor_init+0x1c8>)
   82b36:	4614      	mov	r4, r2
   82b38:	461d      	mov	r5, r3
   82b3a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   82b3c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   82b3e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   82b40:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   82b42:	682b      	ldr	r3, [r5, #0]
   82b44:	6023      	str	r3, [r4, #0]
}
   82b46:	bf00      	nop
   82b48:	bdb0      	pop	{r4, r5, r7, pc}
   82b4a:	bf00      	nop
   82b4c:	20070e88 	.word	0x20070e88
   82b50:	40094000 	.word	0x40094000
   82b54:	000803f1 	.word	0x000803f1
   82b58:	20070f58 	.word	0x20070f58
   82b5c:	20070f00 	.word	0x20070f00
   82b60:	0008069d 	.word	0x0008069d
   82b64:	20070eb0 	.word	0x20070eb0
   82b68:	0008067b 	.word	0x0008067b
   82b6c:	00082911 	.word	0x00082911
   82b70:	40080000 	.word	0x40080000
   82b74:	000806bf 	.word	0x000806bf
   82b78:	00080717 	.word	0x00080717
   82b7c:	00082855 	.word	0x00082855
   82b80:	00082889 	.word	0x00082889
   82b84:	000828bd 	.word	0x000828bd
   82b88:	00082825 	.word	0x00082825
   82b8c:	0008073b 	.word	0x0008073b
   82b90:	000806f7 	.word	0x000806f7
   82b94:	20070f80 	.word	0x20070f80
   82b98:	41700000 	.word	0x41700000
   82b9c:	41200000 	.word	0x41200000
   82ba0:	40a00000 	.word	0x40a00000
   82ba4:	c3fa0000 	.word	0xc3fa0000
   82ba8:	43fa0000 	.word	0x43fa0000
   82bac:	20070ed8 	.word	0x20070ed8
   82bb0:	20070f28 	.word	0x20070f28

00082bb4 <enable_motor>:

void enable_motor(void)
{
   82bb4:	b580      	push	{r7, lr}
   82bb6:	af00      	add	r7, sp, #0
    pwm_channel_enable(PWM, MOTOR_LEFT);
   82bb8:	2100      	movs	r1, #0
   82bba:	480d      	ldr	r0, [pc, #52]	; (82bf0 <enable_motor+0x3c>)
   82bbc:	4b0d      	ldr	r3, [pc, #52]	; (82bf4 <enable_motor+0x40>)
   82bbe:	4798      	blx	r3
    pwm_channel_enable(PWM, MOTOR_RIGHT);
   82bc0:	2101      	movs	r1, #1
   82bc2:	480b      	ldr	r0, [pc, #44]	; (82bf0 <enable_motor+0x3c>)
   82bc4:	4b0b      	ldr	r3, [pc, #44]	; (82bf4 <enable_motor+0x40>)
   82bc6:	4798      	blx	r3
    pwm_channel_enable(PWM, MOTOR_REAR);
   82bc8:	2102      	movs	r1, #2
   82bca:	4809      	ldr	r0, [pc, #36]	; (82bf0 <enable_motor+0x3c>)
   82bcc:	4b09      	ldr	r3, [pc, #36]	; (82bf4 <enable_motor+0x40>)
   82bce:	4798      	blx	r3

    ioport_set_pin_level(ENC_LOAD, 0);
   82bd0:	2100      	movs	r1, #0
   82bd2:	2020      	movs	r0, #32
   82bd4:	4b08      	ldr	r3, [pc, #32]	; (82bf8 <enable_motor+0x44>)
   82bd6:	4798      	blx	r3
    ioport_set_pin_level(ENC_LOAD, 1);
   82bd8:	2101      	movs	r1, #1
   82bda:	2020      	movs	r0, #32
   82bdc:	4b06      	ldr	r3, [pc, #24]	; (82bf8 <enable_motor+0x44>)
   82bde:	4798      	blx	r3

    tc_enable_interrupt(TC0, 1, TC_IER_CPCS);
   82be0:	2210      	movs	r2, #16
   82be2:	2101      	movs	r1, #1
   82be4:	4805      	ldr	r0, [pc, #20]	; (82bfc <enable_motor+0x48>)
   82be6:	4b06      	ldr	r3, [pc, #24]	; (82c00 <enable_motor+0x4c>)
   82be8:	4798      	blx	r3
}
   82bea:	bf00      	nop
   82bec:	bd80      	pop	{r7, pc}
   82bee:	bf00      	nop
   82bf0:	40094000 	.word	0x40094000
   82bf4:	0008067b 	.word	0x0008067b
   82bf8:	0008292d 	.word	0x0008292d
   82bfc:	40080000 	.word	0x40080000
   82c00:	0008073b 	.word	0x0008073b

00082c04 <motor_speed>:
    pwm_channel_enable(PWM, ENC_CLK);
  }*/ 
}

void motor_speed(uint8_t motor, int16_t ispeed)
{
   82c04:	b580      	push	{r7, lr}
   82c06:	b084      	sub	sp, #16
   82c08:	af00      	add	r7, sp, #0
   82c0a:	4603      	mov	r3, r0
   82c0c:	460a      	mov	r2, r1
   82c0e:	71fb      	strb	r3, [r7, #7]
   82c10:	4613      	mov	r3, r2
   82c12:	80bb      	strh	r3, [r7, #4]
  if (ispeed > 500)
   82c14:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
   82c18:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
   82c1c:	dd02      	ble.n	82c24 <motor_speed+0x20>
  {
    ispeed = 500;
   82c1e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
   82c22:	80bb      	strh	r3, [r7, #4]
  }
  
  if (ispeed < -500)
   82c24:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
   82c28:	f513 7ffa 	cmn.w	r3, #500	; 0x1f4
   82c2c:	da02      	bge.n	82c34 <motor_speed+0x30>
  {
    ispeed = -500;
   82c2e:	f64f 630c 	movw	r3, #65036	; 0xfe0c
   82c32:	80bb      	strh	r3, [r7, #4]
  }
  
  uint16_t duty_cycle = (uint16_t)(ispeed + (int16_t)INIT_DUTY_VALUE);
   82c34:	88bb      	ldrh	r3, [r7, #4]
   82c36:	f503 73fa 	add.w	r3, r3, #500	; 0x1f4
   82c3a:	81fb      	strh	r3, [r7, #14]
  
  if (duty_cycle < 10)
   82c3c:	89fb      	ldrh	r3, [r7, #14]
   82c3e:	2b09      	cmp	r3, #9
   82c40:	d801      	bhi.n	82c46 <motor_speed+0x42>
  {
    duty_cycle = 10;
   82c42:	230a      	movs	r3, #10
   82c44:	81fb      	strh	r3, [r7, #14]
  }
  
  if (duty_cycle > 990)
   82c46:	89fb      	ldrh	r3, [r7, #14]
   82c48:	f240 32de 	movw	r2, #990	; 0x3de
   82c4c:	4293      	cmp	r3, r2
   82c4e:	d902      	bls.n	82c56 <motor_speed+0x52>
  {
    duty_cycle = 990;
   82c50:	f240 33de 	movw	r3, #990	; 0x3de
   82c54:	81fb      	strh	r3, [r7, #14]
  }
  
  switch(motor)
   82c56:	79fb      	ldrb	r3, [r7, #7]
   82c58:	2b01      	cmp	r3, #1
   82c5a:	d00b      	beq.n	82c74 <motor_speed+0x70>
   82c5c:	2b02      	cmp	r3, #2
   82c5e:	d010      	beq.n	82c82 <motor_speed+0x7e>
   82c60:	2b00      	cmp	r3, #0
   82c62:	d000      	beq.n	82c66 <motor_speed+0x62>
      break;
    case MOTOR_REAR:
      pwm_channel_update_duty(PWM, &g_pwm_channel_MRear, duty_cycle);
      break;
    default:
      break;
   82c64:	e014      	b.n	82c90 <motor_speed+0x8c>
      pwm_channel_update_duty(PWM, &g_pwm_channel_MLeft, duty_cycle);
   82c66:	89fb      	ldrh	r3, [r7, #14]
   82c68:	461a      	mov	r2, r3
   82c6a:	490b      	ldr	r1, [pc, #44]	; (82c98 <motor_speed+0x94>)
   82c6c:	480b      	ldr	r0, [pc, #44]	; (82c9c <motor_speed+0x98>)
   82c6e:	4b0c      	ldr	r3, [pc, #48]	; (82ca0 <motor_speed+0x9c>)
   82c70:	4798      	blx	r3
      break;
   82c72:	e00d      	b.n	82c90 <motor_speed+0x8c>
      pwm_channel_update_duty(PWM, &g_pwm_channel_MRight, duty_cycle);
   82c74:	89fb      	ldrh	r3, [r7, #14]
   82c76:	461a      	mov	r2, r3
   82c78:	490a      	ldr	r1, [pc, #40]	; (82ca4 <motor_speed+0xa0>)
   82c7a:	4808      	ldr	r0, [pc, #32]	; (82c9c <motor_speed+0x98>)
   82c7c:	4b08      	ldr	r3, [pc, #32]	; (82ca0 <motor_speed+0x9c>)
   82c7e:	4798      	blx	r3
      break;
   82c80:	e006      	b.n	82c90 <motor_speed+0x8c>
      pwm_channel_update_duty(PWM, &g_pwm_channel_MRear, duty_cycle);
   82c82:	89fb      	ldrh	r3, [r7, #14]
   82c84:	461a      	mov	r2, r3
   82c86:	4908      	ldr	r1, [pc, #32]	; (82ca8 <motor_speed+0xa4>)
   82c88:	4804      	ldr	r0, [pc, #16]	; (82c9c <motor_speed+0x98>)
   82c8a:	4b05      	ldr	r3, [pc, #20]	; (82ca0 <motor_speed+0x9c>)
   82c8c:	4798      	blx	r3
      break;
   82c8e:	bf00      	nop
  }
}
   82c90:	bf00      	nop
   82c92:	3710      	adds	r7, #16
   82c94:	46bd      	mov	sp, r7
   82c96:	bd80      	pop	{r7, pc}
   82c98:	20070e88 	.word	0x20070e88
   82c9c:	40094000 	.word	0x40094000
   82ca0:	00080637 	.word	0x00080637
   82ca4:	20070f58 	.word	0x20070f58
   82ca8:	20070f00 	.word	0x20070f00

00082cac <TC1_Handler>:

void TC1_Handler(void)
{
   82cac:	b590      	push	{r4, r7, lr}
   82cae:	b085      	sub	sp, #20
   82cb0:	af00      	add	r7, sp, #0
  uint32_t PIOC_value;
  int32_t eleft_counts;
  int32_t eright_counts;
  int32_t erear_counts;
  
  ioport_set_pin_level(LED_M3, 1);
   82cb2:	2101      	movs	r1, #1
   82cb4:	2069      	movs	r0, #105	; 0x69
   82cb6:	4b50      	ldr	r3, [pc, #320]	; (82df8 <TC1_Handler+0x14c>)
   82cb8:	4798      	blx	r3
  
  if ((tc_get_status(TC0, 1) & TC_SR_CPCS) == TC_SR_CPCS)
   82cba:	2101      	movs	r1, #1
   82cbc:	484f      	ldr	r0, [pc, #316]	; (82dfc <TC1_Handler+0x150>)
   82cbe:	4b50      	ldr	r3, [pc, #320]	; (82e00 <TC1_Handler+0x154>)
   82cc0:	4798      	blx	r3
   82cc2:	4603      	mov	r3, r0
   82cc4:	f003 0310 	and.w	r3, r3, #16
   82cc8:	2b10      	cmp	r3, #16
   82cca:	f040 808c 	bne.w	82de6 <TC1_Handler+0x13a>
  {
    pwm_channel_disable(PWM, ENC_CLK);
   82cce:	2155      	movs	r1, #85	; 0x55
   82cd0:	484c      	ldr	r0, [pc, #304]	; (82e04 <TC1_Handler+0x158>)
   82cd2:	4b4d      	ldr	r3, [pc, #308]	; (82e08 <TC1_Handler+0x15c>)
   82cd4:	4798      	blx	r3
    PIOC_value = ioport_get_port_level(IOPORT_PIOC, 0xFFFFFFFF);
   82cd6:	f04f 31ff 	mov.w	r1, #4294967295
   82cda:	2002      	movs	r0, #2
   82cdc:	4b4b      	ldr	r3, [pc, #300]	; (82e0c <TC1_Handler+0x160>)
   82cde:	4798      	blx	r3
   82ce0:	60f8      	str	r0, [r7, #12]
    ioport_set_pin_level(ENC_LOAD, 0);
   82ce2:	2100      	movs	r1, #0
   82ce4:	2020      	movs	r0, #32
   82ce6:	4b44      	ldr	r3, [pc, #272]	; (82df8 <TC1_Handler+0x14c>)
   82ce8:	4798      	blx	r3
    ioport_set_pin_level(ENC_LOAD, 1);
   82cea:	2101      	movs	r1, #1
   82cec:	2020      	movs	r0, #32
   82cee:	4b42      	ldr	r3, [pc, #264]	; (82df8 <TC1_Handler+0x14c>)
   82cf0:	4798      	blx	r3
    pwm_channel_enable(PWM, ENC_CLK);
   82cf2:	2155      	movs	r1, #85	; 0x55
   82cf4:	4843      	ldr	r0, [pc, #268]	; (82e04 <TC1_Handler+0x158>)
   82cf6:	4b46      	ldr	r3, [pc, #280]	; (82e10 <TC1_Handler+0x164>)
   82cf8:	4798      	blx	r3
  
    eleft_counts = (PIOC_value & 0x7F000000) >> 24;
   82cfa:	68fb      	ldr	r3, [r7, #12]
   82cfc:	0e1b      	lsrs	r3, r3, #24
   82cfe:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   82d02:	60bb      	str	r3, [r7, #8]
    eleft_counts = (eleft_counts & 0x00000040) ? eleft_counts - 128 : eleft_counts;
   82d04:	68bb      	ldr	r3, [r7, #8]
   82d06:	f003 0340 	and.w	r3, r3, #64	; 0x40
   82d0a:	2b00      	cmp	r3, #0
   82d0c:	d002      	beq.n	82d14 <TC1_Handler+0x68>
   82d0e:	68bb      	ldr	r3, [r7, #8]
   82d10:	3b80      	subs	r3, #128	; 0x80
   82d12:	e000      	b.n	82d16 <TC1_Handler+0x6a>
   82d14:	68bb      	ldr	r3, [r7, #8]
   82d16:	60bb      	str	r3, [r7, #8]
    eright_counts = ((PIOC_value & 0x00C00000) >> 17) | ((PIOC_value & 0x001F0000) >> 16);
   82d18:	68fb      	ldr	r3, [r7, #12]
   82d1a:	0c5b      	lsrs	r3, r3, #17
   82d1c:	f003 0260 	and.w	r2, r3, #96	; 0x60
   82d20:	68fb      	ldr	r3, [r7, #12]
   82d22:	0c1b      	lsrs	r3, r3, #16
   82d24:	f003 031f 	and.w	r3, r3, #31
   82d28:	4313      	orrs	r3, r2
   82d2a:	607b      	str	r3, [r7, #4]
    eright_counts = (eright_counts & 0x00000040) ? eright_counts - 128 : eright_counts;
   82d2c:	687b      	ldr	r3, [r7, #4]
   82d2e:	f003 0340 	and.w	r3, r3, #64	; 0x40
   82d32:	2b00      	cmp	r3, #0
   82d34:	d002      	beq.n	82d3c <TC1_Handler+0x90>
   82d36:	687b      	ldr	r3, [r7, #4]
   82d38:	3b80      	subs	r3, #128	; 0x80
   82d3a:	e000      	b.n	82d3e <TC1_Handler+0x92>
   82d3c:	687b      	ldr	r3, [r7, #4]
   82d3e:	607b      	str	r3, [r7, #4]
    erear_counts = ((PIOC_value & 0x0000FC00) >> 9) | ((PIOC_value & 0x00000002) >> 1);
   82d40:	68fb      	ldr	r3, [r7, #12]
   82d42:	0a5b      	lsrs	r3, r3, #9
   82d44:	f003 027e 	and.w	r2, r3, #126	; 0x7e
   82d48:	68fb      	ldr	r3, [r7, #12]
   82d4a:	085b      	lsrs	r3, r3, #1
   82d4c:	f003 0301 	and.w	r3, r3, #1
   82d50:	4313      	orrs	r3, r2
   82d52:	603b      	str	r3, [r7, #0]
    erear_counts = (erear_counts & 0x00000040) ? erear_counts - 128 : erear_counts;
   82d54:	683b      	ldr	r3, [r7, #0]
   82d56:	f003 0340 	and.w	r3, r3, #64	; 0x40
   82d5a:	2b00      	cmp	r3, #0
   82d5c:	d002      	beq.n	82d64 <TC1_Handler+0xb8>
   82d5e:	683b      	ldr	r3, [r7, #0]
   82d60:	3b80      	subs	r3, #128	; 0x80
   82d62:	e000      	b.n	82d66 <TC1_Handler+0xba>
   82d64:	683b      	ldr	r3, [r7, #0]
   82d66:	603b      	str	r3, [r7, #0]
  
    motor_speed(MOTOR_LEFT, pidReg(&mleft_pid_reg, speed_mleft, (float)eleft_counts));
   82d68:	4b2a      	ldr	r3, [pc, #168]	; (82e14 <TC1_Handler+0x168>)
   82d6a:	681c      	ldr	r4, [r3, #0]
   82d6c:	4b2a      	ldr	r3, [pc, #168]	; (82e18 <TC1_Handler+0x16c>)
   82d6e:	68b8      	ldr	r0, [r7, #8]
   82d70:	4798      	blx	r3
   82d72:	4603      	mov	r3, r0
   82d74:	461a      	mov	r2, r3
   82d76:	4621      	mov	r1, r4
   82d78:	4828      	ldr	r0, [pc, #160]	; (82e1c <TC1_Handler+0x170>)
   82d7a:	4b29      	ldr	r3, [pc, #164]	; (82e20 <TC1_Handler+0x174>)
   82d7c:	4798      	blx	r3
   82d7e:	4602      	mov	r2, r0
   82d80:	4b28      	ldr	r3, [pc, #160]	; (82e24 <TC1_Handler+0x178>)
   82d82:	4610      	mov	r0, r2
   82d84:	4798      	blx	r3
   82d86:	4603      	mov	r3, r0
   82d88:	b21b      	sxth	r3, r3
   82d8a:	4619      	mov	r1, r3
   82d8c:	2000      	movs	r0, #0
   82d8e:	4b26      	ldr	r3, [pc, #152]	; (82e28 <TC1_Handler+0x17c>)
   82d90:	4798      	blx	r3
    motor_speed(MOTOR_RIGHT, pidReg(&mright_pid_reg, speed_mright, (float)eright_counts));
   82d92:	4b26      	ldr	r3, [pc, #152]	; (82e2c <TC1_Handler+0x180>)
   82d94:	681c      	ldr	r4, [r3, #0]
   82d96:	4b20      	ldr	r3, [pc, #128]	; (82e18 <TC1_Handler+0x16c>)
   82d98:	6878      	ldr	r0, [r7, #4]
   82d9a:	4798      	blx	r3
   82d9c:	4603      	mov	r3, r0
   82d9e:	461a      	mov	r2, r3
   82da0:	4621      	mov	r1, r4
   82da2:	4823      	ldr	r0, [pc, #140]	; (82e30 <TC1_Handler+0x184>)
   82da4:	4b1e      	ldr	r3, [pc, #120]	; (82e20 <TC1_Handler+0x174>)
   82da6:	4798      	blx	r3
   82da8:	4602      	mov	r2, r0
   82daa:	4b1e      	ldr	r3, [pc, #120]	; (82e24 <TC1_Handler+0x178>)
   82dac:	4610      	mov	r0, r2
   82dae:	4798      	blx	r3
   82db0:	4603      	mov	r3, r0
   82db2:	b21b      	sxth	r3, r3
   82db4:	4619      	mov	r1, r3
   82db6:	2001      	movs	r0, #1
   82db8:	4b1b      	ldr	r3, [pc, #108]	; (82e28 <TC1_Handler+0x17c>)
   82dba:	4798      	blx	r3
    motor_speed(MOTOR_REAR, pidReg(&mrear_pid_reg, speed_mrear, (float)erear_counts));
   82dbc:	4b1d      	ldr	r3, [pc, #116]	; (82e34 <TC1_Handler+0x188>)
   82dbe:	681c      	ldr	r4, [r3, #0]
   82dc0:	4b15      	ldr	r3, [pc, #84]	; (82e18 <TC1_Handler+0x16c>)
   82dc2:	6838      	ldr	r0, [r7, #0]
   82dc4:	4798      	blx	r3
   82dc6:	4603      	mov	r3, r0
   82dc8:	461a      	mov	r2, r3
   82dca:	4621      	mov	r1, r4
   82dcc:	481a      	ldr	r0, [pc, #104]	; (82e38 <TC1_Handler+0x18c>)
   82dce:	4b14      	ldr	r3, [pc, #80]	; (82e20 <TC1_Handler+0x174>)
   82dd0:	4798      	blx	r3
   82dd2:	4602      	mov	r2, r0
   82dd4:	4b13      	ldr	r3, [pc, #76]	; (82e24 <TC1_Handler+0x178>)
   82dd6:	4610      	mov	r0, r2
   82dd8:	4798      	blx	r3
   82dda:	4603      	mov	r3, r0
   82ddc:	b21b      	sxth	r3, r3
   82dde:	4619      	mov	r1, r3
   82de0:	2002      	movs	r0, #2
   82de2:	4b11      	ldr	r3, [pc, #68]	; (82e28 <TC1_Handler+0x17c>)
   82de4:	4798      	blx	r3
  
    //pwm_channel_enable(PWM, ENC_CLK);
  }

  ioport_set_pin_level(LED_M3, 0);
   82de6:	2100      	movs	r1, #0
   82de8:	2069      	movs	r0, #105	; 0x69
   82dea:	4b03      	ldr	r3, [pc, #12]	; (82df8 <TC1_Handler+0x14c>)
   82dec:	4798      	blx	r3
}
   82dee:	bf00      	nop
   82df0:	3714      	adds	r7, #20
   82df2:	46bd      	mov	sp, r7
   82df4:	bd90      	pop	{r4, r7, pc}
   82df6:	bf00      	nop
   82df8:	0008292d 	.word	0x0008292d
   82dfc:	40080000 	.word	0x40080000
   82e00:	00080761 	.word	0x00080761
   82e04:	40094000 	.word	0x40094000
   82e08:	0008069d 	.word	0x0008069d
   82e0c:	00082997 	.word	0x00082997
   82e10:	0008067b 	.word	0x0008067b
   82e14:	20070f50 	.word	0x20070f50
   82e18:	00085085 	.word	0x00085085
   82e1c:	20070f80 	.word	0x20070f80
   82e20:	00082e3d 	.word	0x00082e3d
   82e24:	000854b9 	.word	0x000854b9
   82e28:	00082c05 	.word	0x00082c05
   82e2c:	20070efc 	.word	0x20070efc
   82e30:	20070ed8 	.word	0x20070ed8
   82e34:	20070fd8 	.word	0x20070fd8
   82e38:	20070f28 	.word	0x20070f28

00082e3c <pidReg>:
   82e3c:	b590      	push	{r4, r7, lr}
   82e3e:	b08b      	sub	sp, #44	; 0x2c
   82e40:	af00      	add	r7, sp, #0
   82e42:	60f8      	str	r0, [r7, #12]
   82e44:	60b9      	str	r1, [r7, #8]
   82e46:	607a      	str	r2, [r7, #4]
   82e48:	4b3c      	ldr	r3, [pc, #240]	; (82f3c <pidReg+0x100>)
   82e4a:	6879      	ldr	r1, [r7, #4]
   82e4c:	68b8      	ldr	r0, [r7, #8]
   82e4e:	4798      	blx	r3
   82e50:	4603      	mov	r3, r0
   82e52:	623b      	str	r3, [r7, #32]
   82e54:	68fb      	ldr	r3, [r7, #12]
   82e56:	681a      	ldr	r2, [r3, #0]
   82e58:	4b39      	ldr	r3, [pc, #228]	; (82f40 <pidReg+0x104>)
   82e5a:	6a39      	ldr	r1, [r7, #32]
   82e5c:	4610      	mov	r0, r2
   82e5e:	4798      	blx	r3
   82e60:	4603      	mov	r3, r0
   82e62:	61fb      	str	r3, [r7, #28]
   82e64:	68fb      	ldr	r3, [r7, #12]
   82e66:	691c      	ldr	r4, [r3, #16]
   82e68:	68fb      	ldr	r3, [r7, #12]
   82e6a:	685a      	ldr	r2, [r3, #4]
   82e6c:	4b34      	ldr	r3, [pc, #208]	; (82f40 <pidReg+0x104>)
   82e6e:	6a39      	ldr	r1, [r7, #32]
   82e70:	4610      	mov	r0, r2
   82e72:	4798      	blx	r3
   82e74:	4603      	mov	r3, r0
   82e76:	461a      	mov	r2, r3
   82e78:	4b32      	ldr	r3, [pc, #200]	; (82f44 <pidReg+0x108>)
   82e7a:	4611      	mov	r1, r2
   82e7c:	4620      	mov	r0, r4
   82e7e:	4798      	blx	r3
   82e80:	4603      	mov	r3, r0
   82e82:	461c      	mov	r4, r3
   82e84:	68fb      	ldr	r3, [r7, #12]
   82e86:	689a      	ldr	r2, [r3, #8]
   82e88:	68fb      	ldr	r3, [r7, #12]
   82e8a:	69d9      	ldr	r1, [r3, #28]
   82e8c:	4b2c      	ldr	r3, [pc, #176]	; (82f40 <pidReg+0x104>)
   82e8e:	4610      	mov	r0, r2
   82e90:	4798      	blx	r3
   82e92:	4603      	mov	r3, r0
   82e94:	461a      	mov	r2, r3
   82e96:	4b2b      	ldr	r3, [pc, #172]	; (82f44 <pidReg+0x108>)
   82e98:	4611      	mov	r1, r2
   82e9a:	4620      	mov	r0, r4
   82e9c:	4798      	blx	r3
   82e9e:	4603      	mov	r3, r0
   82ea0:	461a      	mov	r2, r3
   82ea2:	68fb      	ldr	r3, [r7, #12]
   82ea4:	611a      	str	r2, [r3, #16]
   82ea6:	68fb      	ldr	r3, [r7, #12]
   82ea8:	68dc      	ldr	r4, [r3, #12]
   82eaa:	68fb      	ldr	r3, [r7, #12]
   82eac:	6a1a      	ldr	r2, [r3, #32]
   82eae:	4b23      	ldr	r3, [pc, #140]	; (82f3c <pidReg+0x100>)
   82eb0:	4611      	mov	r1, r2
   82eb2:	6a38      	ldr	r0, [r7, #32]
   82eb4:	4798      	blx	r3
   82eb6:	4603      	mov	r3, r0
   82eb8:	461a      	mov	r2, r3
   82eba:	4b21      	ldr	r3, [pc, #132]	; (82f40 <pidReg+0x104>)
   82ebc:	4611      	mov	r1, r2
   82ebe:	4620      	mov	r0, r4
   82ec0:	4798      	blx	r3
   82ec2:	4603      	mov	r3, r0
   82ec4:	61bb      	str	r3, [r7, #24]
   82ec6:	68fb      	ldr	r3, [r7, #12]
   82ec8:	691a      	ldr	r2, [r3, #16]
   82eca:	4b1e      	ldr	r3, [pc, #120]	; (82f44 <pidReg+0x108>)
   82ecc:	69f9      	ldr	r1, [r7, #28]
   82ece:	4610      	mov	r0, r2
   82ed0:	4798      	blx	r3
   82ed2:	4603      	mov	r3, r0
   82ed4:	461a      	mov	r2, r3
   82ed6:	4b1b      	ldr	r3, [pc, #108]	; (82f44 <pidReg+0x108>)
   82ed8:	69b9      	ldr	r1, [r7, #24]
   82eda:	4610      	mov	r0, r2
   82edc:	4798      	blx	r3
   82ede:	4603      	mov	r3, r0
   82ee0:	617b      	str	r3, [r7, #20]
   82ee2:	68fb      	ldr	r3, [r7, #12]
   82ee4:	695a      	ldr	r2, [r3, #20]
   82ee6:	4b18      	ldr	r3, [pc, #96]	; (82f48 <pidReg+0x10c>)
   82ee8:	6979      	ldr	r1, [r7, #20]
   82eea:	4610      	mov	r0, r2
   82eec:	4798      	blx	r3
   82eee:	4603      	mov	r3, r0
   82ef0:	2b00      	cmp	r3, #0
   82ef2:	d003      	beq.n	82efc <pidReg+0xc0>
   82ef4:	68fb      	ldr	r3, [r7, #12]
   82ef6:	695b      	ldr	r3, [r3, #20]
   82ef8:	627b      	str	r3, [r7, #36]	; 0x24
   82efa:	e00e      	b.n	82f1a <pidReg+0xde>
   82efc:	68fb      	ldr	r3, [r7, #12]
   82efe:	699a      	ldr	r2, [r3, #24]
   82f00:	4b12      	ldr	r3, [pc, #72]	; (82f4c <pidReg+0x110>)
   82f02:	6979      	ldr	r1, [r7, #20]
   82f04:	4610      	mov	r0, r2
   82f06:	4798      	blx	r3
   82f08:	4603      	mov	r3, r0
   82f0a:	2b00      	cmp	r3, #0
   82f0c:	d003      	beq.n	82f16 <pidReg+0xda>
   82f0e:	68fb      	ldr	r3, [r7, #12]
   82f10:	699b      	ldr	r3, [r3, #24]
   82f12:	627b      	str	r3, [r7, #36]	; 0x24
   82f14:	e001      	b.n	82f1a <pidReg+0xde>
   82f16:	697b      	ldr	r3, [r7, #20]
   82f18:	627b      	str	r3, [r7, #36]	; 0x24
   82f1a:	4b08      	ldr	r3, [pc, #32]	; (82f3c <pidReg+0x100>)
   82f1c:	6979      	ldr	r1, [r7, #20]
   82f1e:	6a78      	ldr	r0, [r7, #36]	; 0x24
   82f20:	4798      	blx	r3
   82f22:	4603      	mov	r3, r0
   82f24:	461a      	mov	r2, r3
   82f26:	68fb      	ldr	r3, [r7, #12]
   82f28:	61da      	str	r2, [r3, #28]
   82f2a:	68fb      	ldr	r3, [r7, #12]
   82f2c:	6a3a      	ldr	r2, [r7, #32]
   82f2e:	621a      	str	r2, [r3, #32]
   82f30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   82f32:	4618      	mov	r0, r3
   82f34:	372c      	adds	r7, #44	; 0x2c
   82f36:	46bd      	mov	sp, r7
   82f38:	bd90      	pop	{r4, r7, pc}
   82f3a:	bf00      	nop
   82f3c:	00084f19 	.word	0x00084f19
   82f40:	0008512d 	.word	0x0008512d
   82f44:	00084f1d 	.word	0x00084f1d
   82f48:	00085469 	.word	0x00085469
   82f4c:	000854a5 	.word	0x000854a5

00082f50 <ioport_set_pin_level>:
{
   82f50:	b480      	push	{r7}
   82f52:	b08b      	sub	sp, #44	; 0x2c
   82f54:	af00      	add	r7, sp, #0
   82f56:	6078      	str	r0, [r7, #4]
   82f58:	460b      	mov	r3, r1
   82f5a:	70fb      	strb	r3, [r7, #3]
   82f5c:	687b      	ldr	r3, [r7, #4]
   82f5e:	627b      	str	r3, [r7, #36]	; 0x24
   82f60:	78fb      	ldrb	r3, [r7, #3]
   82f62:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   82f66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   82f68:	61fb      	str	r3, [r7, #28]
   82f6a:	69fb      	ldr	r3, [r7, #28]
   82f6c:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   82f6e:	69bb      	ldr	r3, [r7, #24]
   82f70:	095b      	lsrs	r3, r3, #5
   82f72:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   82f74:	697b      	ldr	r3, [r7, #20]
   82f76:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   82f7a:	f203 7307 	addw	r3, r3, #1799	; 0x707
   82f7e:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   82f80:	613b      	str	r3, [r7, #16]
	if (level) {
   82f82:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   82f86:	2b00      	cmp	r3, #0
   82f88:	d009      	beq.n	82f9e <ioport_set_pin_level+0x4e>
   82f8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   82f8c:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   82f8e:	68fb      	ldr	r3, [r7, #12]
   82f90:	f003 031f 	and.w	r3, r3, #31
   82f94:	2201      	movs	r2, #1
   82f96:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   82f98:	693b      	ldr	r3, [r7, #16]
   82f9a:	631a      	str	r2, [r3, #48]	; 0x30
}
   82f9c:	e008      	b.n	82fb0 <ioport_set_pin_level+0x60>
   82f9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   82fa0:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   82fa2:	68bb      	ldr	r3, [r7, #8]
   82fa4:	f003 031f 	and.w	r3, r3, #31
   82fa8:	2201      	movs	r2, #1
   82faa:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   82fac:	693b      	ldr	r3, [r7, #16]
   82fae:	635a      	str	r2, [r3, #52]	; 0x34
   82fb0:	bf00      	nop
   82fb2:	372c      	adds	r7, #44	; 0x2c
   82fb4:	46bd      	mov	sp, r7
   82fb6:	bc80      	pop	{r7}
   82fb8:	4770      	bx	lr
	...

00082fbc <SysTick_Handler>:
//float battery_voltage = 0;
uint8_t battery_percentage;
uint8_t prev_battery_percentage = 0;

void SysTick_Handler(void)
{
   82fbc:	b480      	push	{r7}
   82fbe:	af00      	add	r7, sp, #0
    g_ul_ms_ticks++;
   82fc0:	4b04      	ldr	r3, [pc, #16]	; (82fd4 <SysTick_Handler+0x18>)
   82fc2:	681b      	ldr	r3, [r3, #0]
   82fc4:	3301      	adds	r3, #1
   82fc6:	4a03      	ldr	r2, [pc, #12]	; (82fd4 <SysTick_Handler+0x18>)
   82fc8:	6013      	str	r3, [r2, #0]
}
   82fca:	bf00      	nop
   82fcc:	46bd      	mov	sp, r7
   82fce:	bc80      	pop	{r7}
   82fd0:	4770      	bx	lr
   82fd2:	bf00      	nop
   82fd4:	20070de8 	.word	0x20070de8

00082fd8 <getTicks>:

uint32_t getTicks(void)
{
   82fd8:	b480      	push	{r7}
   82fda:	af00      	add	r7, sp, #0
    return g_ul_ms_ticks;
   82fdc:	4b02      	ldr	r3, [pc, #8]	; (82fe8 <getTicks+0x10>)
   82fde:	681b      	ldr	r3, [r3, #0]
}
   82fe0:	4618      	mov	r0, r3
   82fe2:	46bd      	mov	sp, r7
   82fe4:	bc80      	pop	{r7}
   82fe6:	4770      	bx	lr
   82fe8:	20070de8 	.word	0x20070de8

00082fec <mdelay>:

void mdelay(uint32_t ul_dly_ticks)
{
   82fec:	b480      	push	{r7}
   82fee:	b085      	sub	sp, #20
   82ff0:	af00      	add	r7, sp, #0
   82ff2:	6078      	str	r0, [r7, #4]
    uint32_t ul_cur_ticks;

    ul_cur_ticks = g_ul_ms_ticks;
   82ff4:	4b07      	ldr	r3, [pc, #28]	; (83014 <mdelay+0x28>)
   82ff6:	681b      	ldr	r3, [r3, #0]
   82ff8:	60fb      	str	r3, [r7, #12]
    while ((g_ul_ms_ticks - ul_cur_ticks) < ul_dly_ticks);
   82ffa:	bf00      	nop
   82ffc:	4b05      	ldr	r3, [pc, #20]	; (83014 <mdelay+0x28>)
   82ffe:	681a      	ldr	r2, [r3, #0]
   83000:	68fb      	ldr	r3, [r7, #12]
   83002:	1ad2      	subs	r2, r2, r3
   83004:	687b      	ldr	r3, [r7, #4]
   83006:	429a      	cmp	r2, r3
   83008:	d3f8      	bcc.n	82ffc <mdelay+0x10>
}
   8300a:	bf00      	nop
   8300c:	3714      	adds	r7, #20
   8300e:	46bd      	mov	sp, r7
   83010:	bc80      	pop	{r7}
   83012:	4770      	bx	lr
   83014:	20070de8 	.word	0x20070de8

00083018 <update_comm>:

void update_comm(void)
{
   83018:	b580      	push	{r7, lr}
   8301a:	af00      	add	r7, sp, #0
    if ((getTicks() - ticks_comm) > 5)
   8301c:	4b0b      	ldr	r3, [pc, #44]	; (8304c <update_comm+0x34>)
   8301e:	4798      	blx	r3
   83020:	4602      	mov	r2, r0
   83022:	4b0b      	ldr	r3, [pc, #44]	; (83050 <update_comm+0x38>)
   83024:	681b      	ldr	r3, [r3, #0]
   83026:	1ad3      	subs	r3, r2, r3
   83028:	2b05      	cmp	r3, #5
   8302a:	d90d      	bls.n	83048 <update_comm+0x30>
    {
        ticks_comm = getTicks();
   8302c:	4b07      	ldr	r3, [pc, #28]	; (8304c <update_comm+0x34>)
   8302e:	4798      	blx	r3
   83030:	4602      	mov	r2, r0
   83032:	4b07      	ldr	r3, [pc, #28]	; (83050 <update_comm+0x38>)
   83034:	601a      	str	r2, [r3, #0]
        
        memcpy(&sens_buf, &mts, sizeof(mts));
   83036:	4b07      	ldr	r3, [pc, #28]	; (83054 <update_comm+0x3c>)
   83038:	681b      	ldr	r3, [r3, #0]
   8303a:	461a      	mov	r2, r3
   8303c:	4b06      	ldr	r3, [pc, #24]	; (83058 <update_comm+0x40>)
   8303e:	601a      	str	r2, [r3, #0]
        spi_master_transfer(&sens_buf, sizeof(sens_buf));
   83040:	2103      	movs	r1, #3
   83042:	4805      	ldr	r0, [pc, #20]	; (83058 <update_comm+0x40>)
   83044:	4b05      	ldr	r3, [pc, #20]	; (8305c <update_comm+0x44>)
   83046:	4798      	blx	r3
    }
}
   83048:	bf00      	nop
   8304a:	bd80      	pop	{r7, pc}
   8304c:	00082fd9 	.word	0x00082fd9
   83050:	20070e3c 	.word	0x20070e3c
   83054:	20070e30 	.word	0x20070e30
   83058:	20070e2c 	.word	0x20070e2c
   8305c:	00080b9d 	.word	0x00080b9d

00083060 <update_battery>:

void update_battery(Bool update_forced)
{
   83060:	b580      	push	{r7, lr}
   83062:	b084      	sub	sp, #16
   83064:	af00      	add	r7, sp, #0
   83066:	4603      	mov	r3, r0
   83068:	71fb      	strb	r3, [r7, #7]
    char tmp[6];
    battery_percentage = stm.bat_percentage;
   8306a:	4b20      	ldr	r3, [pc, #128]	; (830ec <update_battery+0x8c>)
   8306c:	789a      	ldrb	r2, [r3, #2]
   8306e:	4b20      	ldr	r3, [pc, #128]	; (830f0 <update_battery+0x90>)
   83070:	701a      	strb	r2, [r3, #0]
    
    if (update_forced || prev_battery_percentage != battery_percentage)
   83072:	79fb      	ldrb	r3, [r7, #7]
   83074:	2b00      	cmp	r3, #0
   83076:	d105      	bne.n	83084 <update_battery+0x24>
   83078:	4b1e      	ldr	r3, [pc, #120]	; (830f4 <update_battery+0x94>)
   8307a:	781a      	ldrb	r2, [r3, #0]
   8307c:	4b1c      	ldr	r3, [pc, #112]	; (830f0 <update_battery+0x90>)
   8307e:	781b      	ldrb	r3, [r3, #0]
   83080:	429a      	cmp	r2, r3
   83082:	d02f      	beq.n	830e4 <update_battery+0x84>
    {
        if (battery_percentage >= 100)
   83084:	4b1a      	ldr	r3, [pc, #104]	; (830f0 <update_battery+0x90>)
   83086:	781b      	ldrb	r3, [r3, #0]
   83088:	2b63      	cmp	r3, #99	; 0x63
   8308a:	d909      	bls.n	830a0 <update_battery+0x40>
        {
            sprintf(tmp, "%3u%%", battery_percentage);
   8308c:	4b18      	ldr	r3, [pc, #96]	; (830f0 <update_battery+0x90>)
   8308e:	781b      	ldrb	r3, [r3, #0]
   83090:	461a      	mov	r2, r3
   83092:	f107 0308 	add.w	r3, r7, #8
   83096:	4918      	ldr	r1, [pc, #96]	; (830f8 <update_battery+0x98>)
   83098:	4618      	mov	r0, r3
   8309a:	4b18      	ldr	r3, [pc, #96]	; (830fc <update_battery+0x9c>)
   8309c:	4798      	blx	r3
   8309e:	e016      	b.n	830ce <update_battery+0x6e>
        }
        else if (battery_percentage >= 10)
   830a0:	4b13      	ldr	r3, [pc, #76]	; (830f0 <update_battery+0x90>)
   830a2:	781b      	ldrb	r3, [r3, #0]
   830a4:	2b09      	cmp	r3, #9
   830a6:	d909      	bls.n	830bc <update_battery+0x5c>
        {
            sprintf(tmp, " %2u%%", battery_percentage);
   830a8:	4b11      	ldr	r3, [pc, #68]	; (830f0 <update_battery+0x90>)
   830aa:	781b      	ldrb	r3, [r3, #0]
   830ac:	461a      	mov	r2, r3
   830ae:	f107 0308 	add.w	r3, r7, #8
   830b2:	4913      	ldr	r1, [pc, #76]	; (83100 <update_battery+0xa0>)
   830b4:	4618      	mov	r0, r3
   830b6:	4b11      	ldr	r3, [pc, #68]	; (830fc <update_battery+0x9c>)
   830b8:	4798      	blx	r3
   830ba:	e008      	b.n	830ce <update_battery+0x6e>
        }
        else
        {
            sprintf(tmp, "  %1u%%", battery_percentage);
   830bc:	4b0c      	ldr	r3, [pc, #48]	; (830f0 <update_battery+0x90>)
   830be:	781b      	ldrb	r3, [r3, #0]
   830c0:	461a      	mov	r2, r3
   830c2:	f107 0308 	add.w	r3, r7, #8
   830c6:	490f      	ldr	r1, [pc, #60]	; (83104 <update_battery+0xa4>)
   830c8:	4618      	mov	r0, r3
   830ca:	4b0c      	ldr	r3, [pc, #48]	; (830fc <update_battery+0x9c>)
   830cc:	4798      	blx	r3
        }
            
        lcd_print_s(1, 16, tmp);
   830ce:	f107 0308 	add.w	r3, r7, #8
   830d2:	461a      	mov	r2, r3
   830d4:	2110      	movs	r1, #16
   830d6:	2001      	movs	r0, #1
   830d8:	4b0b      	ldr	r3, [pc, #44]	; (83108 <update_battery+0xa8>)
   830da:	4798      	blx	r3
        prev_battery_percentage = battery_percentage;
   830dc:	4b04      	ldr	r3, [pc, #16]	; (830f0 <update_battery+0x90>)
   830de:	781a      	ldrb	r2, [r3, #0]
   830e0:	4b04      	ldr	r3, [pc, #16]	; (830f4 <update_battery+0x94>)
   830e2:	701a      	strb	r2, [r3, #0]
    }
}
   830e4:	bf00      	nop
   830e6:	3710      	adds	r7, #16
   830e8:	46bd      	mov	sp, r7
   830ea:	bd80      	pop	{r7, pc}
   830ec:	20070e34 	.word	0x20070e34
   830f0:	20070fdc 	.word	0x20070fdc
   830f4:	20070dec 	.word	0x20070dec
   830f8:	00089734 	.word	0x00089734
   830fc:	000855f1 	.word	0x000855f1
   83100:	0008973c 	.word	0x0008973c
   83104:	00089744 	.word	0x00089744
   83108:	00081725 	.word	0x00081725

0008310c <update_heartbeat>:

void update_heartbeat(void)
{
   8310c:	b580      	push	{r7, lr}
   8310e:	af00      	add	r7, sp, #0
    if (heart_state)
   83110:	4b20      	ldr	r3, [pc, #128]	; (83194 <update_heartbeat+0x88>)
   83112:	781b      	ldrb	r3, [r3, #0]
   83114:	2b00      	cmp	r3, #0
   83116:	d01d      	beq.n	83154 <update_heartbeat+0x48>
    {
        if (getTicks() >= (ticks_heartbeat + 100))
   83118:	4b1f      	ldr	r3, [pc, #124]	; (83198 <update_heartbeat+0x8c>)
   8311a:	4798      	blx	r3
   8311c:	4602      	mov	r2, r0
   8311e:	4b1f      	ldr	r3, [pc, #124]	; (8319c <update_heartbeat+0x90>)
   83120:	681b      	ldr	r3, [r3, #0]
   83122:	3364      	adds	r3, #100	; 0x64
   83124:	429a      	cmp	r2, r3
   83126:	d333      	bcc.n	83190 <update_heartbeat+0x84>
        {
            ticks_heartbeat = getTicks();
   83128:	4b1b      	ldr	r3, [pc, #108]	; (83198 <update_heartbeat+0x8c>)
   8312a:	4798      	blx	r3
   8312c:	4602      	mov	r2, r0
   8312e:	4b1b      	ldr	r3, [pc, #108]	; (8319c <update_heartbeat+0x90>)
   83130:	601a      	str	r2, [r3, #0]
            ioport_set_pin_level(LED_ONBOARD, 0);
   83132:	2100      	movs	r1, #0
   83134:	206a      	movs	r0, #106	; 0x6a
   83136:	4b1a      	ldr	r3, [pc, #104]	; (831a0 <update_heartbeat+0x94>)
   83138:	4798      	blx	r3
            ioport_set_pin_level(LED_M1, 0);
   8313a:	2100      	movs	r1, #0
   8313c:	2067      	movs	r0, #103	; 0x67
   8313e:	4b18      	ldr	r3, [pc, #96]	; (831a0 <update_heartbeat+0x94>)
   83140:	4798      	blx	r3
            mts.ibit.heartbeat = 0;
   83142:	4a18      	ldr	r2, [pc, #96]	; (831a4 <update_heartbeat+0x98>)
   83144:	7813      	ldrb	r3, [r2, #0]
   83146:	f36f 0300 	bfc	r3, #0, #1
   8314a:	7013      	strb	r3, [r2, #0]
            heart_state = 0;
   8314c:	4b11      	ldr	r3, [pc, #68]	; (83194 <update_heartbeat+0x88>)
   8314e:	2200      	movs	r2, #0
   83150:	701a      	strb	r2, [r3, #0]
            ioport_set_pin_level(LED_M1, 1);
            mts.ibit.heartbeat = 1;
            heart_state = 1;
        }
    }
}
   83152:	e01d      	b.n	83190 <update_heartbeat+0x84>
        if (getTicks() >= (ticks_heartbeat + 900))
   83154:	4b10      	ldr	r3, [pc, #64]	; (83198 <update_heartbeat+0x8c>)
   83156:	4798      	blx	r3
   83158:	4602      	mov	r2, r0
   8315a:	4b10      	ldr	r3, [pc, #64]	; (8319c <update_heartbeat+0x90>)
   8315c:	681b      	ldr	r3, [r3, #0]
   8315e:	f503 7361 	add.w	r3, r3, #900	; 0x384
   83162:	429a      	cmp	r2, r3
   83164:	d314      	bcc.n	83190 <update_heartbeat+0x84>
            ticks_heartbeat = getTicks();
   83166:	4b0c      	ldr	r3, [pc, #48]	; (83198 <update_heartbeat+0x8c>)
   83168:	4798      	blx	r3
   8316a:	4602      	mov	r2, r0
   8316c:	4b0b      	ldr	r3, [pc, #44]	; (8319c <update_heartbeat+0x90>)
   8316e:	601a      	str	r2, [r3, #0]
            ioport_set_pin_level(LED_ONBOARD, 1);
   83170:	2101      	movs	r1, #1
   83172:	206a      	movs	r0, #106	; 0x6a
   83174:	4b0a      	ldr	r3, [pc, #40]	; (831a0 <update_heartbeat+0x94>)
   83176:	4798      	blx	r3
            ioport_set_pin_level(LED_M1, 1);
   83178:	2101      	movs	r1, #1
   8317a:	2067      	movs	r0, #103	; 0x67
   8317c:	4b08      	ldr	r3, [pc, #32]	; (831a0 <update_heartbeat+0x94>)
   8317e:	4798      	blx	r3
            mts.ibit.heartbeat = 1;
   83180:	4a08      	ldr	r2, [pc, #32]	; (831a4 <update_heartbeat+0x98>)
   83182:	7813      	ldrb	r3, [r2, #0]
   83184:	f043 0301 	orr.w	r3, r3, #1
   83188:	7013      	strb	r3, [r2, #0]
            heart_state = 1;
   8318a:	4b02      	ldr	r3, [pc, #8]	; (83194 <update_heartbeat+0x88>)
   8318c:	2201      	movs	r2, #1
   8318e:	701a      	strb	r2, [r3, #0]
}
   83190:	bf00      	nop
   83192:	bd80      	pop	{r7, pc}
   83194:	20070e38 	.word	0x20070e38
   83198:	00082fd9 	.word	0x00082fd9
   8319c:	20070e48 	.word	0x20070e48
   831a0:	00082f51 	.word	0x00082f51
   831a4:	20070e30 	.word	0x20070e30

000831a8 <osc_enable>:
{
   831a8:	b580      	push	{r7, lr}
   831aa:	b082      	sub	sp, #8
   831ac:	af00      	add	r7, sp, #0
   831ae:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   831b0:	687b      	ldr	r3, [r7, #4]
   831b2:	2b07      	cmp	r3, #7
   831b4:	d831      	bhi.n	8321a <osc_enable+0x72>
   831b6:	a201      	add	r2, pc, #4	; (adr r2, 831bc <osc_enable+0x14>)
   831b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   831bc:	00083219 	.word	0x00083219
   831c0:	000831dd 	.word	0x000831dd
   831c4:	000831e5 	.word	0x000831e5
   831c8:	000831ed 	.word	0x000831ed
   831cc:	000831f5 	.word	0x000831f5
   831d0:	000831fd 	.word	0x000831fd
   831d4:	00083205 	.word	0x00083205
   831d8:	0008320f 	.word	0x0008320f
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
   831dc:	2000      	movs	r0, #0
   831de:	4b11      	ldr	r3, [pc, #68]	; (83224 <osc_enable+0x7c>)
   831e0:	4798      	blx	r3
		break;
   831e2:	e01a      	b.n	8321a <osc_enable+0x72>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
   831e4:	2001      	movs	r0, #1
   831e6:	4b0f      	ldr	r3, [pc, #60]	; (83224 <osc_enable+0x7c>)
   831e8:	4798      	blx	r3
		break;
   831ea:	e016      	b.n	8321a <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
   831ec:	2000      	movs	r0, #0
   831ee:	4b0e      	ldr	r3, [pc, #56]	; (83228 <osc_enable+0x80>)
   831f0:	4798      	blx	r3
		break;
   831f2:	e012      	b.n	8321a <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
   831f4:	2010      	movs	r0, #16
   831f6:	4b0c      	ldr	r3, [pc, #48]	; (83228 <osc_enable+0x80>)
   831f8:	4798      	blx	r3
		break;
   831fa:	e00e      	b.n	8321a <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
   831fc:	2020      	movs	r0, #32
   831fe:	4b0a      	ldr	r3, [pc, #40]	; (83228 <osc_enable+0x80>)
   83200:	4798      	blx	r3
		break;
   83202:	e00a      	b.n	8321a <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   83204:	213e      	movs	r1, #62	; 0x3e
   83206:	2000      	movs	r0, #0
   83208:	4b08      	ldr	r3, [pc, #32]	; (8322c <osc_enable+0x84>)
   8320a:	4798      	blx	r3
		break;
   8320c:	e005      	b.n	8321a <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_BYPASS,
   8320e:	213e      	movs	r1, #62	; 0x3e
   83210:	2001      	movs	r0, #1
   83212:	4b06      	ldr	r3, [pc, #24]	; (8322c <osc_enable+0x84>)
   83214:	4798      	blx	r3
		break;
   83216:	e000      	b.n	8321a <osc_enable+0x72>
		break;
   83218:	bf00      	nop
}
   8321a:	bf00      	nop
   8321c:	3708      	adds	r7, #8
   8321e:	46bd      	mov	sp, r7
   83220:	bd80      	pop	{r7, pc}
   83222:	bf00      	nop
   83224:	000837e5 	.word	0x000837e5
   83228:	00083851 	.word	0x00083851
   8322c:	000838c1 	.word	0x000838c1

00083230 <osc_is_ready>:
{
   83230:	b580      	push	{r7, lr}
   83232:	b082      	sub	sp, #8
   83234:	af00      	add	r7, sp, #0
   83236:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   83238:	687b      	ldr	r3, [r7, #4]
   8323a:	2b07      	cmp	r3, #7
   8323c:	d826      	bhi.n	8328c <osc_is_ready+0x5c>
   8323e:	a201      	add	r2, pc, #4	; (adr r2, 83244 <osc_is_ready+0x14>)
   83240:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   83244:	00083265 	.word	0x00083265
   83248:	00083269 	.word	0x00083269
   8324c:	00083269 	.word	0x00083269
   83250:	0008327b 	.word	0x0008327b
   83254:	0008327b 	.word	0x0008327b
   83258:	0008327b 	.word	0x0008327b
   8325c:	0008327b 	.word	0x0008327b
   83260:	0008327b 	.word	0x0008327b
		return 1;
   83264:	2301      	movs	r3, #1
   83266:	e012      	b.n	8328e <osc_is_ready+0x5e>
		return pmc_osc_is_ready_32kxtal();
   83268:	4b0b      	ldr	r3, [pc, #44]	; (83298 <osc_is_ready+0x68>)
   8326a:	4798      	blx	r3
   8326c:	4603      	mov	r3, r0
   8326e:	2b00      	cmp	r3, #0
   83270:	bf14      	ite	ne
   83272:	2301      	movne	r3, #1
   83274:	2300      	moveq	r3, #0
   83276:	b2db      	uxtb	r3, r3
   83278:	e009      	b.n	8328e <osc_is_ready+0x5e>
		return pmc_osc_is_ready_mainck();
   8327a:	4b08      	ldr	r3, [pc, #32]	; (8329c <osc_is_ready+0x6c>)
   8327c:	4798      	blx	r3
   8327e:	4603      	mov	r3, r0
   83280:	2b00      	cmp	r3, #0
   83282:	bf14      	ite	ne
   83284:	2301      	movne	r3, #1
   83286:	2300      	moveq	r3, #0
   83288:	b2db      	uxtb	r3, r3
   8328a:	e000      	b.n	8328e <osc_is_ready+0x5e>
	return 0;
   8328c:	2300      	movs	r3, #0
}
   8328e:	4618      	mov	r0, r3
   83290:	3708      	adds	r7, #8
   83292:	46bd      	mov	sp, r7
   83294:	bd80      	pop	{r7, pc}
   83296:	bf00      	nop
   83298:	0008381d 	.word	0x0008381d
   8329c:	00083939 	.word	0x00083939

000832a0 <osc_get_rate>:
{
   832a0:	b480      	push	{r7}
   832a2:	b083      	sub	sp, #12
   832a4:	af00      	add	r7, sp, #0
   832a6:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   832a8:	687b      	ldr	r3, [r7, #4]
   832aa:	2b07      	cmp	r3, #7
   832ac:	d825      	bhi.n	832fa <osc_get_rate+0x5a>
   832ae:	a201      	add	r2, pc, #4	; (adr r2, 832b4 <osc_get_rate+0x14>)
   832b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   832b4:	000832d5 	.word	0x000832d5
   832b8:	000832db 	.word	0x000832db
   832bc:	000832e1 	.word	0x000832e1
   832c0:	000832e7 	.word	0x000832e7
   832c4:	000832eb 	.word	0x000832eb
   832c8:	000832ef 	.word	0x000832ef
   832cc:	000832f3 	.word	0x000832f3
   832d0:	000832f7 	.word	0x000832f7
		return OSC_SLCK_32K_RC_HZ;
   832d4:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   832d8:	e010      	b.n	832fc <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
   832da:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   832de:	e00d      	b.n	832fc <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
   832e0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   832e4:	e00a      	b.n	832fc <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
   832e6:	4b08      	ldr	r3, [pc, #32]	; (83308 <osc_get_rate+0x68>)
   832e8:	e008      	b.n	832fc <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
   832ea:	4b08      	ldr	r3, [pc, #32]	; (8330c <osc_get_rate+0x6c>)
   832ec:	e006      	b.n	832fc <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
   832ee:	4b08      	ldr	r3, [pc, #32]	; (83310 <osc_get_rate+0x70>)
   832f0:	e004      	b.n	832fc <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
   832f2:	4b07      	ldr	r3, [pc, #28]	; (83310 <osc_get_rate+0x70>)
   832f4:	e002      	b.n	832fc <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
   832f6:	4b06      	ldr	r3, [pc, #24]	; (83310 <osc_get_rate+0x70>)
   832f8:	e000      	b.n	832fc <osc_get_rate+0x5c>
	return 0;
   832fa:	2300      	movs	r3, #0
}
   832fc:	4618      	mov	r0, r3
   832fe:	370c      	adds	r7, #12
   83300:	46bd      	mov	sp, r7
   83302:	bc80      	pop	{r7}
   83304:	4770      	bx	lr
   83306:	bf00      	nop
   83308:	003d0900 	.word	0x003d0900
   8330c:	007a1200 	.word	0x007a1200
   83310:	00b71b00 	.word	0x00b71b00

00083314 <osc_wait_ready>:
 * to become stable and ready to use as a clock source.
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
   83314:	b580      	push	{r7, lr}
   83316:	b082      	sub	sp, #8
   83318:	af00      	add	r7, sp, #0
   8331a:	4603      	mov	r3, r0
   8331c:	71fb      	strb	r3, [r7, #7]
	while (!osc_is_ready(id)) {
   8331e:	bf00      	nop
   83320:	79fb      	ldrb	r3, [r7, #7]
   83322:	4618      	mov	r0, r3
   83324:	4b05      	ldr	r3, [pc, #20]	; (8333c <osc_wait_ready+0x28>)
   83326:	4798      	blx	r3
   83328:	4603      	mov	r3, r0
   8332a:	f083 0301 	eor.w	r3, r3, #1
   8332e:	b2db      	uxtb	r3, r3
   83330:	2b00      	cmp	r3, #0
   83332:	d1f5      	bne.n	83320 <osc_wait_ready+0xc>
		/* Do nothing */
	}
}
   83334:	bf00      	nop
   83336:	3708      	adds	r7, #8
   83338:	46bd      	mov	sp, r7
   8333a:	bd80      	pop	{r7, pc}
   8333c:	00083231 	.word	0x00083231

00083340 <pll_config_init>:
 * \note The SAM3X PLL hardware interprets mul as mul+1. For readability the hardware mul+1
 * is hidden in this implementation. Use mul as mul effective value.
 */
static inline void pll_config_init(struct pll_config *p_cfg,
		enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)
{
   83340:	b580      	push	{r7, lr}
   83342:	b086      	sub	sp, #24
   83344:	af00      	add	r7, sp, #0
   83346:	60f8      	str	r0, [r7, #12]
   83348:	607a      	str	r2, [r7, #4]
   8334a:	603b      	str	r3, [r7, #0]
   8334c:	460b      	mov	r3, r1
   8334e:	72fb      	strb	r3, [r7, #11]
	uint32_t vco_hz;

	Assert(e_src < PLL_NR_SOURCES);

	if (ul_div == 0 && ul_mul == 0) { /* Must only be true for UTMI PLL */
   83350:	687b      	ldr	r3, [r7, #4]
   83352:	2b00      	cmp	r3, #0
   83354:	d107      	bne.n	83366 <pll_config_init+0x26>
   83356:	683b      	ldr	r3, [r7, #0]
   83358:	2b00      	cmp	r3, #0
   8335a:	d104      	bne.n	83366 <pll_config_init+0x26>
		p_cfg->ctrl = CKGR_UCKR_UPLLCOUNT(PLL_COUNT);
   8335c:	68fb      	ldr	r3, [r7, #12]
   8335e:	f44f 0270 	mov.w	r2, #15728640	; 0xf00000
   83362:	601a      	str	r2, [r3, #0]
   83364:	e019      	b.n	8339a <pll_config_init+0x5a>
	} else { /* PLLA */
		/* Calculate internal VCO frequency */
		vco_hz = osc_get_rate(e_src) / ul_div;
   83366:	7afb      	ldrb	r3, [r7, #11]
   83368:	4618      	mov	r0, r3
   8336a:	4b0e      	ldr	r3, [pc, #56]	; (833a4 <pll_config_init+0x64>)
   8336c:	4798      	blx	r3
   8336e:	4602      	mov	r2, r0
   83370:	687b      	ldr	r3, [r7, #4]
   83372:	fbb2 f3f3 	udiv	r3, r2, r3
   83376:	617b      	str	r3, [r7, #20]
		Assert(vco_hz >= PLL_INPUT_MIN_HZ);
		Assert(vco_hz <= PLL_INPUT_MAX_HZ);

		vco_hz *= ul_mul;
   83378:	697b      	ldr	r3, [r7, #20]
   8337a:	683a      	ldr	r2, [r7, #0]
   8337c:	fb02 f303 	mul.w	r3, r2, r3
   83380:	617b      	str	r3, [r7, #20]
		Assert(vco_hz >= PLL_OUTPUT_MIN_HZ);
		Assert(vco_hz <= PLL_OUTPUT_MAX_HZ);

		/* PMC hardware will automatically make it mul+1 */
		p_cfg->ctrl = CKGR_PLLAR_MULA(ul_mul - 1) | CKGR_PLLAR_DIVA(ul_div) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
   83382:	683b      	ldr	r3, [r7, #0]
   83384:	3b01      	subs	r3, #1
   83386:	041a      	lsls	r2, r3, #16
   83388:	4b07      	ldr	r3, [pc, #28]	; (833a8 <pll_config_init+0x68>)
   8338a:	4013      	ands	r3, r2
   8338c:	687a      	ldr	r2, [r7, #4]
   8338e:	b2d2      	uxtb	r2, r2
   83390:	4313      	orrs	r3, r2
   83392:	f443 527c 	orr.w	r2, r3, #16128	; 0x3f00
   83396:	68fb      	ldr	r3, [r7, #12]
   83398:	601a      	str	r2, [r3, #0]
	}
}
   8339a:	bf00      	nop
   8339c:	3718      	adds	r7, #24
   8339e:	46bd      	mov	sp, r7
   833a0:	bd80      	pop	{r7, pc}
   833a2:	bf00      	nop
   833a4:	000832a1 	.word	0x000832a1
   833a8:	07ff0000 	.word	0x07ff0000

000833ac <pll_enable>:
		PMC->CKGR_UCKR = p_cfg->ctrl;
	}
}

static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
   833ac:	b580      	push	{r7, lr}
   833ae:	b082      	sub	sp, #8
   833b0:	af00      	add	r7, sp, #0
   833b2:	6078      	str	r0, [r7, #4]
   833b4:	6039      	str	r1, [r7, #0]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
   833b6:	683b      	ldr	r3, [r7, #0]
   833b8:	2b00      	cmp	r3, #0
   833ba:	d108      	bne.n	833ce <pll_enable+0x22>
		pmc_disable_pllack(); // Always stop PLL first!
   833bc:	4b09      	ldr	r3, [pc, #36]	; (833e4 <pll_enable+0x38>)
   833be:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   833c0:	4a09      	ldr	r2, [pc, #36]	; (833e8 <pll_enable+0x3c>)
   833c2:	687b      	ldr	r3, [r7, #4]
   833c4:	681b      	ldr	r3, [r3, #0]
   833c6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   833ca:	6293      	str	r3, [r2, #40]	; 0x28
	} else {
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
	}
}
   833cc:	e005      	b.n	833da <pll_enable+0x2e>
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
   833ce:	4a06      	ldr	r2, [pc, #24]	; (833e8 <pll_enable+0x3c>)
   833d0:	687b      	ldr	r3, [r7, #4]
   833d2:	681b      	ldr	r3, [r3, #0]
   833d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   833d8:	61d3      	str	r3, [r2, #28]
}
   833da:	bf00      	nop
   833dc:	3708      	adds	r7, #8
   833de:	46bd      	mov	sp, r7
   833e0:	bd80      	pop	{r7, pc}
   833e2:	bf00      	nop
   833e4:	00083951 	.word	0x00083951
   833e8:	400e0600 	.word	0x400e0600

000833ec <pll_is_locked>:
		PMC->CKGR_UCKR &= ~CKGR_UCKR_UPLLEN;
	}
}

static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
   833ec:	b580      	push	{r7, lr}
   833ee:	b082      	sub	sp, #8
   833f0:	af00      	add	r7, sp, #0
   833f2:	6078      	str	r0, [r7, #4]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
   833f4:	687b      	ldr	r3, [r7, #4]
   833f6:	2b00      	cmp	r3, #0
   833f8:	d103      	bne.n	83402 <pll_is_locked+0x16>
		return pmc_is_locked_pllack();
   833fa:	4b05      	ldr	r3, [pc, #20]	; (83410 <pll_is_locked+0x24>)
   833fc:	4798      	blx	r3
   833fe:	4603      	mov	r3, r0
   83400:	e002      	b.n	83408 <pll_is_locked+0x1c>
	} else {
		return pmc_is_locked_upll();
   83402:	4b04      	ldr	r3, [pc, #16]	; (83414 <pll_is_locked+0x28>)
   83404:	4798      	blx	r3
   83406:	4603      	mov	r3, r0
	}
}
   83408:	4618      	mov	r0, r3
   8340a:	3708      	adds	r7, #8
   8340c:	46bd      	mov	sp, r7
   8340e:	bd80      	pop	{r7, pc}
   83410:	00083969 	.word	0x00083969
   83414:	00083981 	.word	0x00083981

00083418 <pll_enable_source>:

static inline void pll_enable_source(enum pll_source e_src)
{
   83418:	b580      	push	{r7, lr}
   8341a:	b082      	sub	sp, #8
   8341c:	af00      	add	r7, sp, #0
   8341e:	4603      	mov	r3, r0
   83420:	71fb      	strb	r3, [r7, #7]
	switch (e_src) {
   83422:	79fb      	ldrb	r3, [r7, #7]
   83424:	3b03      	subs	r3, #3
   83426:	2b04      	cmp	r3, #4
   83428:	d808      	bhi.n	8343c <pll_enable_source+0x24>
	case PLL_SRC_MAINCK_4M_RC:
	case PLL_SRC_MAINCK_8M_RC:
	case PLL_SRC_MAINCK_12M_RC:
	case PLL_SRC_MAINCK_XTAL:
	case PLL_SRC_MAINCK_BYPASS:
		osc_enable(e_src);
   8342a:	79fb      	ldrb	r3, [r7, #7]
   8342c:	4618      	mov	r0, r3
   8342e:	4b06      	ldr	r3, [pc, #24]	; (83448 <pll_enable_source+0x30>)
   83430:	4798      	blx	r3
		osc_wait_ready(e_src);
   83432:	79fb      	ldrb	r3, [r7, #7]
   83434:	4618      	mov	r0, r3
   83436:	4b05      	ldr	r3, [pc, #20]	; (8344c <pll_enable_source+0x34>)
   83438:	4798      	blx	r3
		break;
   8343a:	e000      	b.n	8343e <pll_enable_source+0x26>

	default:
		Assert(false);
		break;
   8343c:	bf00      	nop
	}
}
   8343e:	bf00      	nop
   83440:	3708      	adds	r7, #8
   83442:	46bd      	mov	sp, r7
   83444:	bd80      	pop	{r7, pc}
   83446:	bf00      	nop
   83448:	000831a9 	.word	0x000831a9
   8344c:	00083315 	.word	0x00083315

00083450 <pll_wait_for_lock>:
 *
 * \retval STATUS_OK The PLL is now locked.
 * \retval ERR_TIMEOUT Timed out waiting for PLL to become locked.
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
   83450:	b580      	push	{r7, lr}
   83452:	b082      	sub	sp, #8
   83454:	af00      	add	r7, sp, #0
   83456:	6078      	str	r0, [r7, #4]
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   83458:	bf00      	nop
   8345a:	6878      	ldr	r0, [r7, #4]
   8345c:	4b04      	ldr	r3, [pc, #16]	; (83470 <pll_wait_for_lock+0x20>)
   8345e:	4798      	blx	r3
   83460:	4603      	mov	r3, r0
   83462:	2b00      	cmp	r3, #0
   83464:	d0f9      	beq.n	8345a <pll_wait_for_lock+0xa>
		/* Do nothing */
	}

	return 0;
   83466:	2300      	movs	r3, #0
}
   83468:	4618      	mov	r0, r3
   8346a:	3708      	adds	r7, #8
   8346c:	46bd      	mov	sp, r7
   8346e:	bd80      	pop	{r7, pc}
   83470:	000833ed 	.word	0x000833ed

00083474 <sysclk_get_main_hz>:
{
   83474:	b580      	push	{r7, lr}
   83476:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
   83478:	2006      	movs	r0, #6
   8347a:	4b04      	ldr	r3, [pc, #16]	; (8348c <sysclk_get_main_hz+0x18>)
   8347c:	4798      	blx	r3
   8347e:	4602      	mov	r2, r0
   83480:	4613      	mov	r3, r2
   83482:	00db      	lsls	r3, r3, #3
   83484:	1a9b      	subs	r3, r3, r2
   83486:	005b      	lsls	r3, r3, #1
}
   83488:	4618      	mov	r0, r3
   8348a:	bd80      	pop	{r7, pc}
   8348c:	000832a1 	.word	0x000832a1

00083490 <sysclk_get_cpu_hz>:
{
   83490:	b580      	push	{r7, lr}
   83492:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
   83494:	4b02      	ldr	r3, [pc, #8]	; (834a0 <sysclk_get_cpu_hz+0x10>)
   83496:	4798      	blx	r3
   83498:	4603      	mov	r3, r0
   8349a:	085b      	lsrs	r3, r3, #1
}
   8349c:	4618      	mov	r0, r3
   8349e:	bd80      	pop	{r7, pc}
   834a0:	00083475 	.word	0x00083475

000834a4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   834a4:	b590      	push	{r4, r7, lr}
   834a6:	b083      	sub	sp, #12
   834a8:	af00      	add	r7, sp, #0
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   834aa:	4811      	ldr	r0, [pc, #68]	; (834f0 <sysclk_init+0x4c>)
   834ac:	4b11      	ldr	r3, [pc, #68]	; (834f4 <sysclk_init+0x50>)
   834ae:	4798      	blx	r3
		pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
	}

#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
   834b0:	2006      	movs	r0, #6
   834b2:	4b11      	ldr	r3, [pc, #68]	; (834f8 <sysclk_init+0x54>)
   834b4:	4798      	blx	r3
		pll_config_defaults(&pllcfg, 0);
   834b6:	1d38      	adds	r0, r7, #4
   834b8:	230e      	movs	r3, #14
   834ba:	2201      	movs	r2, #1
   834bc:	2106      	movs	r1, #6
   834be:	4c0f      	ldr	r4, [pc, #60]	; (834fc <sysclk_init+0x58>)
   834c0:	47a0      	blx	r4
		pll_enable(&pllcfg, 0);
   834c2:	1d3b      	adds	r3, r7, #4
   834c4:	2100      	movs	r1, #0
   834c6:	4618      	mov	r0, r3
   834c8:	4b0d      	ldr	r3, [pc, #52]	; (83500 <sysclk_init+0x5c>)
   834ca:	4798      	blx	r3
		pll_wait_for_lock(0);
   834cc:	2000      	movs	r0, #0
   834ce:	4b0d      	ldr	r3, [pc, #52]	; (83504 <sysclk_init+0x60>)
   834d0:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   834d2:	2010      	movs	r0, #16
   834d4:	4b0c      	ldr	r3, [pc, #48]	; (83508 <sysclk_init+0x64>)
   834d6:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   834d8:	4b0c      	ldr	r3, [pc, #48]	; (8350c <sysclk_init+0x68>)
   834da:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   834dc:	4b0c      	ldr	r3, [pc, #48]	; (83510 <sysclk_init+0x6c>)
   834de:	4798      	blx	r3
   834e0:	4603      	mov	r3, r0
   834e2:	4618      	mov	r0, r3
   834e4:	4b03      	ldr	r3, [pc, #12]	; (834f4 <sysclk_init+0x50>)
   834e6:	4798      	blx	r3

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
   834e8:	bf00      	nop
   834ea:	370c      	adds	r7, #12
   834ec:	46bd      	mov	sp, r7
   834ee:	bd90      	pop	{r4, r7, pc}
   834f0:	0501bd00 	.word	0x0501bd00
   834f4:	200700d1 	.word	0x200700d1
   834f8:	00083419 	.word	0x00083419
   834fc:	00083341 	.word	0x00083341
   83500:	000833ad 	.word	0x000833ad
   83504:	00083451 	.word	0x00083451
   83508:	00083765 	.word	0x00083765
   8350c:	000840f5 	.word	0x000840f5
   83510:	00083491 	.word	0x00083491

00083514 <dmac_init>:
   83514:	b580      	push	{r7, lr}
   83516:	b082      	sub	sp, #8
   83518:	af00      	add	r7, sp, #0
   8351a:	6078      	str	r0, [r7, #4]
   8351c:	6878      	ldr	r0, [r7, #4]
   8351e:	4b03      	ldr	r3, [pc, #12]	; (8352c <dmac_init+0x18>)
   83520:	4798      	blx	r3
   83522:	bf00      	nop
   83524:	3708      	adds	r7, #8
   83526:	46bd      	mov	sp, r7
   83528:	bd80      	pop	{r7, pc}
   8352a:	bf00      	nop
   8352c:	0008356f 	.word	0x0008356f

00083530 <dmac_set_priority_mode>:
   83530:	b480      	push	{r7}
   83532:	b083      	sub	sp, #12
   83534:	af00      	add	r7, sp, #0
   83536:	6078      	str	r0, [r7, #4]
   83538:	460b      	mov	r3, r1
   8353a:	70fb      	strb	r3, [r7, #3]
   8353c:	687b      	ldr	r3, [r7, #4]
   8353e:	681b      	ldr	r3, [r3, #0]
   83540:	f023 0210 	bic.w	r2, r3, #16
   83544:	78fb      	ldrb	r3, [r7, #3]
   83546:	431a      	orrs	r2, r3
   83548:	687b      	ldr	r3, [r7, #4]
   8354a:	601a      	str	r2, [r3, #0]
   8354c:	bf00      	nop
   8354e:	370c      	adds	r7, #12
   83550:	46bd      	mov	sp, r7
   83552:	bc80      	pop	{r7}
   83554:	4770      	bx	lr

00083556 <dmac_enable>:
   83556:	b480      	push	{r7}
   83558:	b083      	sub	sp, #12
   8355a:	af00      	add	r7, sp, #0
   8355c:	6078      	str	r0, [r7, #4]
   8355e:	687b      	ldr	r3, [r7, #4]
   83560:	2201      	movs	r2, #1
   83562:	605a      	str	r2, [r3, #4]
   83564:	bf00      	nop
   83566:	370c      	adds	r7, #12
   83568:	46bd      	mov	sp, r7
   8356a:	bc80      	pop	{r7}
   8356c:	4770      	bx	lr

0008356e <dmac_disable>:
   8356e:	b480      	push	{r7}
   83570:	b083      	sub	sp, #12
   83572:	af00      	add	r7, sp, #0
   83574:	6078      	str	r0, [r7, #4]
   83576:	687b      	ldr	r3, [r7, #4]
   83578:	685b      	ldr	r3, [r3, #4]
   8357a:	f023 0201 	bic.w	r2, r3, #1
   8357e:	687b      	ldr	r3, [r7, #4]
   83580:	605a      	str	r2, [r3, #4]
   83582:	bf00      	nop
   83584:	370c      	adds	r7, #12
   83586:	46bd      	mov	sp, r7
   83588:	bc80      	pop	{r7}
   8358a:	4770      	bx	lr

0008358c <dmac_enable_interrupt>:
   8358c:	b480      	push	{r7}
   8358e:	b083      	sub	sp, #12
   83590:	af00      	add	r7, sp, #0
   83592:	6078      	str	r0, [r7, #4]
   83594:	6039      	str	r1, [r7, #0]
   83596:	687b      	ldr	r3, [r7, #4]
   83598:	683a      	ldr	r2, [r7, #0]
   8359a:	619a      	str	r2, [r3, #24]
   8359c:	bf00      	nop
   8359e:	370c      	adds	r7, #12
   835a0:	46bd      	mov	sp, r7
   835a2:	bc80      	pop	{r7}
   835a4:	4770      	bx	lr

000835a6 <dmac_get_status>:
   835a6:	b480      	push	{r7}
   835a8:	b083      	sub	sp, #12
   835aa:	af00      	add	r7, sp, #0
   835ac:	6078      	str	r0, [r7, #4]
   835ae:	687b      	ldr	r3, [r7, #4]
   835b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   835b2:	4618      	mov	r0, r3
   835b4:	370c      	adds	r7, #12
   835b6:	46bd      	mov	sp, r7
   835b8:	bc80      	pop	{r7}
   835ba:	4770      	bx	lr

000835bc <dmac_channel_enable>:
   835bc:	b480      	push	{r7}
   835be:	b083      	sub	sp, #12
   835c0:	af00      	add	r7, sp, #0
   835c2:	6078      	str	r0, [r7, #4]
   835c4:	6039      	str	r1, [r7, #0]
   835c6:	2201      	movs	r2, #1
   835c8:	683b      	ldr	r3, [r7, #0]
   835ca:	409a      	lsls	r2, r3
   835cc:	687b      	ldr	r3, [r7, #4]
   835ce:	629a      	str	r2, [r3, #40]	; 0x28
   835d0:	bf00      	nop
   835d2:	370c      	adds	r7, #12
   835d4:	46bd      	mov	sp, r7
   835d6:	bc80      	pop	{r7}
   835d8:	4770      	bx	lr

000835da <dmac_channel_disable>:
   835da:	b480      	push	{r7}
   835dc:	b083      	sub	sp, #12
   835de:	af00      	add	r7, sp, #0
   835e0:	6078      	str	r0, [r7, #4]
   835e2:	6039      	str	r1, [r7, #0]
   835e4:	2201      	movs	r2, #1
   835e6:	683b      	ldr	r3, [r7, #0]
   835e8:	409a      	lsls	r2, r3
   835ea:	687b      	ldr	r3, [r7, #4]
   835ec:	62da      	str	r2, [r3, #44]	; 0x2c
   835ee:	bf00      	nop
   835f0:	370c      	adds	r7, #12
   835f2:	46bd      	mov	sp, r7
   835f4:	bc80      	pop	{r7}
   835f6:	4770      	bx	lr

000835f8 <dmac_channel_set_source_addr>:
   835f8:	b480      	push	{r7}
   835fa:	b085      	sub	sp, #20
   835fc:	af00      	add	r7, sp, #0
   835fe:	60f8      	str	r0, [r7, #12]
   83600:	60b9      	str	r1, [r7, #8]
   83602:	607a      	str	r2, [r7, #4]
   83604:	68f9      	ldr	r1, [r7, #12]
   83606:	68ba      	ldr	r2, [r7, #8]
   83608:	4613      	mov	r3, r2
   8360a:	009b      	lsls	r3, r3, #2
   8360c:	4413      	add	r3, r2
   8360e:	00db      	lsls	r3, r3, #3
   83610:	440b      	add	r3, r1
   83612:	333c      	adds	r3, #60	; 0x3c
   83614:	687a      	ldr	r2, [r7, #4]
   83616:	601a      	str	r2, [r3, #0]
   83618:	bf00      	nop
   8361a:	3714      	adds	r7, #20
   8361c:	46bd      	mov	sp, r7
   8361e:	bc80      	pop	{r7}
   83620:	4770      	bx	lr

00083622 <dmac_channel_set_destination_addr>:
   83622:	b480      	push	{r7}
   83624:	b085      	sub	sp, #20
   83626:	af00      	add	r7, sp, #0
   83628:	60f8      	str	r0, [r7, #12]
   8362a:	60b9      	str	r1, [r7, #8]
   8362c:	607a      	str	r2, [r7, #4]
   8362e:	68f9      	ldr	r1, [r7, #12]
   83630:	68ba      	ldr	r2, [r7, #8]
   83632:	4613      	mov	r3, r2
   83634:	009b      	lsls	r3, r3, #2
   83636:	4413      	add	r3, r2
   83638:	00db      	lsls	r3, r3, #3
   8363a:	440b      	add	r3, r1
   8363c:	3340      	adds	r3, #64	; 0x40
   8363e:	687a      	ldr	r2, [r7, #4]
   83640:	601a      	str	r2, [r3, #0]
   83642:	bf00      	nop
   83644:	3714      	adds	r7, #20
   83646:	46bd      	mov	sp, r7
   83648:	bc80      	pop	{r7}
   8364a:	4770      	bx	lr

0008364c <dmac_channel_set_descriptor_addr>:
   8364c:	b480      	push	{r7}
   8364e:	b085      	sub	sp, #20
   83650:	af00      	add	r7, sp, #0
   83652:	60f8      	str	r0, [r7, #12]
   83654:	60b9      	str	r1, [r7, #8]
   83656:	607a      	str	r2, [r7, #4]
   83658:	68f9      	ldr	r1, [r7, #12]
   8365a:	68ba      	ldr	r2, [r7, #8]
   8365c:	4613      	mov	r3, r2
   8365e:	009b      	lsls	r3, r3, #2
   83660:	4413      	add	r3, r2
   83662:	00db      	lsls	r3, r3, #3
   83664:	440b      	add	r3, r1
   83666:	3344      	adds	r3, #68	; 0x44
   83668:	687a      	ldr	r2, [r7, #4]
   8366a:	601a      	str	r2, [r3, #0]
   8366c:	bf00      	nop
   8366e:	3714      	adds	r7, #20
   83670:	46bd      	mov	sp, r7
   83672:	bc80      	pop	{r7}
   83674:	4770      	bx	lr

00083676 <dmac_channel_set_ctrlA>:
   83676:	b480      	push	{r7}
   83678:	b085      	sub	sp, #20
   8367a:	af00      	add	r7, sp, #0
   8367c:	60f8      	str	r0, [r7, #12]
   8367e:	60b9      	str	r1, [r7, #8]
   83680:	607a      	str	r2, [r7, #4]
   83682:	68f9      	ldr	r1, [r7, #12]
   83684:	68ba      	ldr	r2, [r7, #8]
   83686:	4613      	mov	r3, r2
   83688:	009b      	lsls	r3, r3, #2
   8368a:	4413      	add	r3, r2
   8368c:	00db      	lsls	r3, r3, #3
   8368e:	440b      	add	r3, r1
   83690:	3348      	adds	r3, #72	; 0x48
   83692:	687a      	ldr	r2, [r7, #4]
   83694:	601a      	str	r2, [r3, #0]
   83696:	bf00      	nop
   83698:	3714      	adds	r7, #20
   8369a:	46bd      	mov	sp, r7
   8369c:	bc80      	pop	{r7}
   8369e:	4770      	bx	lr

000836a0 <dmac_channel_set_ctrlB>:
   836a0:	b480      	push	{r7}
   836a2:	b085      	sub	sp, #20
   836a4:	af00      	add	r7, sp, #0
   836a6:	60f8      	str	r0, [r7, #12]
   836a8:	60b9      	str	r1, [r7, #8]
   836aa:	607a      	str	r2, [r7, #4]
   836ac:	68f9      	ldr	r1, [r7, #12]
   836ae:	68ba      	ldr	r2, [r7, #8]
   836b0:	4613      	mov	r3, r2
   836b2:	009b      	lsls	r3, r3, #2
   836b4:	4413      	add	r3, r2
   836b6:	00db      	lsls	r3, r3, #3
   836b8:	440b      	add	r3, r1
   836ba:	334c      	adds	r3, #76	; 0x4c
   836bc:	687a      	ldr	r2, [r7, #4]
   836be:	601a      	str	r2, [r3, #0]
   836c0:	bf00      	nop
   836c2:	3714      	adds	r7, #20
   836c4:	46bd      	mov	sp, r7
   836c6:	bc80      	pop	{r7}
   836c8:	4770      	bx	lr

000836ca <dmac_channel_set_configuration>:
   836ca:	b480      	push	{r7}
   836cc:	b085      	sub	sp, #20
   836ce:	af00      	add	r7, sp, #0
   836d0:	60f8      	str	r0, [r7, #12]
   836d2:	60b9      	str	r1, [r7, #8]
   836d4:	607a      	str	r2, [r7, #4]
   836d6:	68f9      	ldr	r1, [r7, #12]
   836d8:	68ba      	ldr	r2, [r7, #8]
   836da:	4613      	mov	r3, r2
   836dc:	009b      	lsls	r3, r3, #2
   836de:	4413      	add	r3, r2
   836e0:	00db      	lsls	r3, r3, #3
   836e2:	440b      	add	r3, r1
   836e4:	3350      	adds	r3, #80	; 0x50
   836e6:	687a      	ldr	r2, [r7, #4]
   836e8:	601a      	str	r2, [r3, #0]
   836ea:	bf00      	nop
   836ec:	3714      	adds	r7, #20
   836ee:	46bd      	mov	sp, r7
   836f0:	bc80      	pop	{r7}
   836f2:	4770      	bx	lr

000836f4 <dmac_channel_single_buf_transfer_init>:
   836f4:	b580      	push	{r7, lr}
   836f6:	b084      	sub	sp, #16
   836f8:	af00      	add	r7, sp, #0
   836fa:	60f8      	str	r0, [r7, #12]
   836fc:	60b9      	str	r1, [r7, #8]
   836fe:	607a      	str	r2, [r7, #4]
   83700:	68fb      	ldr	r3, [r7, #12]
   83702:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   83704:	687b      	ldr	r3, [r7, #4]
   83706:	681b      	ldr	r3, [r3, #0]
   83708:	461a      	mov	r2, r3
   8370a:	68b9      	ldr	r1, [r7, #8]
   8370c:	68f8      	ldr	r0, [r7, #12]
   8370e:	4b10      	ldr	r3, [pc, #64]	; (83750 <dmac_channel_single_buf_transfer_init+0x5c>)
   83710:	4798      	blx	r3
   83712:	687b      	ldr	r3, [r7, #4]
   83714:	685b      	ldr	r3, [r3, #4]
   83716:	461a      	mov	r2, r3
   83718:	68b9      	ldr	r1, [r7, #8]
   8371a:	68f8      	ldr	r0, [r7, #12]
   8371c:	4b0d      	ldr	r3, [pc, #52]	; (83754 <dmac_channel_single_buf_transfer_init+0x60>)
   8371e:	4798      	blx	r3
   83720:	2200      	movs	r2, #0
   83722:	68b9      	ldr	r1, [r7, #8]
   83724:	68f8      	ldr	r0, [r7, #12]
   83726:	4b0c      	ldr	r3, [pc, #48]	; (83758 <dmac_channel_single_buf_transfer_init+0x64>)
   83728:	4798      	blx	r3
   8372a:	687b      	ldr	r3, [r7, #4]
   8372c:	689b      	ldr	r3, [r3, #8]
   8372e:	461a      	mov	r2, r3
   83730:	68b9      	ldr	r1, [r7, #8]
   83732:	68f8      	ldr	r0, [r7, #12]
   83734:	4b09      	ldr	r3, [pc, #36]	; (8375c <dmac_channel_single_buf_transfer_init+0x68>)
   83736:	4798      	blx	r3
   83738:	687b      	ldr	r3, [r7, #4]
   8373a:	68db      	ldr	r3, [r3, #12]
   8373c:	461a      	mov	r2, r3
   8373e:	68b9      	ldr	r1, [r7, #8]
   83740:	68f8      	ldr	r0, [r7, #12]
   83742:	4b07      	ldr	r3, [pc, #28]	; (83760 <dmac_channel_single_buf_transfer_init+0x6c>)
   83744:	4798      	blx	r3
   83746:	bf00      	nop
   83748:	3710      	adds	r7, #16
   8374a:	46bd      	mov	sp, r7
   8374c:	bd80      	pop	{r7, pc}
   8374e:	bf00      	nop
   83750:	000835f9 	.word	0x000835f9
   83754:	00083623 	.word	0x00083623
   83758:	0008364d 	.word	0x0008364d
   8375c:	00083677 	.word	0x00083677
   83760:	000836a1 	.word	0x000836a1

00083764 <pmc_switch_mck_to_pllack>:
   83764:	b480      	push	{r7}
   83766:	b085      	sub	sp, #20
   83768:	af00      	add	r7, sp, #0
   8376a:	6078      	str	r0, [r7, #4]
   8376c:	491c      	ldr	r1, [pc, #112]	; (837e0 <pmc_switch_mck_to_pllack+0x7c>)
   8376e:	4b1c      	ldr	r3, [pc, #112]	; (837e0 <pmc_switch_mck_to_pllack+0x7c>)
   83770:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   83772:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   83776:	687b      	ldr	r3, [r7, #4]
   83778:	4313      	orrs	r3, r2
   8377a:	630b      	str	r3, [r1, #48]	; 0x30
   8377c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   83780:	60fb      	str	r3, [r7, #12]
   83782:	e007      	b.n	83794 <pmc_switch_mck_to_pllack+0x30>
   83784:	68fb      	ldr	r3, [r7, #12]
   83786:	2b00      	cmp	r3, #0
   83788:	d101      	bne.n	8378e <pmc_switch_mck_to_pllack+0x2a>
   8378a:	2301      	movs	r3, #1
   8378c:	e023      	b.n	837d6 <pmc_switch_mck_to_pllack+0x72>
   8378e:	68fb      	ldr	r3, [r7, #12]
   83790:	3b01      	subs	r3, #1
   83792:	60fb      	str	r3, [r7, #12]
   83794:	4b12      	ldr	r3, [pc, #72]	; (837e0 <pmc_switch_mck_to_pllack+0x7c>)
   83796:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   83798:	f003 0308 	and.w	r3, r3, #8
   8379c:	2b00      	cmp	r3, #0
   8379e:	d0f1      	beq.n	83784 <pmc_switch_mck_to_pllack+0x20>
   837a0:	4a0f      	ldr	r2, [pc, #60]	; (837e0 <pmc_switch_mck_to_pllack+0x7c>)
   837a2:	4b0f      	ldr	r3, [pc, #60]	; (837e0 <pmc_switch_mck_to_pllack+0x7c>)
   837a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   837a6:	f023 0303 	bic.w	r3, r3, #3
   837aa:	f043 0302 	orr.w	r3, r3, #2
   837ae:	6313      	str	r3, [r2, #48]	; 0x30
   837b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
   837b4:	60fb      	str	r3, [r7, #12]
   837b6:	e007      	b.n	837c8 <pmc_switch_mck_to_pllack+0x64>
   837b8:	68fb      	ldr	r3, [r7, #12]
   837ba:	2b00      	cmp	r3, #0
   837bc:	d101      	bne.n	837c2 <pmc_switch_mck_to_pllack+0x5e>
   837be:	2301      	movs	r3, #1
   837c0:	e009      	b.n	837d6 <pmc_switch_mck_to_pllack+0x72>
   837c2:	68fb      	ldr	r3, [r7, #12]
   837c4:	3b01      	subs	r3, #1
   837c6:	60fb      	str	r3, [r7, #12]
   837c8:	4b05      	ldr	r3, [pc, #20]	; (837e0 <pmc_switch_mck_to_pllack+0x7c>)
   837ca:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   837cc:	f003 0308 	and.w	r3, r3, #8
   837d0:	2b00      	cmp	r3, #0
   837d2:	d0f1      	beq.n	837b8 <pmc_switch_mck_to_pllack+0x54>
   837d4:	2300      	movs	r3, #0
   837d6:	4618      	mov	r0, r3
   837d8:	3714      	adds	r7, #20
   837da:	46bd      	mov	sp, r7
   837dc:	bc80      	pop	{r7}
   837de:	4770      	bx	lr
   837e0:	400e0600 	.word	0x400e0600

000837e4 <pmc_switch_sclk_to_32kxtal>:
   837e4:	b480      	push	{r7}
   837e6:	b083      	sub	sp, #12
   837e8:	af00      	add	r7, sp, #0
   837ea:	6078      	str	r0, [r7, #4]
   837ec:	687b      	ldr	r3, [r7, #4]
   837ee:	2b01      	cmp	r3, #1
   837f0:	d107      	bne.n	83802 <pmc_switch_sclk_to_32kxtal+0x1e>
   837f2:	4a08      	ldr	r2, [pc, #32]	; (83814 <pmc_switch_sclk_to_32kxtal+0x30>)
   837f4:	4b07      	ldr	r3, [pc, #28]	; (83814 <pmc_switch_sclk_to_32kxtal+0x30>)
   837f6:	689b      	ldr	r3, [r3, #8]
   837f8:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   837fc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   83800:	6093      	str	r3, [r2, #8]
   83802:	4b04      	ldr	r3, [pc, #16]	; (83814 <pmc_switch_sclk_to_32kxtal+0x30>)
   83804:	4a04      	ldr	r2, [pc, #16]	; (83818 <pmc_switch_sclk_to_32kxtal+0x34>)
   83806:	601a      	str	r2, [r3, #0]
   83808:	bf00      	nop
   8380a:	370c      	adds	r7, #12
   8380c:	46bd      	mov	sp, r7
   8380e:	bc80      	pop	{r7}
   83810:	4770      	bx	lr
   83812:	bf00      	nop
   83814:	400e1a10 	.word	0x400e1a10
   83818:	a5000008 	.word	0xa5000008

0008381c <pmc_osc_is_ready_32kxtal>:
   8381c:	b480      	push	{r7}
   8381e:	af00      	add	r7, sp, #0
   83820:	4b09      	ldr	r3, [pc, #36]	; (83848 <pmc_osc_is_ready_32kxtal+0x2c>)
   83822:	695b      	ldr	r3, [r3, #20]
   83824:	f003 0380 	and.w	r3, r3, #128	; 0x80
   83828:	2b00      	cmp	r3, #0
   8382a:	d007      	beq.n	8383c <pmc_osc_is_ready_32kxtal+0x20>
   8382c:	4b07      	ldr	r3, [pc, #28]	; (8384c <pmc_osc_is_ready_32kxtal+0x30>)
   8382e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   83830:	f003 0380 	and.w	r3, r3, #128	; 0x80
   83834:	2b00      	cmp	r3, #0
   83836:	d001      	beq.n	8383c <pmc_osc_is_ready_32kxtal+0x20>
   83838:	2301      	movs	r3, #1
   8383a:	e000      	b.n	8383e <pmc_osc_is_ready_32kxtal+0x22>
   8383c:	2300      	movs	r3, #0
   8383e:	4618      	mov	r0, r3
   83840:	46bd      	mov	sp, r7
   83842:	bc80      	pop	{r7}
   83844:	4770      	bx	lr
   83846:	bf00      	nop
   83848:	400e1a10 	.word	0x400e1a10
   8384c:	400e0600 	.word	0x400e0600

00083850 <pmc_switch_mainck_to_fastrc>:
   83850:	b480      	push	{r7}
   83852:	b083      	sub	sp, #12
   83854:	af00      	add	r7, sp, #0
   83856:	6078      	str	r0, [r7, #4]
   83858:	4a18      	ldr	r2, [pc, #96]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   8385a:	4b18      	ldr	r3, [pc, #96]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   8385c:	6a1b      	ldr	r3, [r3, #32]
   8385e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   83862:	f043 0308 	orr.w	r3, r3, #8
   83866:	6213      	str	r3, [r2, #32]
   83868:	bf00      	nop
   8386a:	4b14      	ldr	r3, [pc, #80]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   8386c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   8386e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   83872:	2b00      	cmp	r3, #0
   83874:	d0f9      	beq.n	8386a <pmc_switch_mainck_to_fastrc+0x1a>
   83876:	4911      	ldr	r1, [pc, #68]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   83878:	4b10      	ldr	r3, [pc, #64]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   8387a:	6a1b      	ldr	r3, [r3, #32]
   8387c:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   83880:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   83884:	687a      	ldr	r2, [r7, #4]
   83886:	4313      	orrs	r3, r2
   83888:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8388c:	620b      	str	r3, [r1, #32]
   8388e:	bf00      	nop
   83890:	4b0a      	ldr	r3, [pc, #40]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   83892:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   83894:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   83898:	2b00      	cmp	r3, #0
   8389a:	d0f9      	beq.n	83890 <pmc_switch_mainck_to_fastrc+0x40>
   8389c:	4a07      	ldr	r2, [pc, #28]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   8389e:	4b07      	ldr	r3, [pc, #28]	; (838bc <pmc_switch_mainck_to_fastrc+0x6c>)
   838a0:	6a1b      	ldr	r3, [r3, #32]
   838a2:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
   838a6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   838aa:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   838ae:	6213      	str	r3, [r2, #32]
   838b0:	bf00      	nop
   838b2:	370c      	adds	r7, #12
   838b4:	46bd      	mov	sp, r7
   838b6:	bc80      	pop	{r7}
   838b8:	4770      	bx	lr
   838ba:	bf00      	nop
   838bc:	400e0600 	.word	0x400e0600

000838c0 <pmc_switch_mainck_to_xtal>:
   838c0:	b480      	push	{r7}
   838c2:	b083      	sub	sp, #12
   838c4:	af00      	add	r7, sp, #0
   838c6:	6078      	str	r0, [r7, #4]
   838c8:	6039      	str	r1, [r7, #0]
   838ca:	687b      	ldr	r3, [r7, #4]
   838cc:	2b00      	cmp	r3, #0
   838ce:	d008      	beq.n	838e2 <pmc_switch_mainck_to_xtal+0x22>
   838d0:	4916      	ldr	r1, [pc, #88]	; (8392c <pmc_switch_mainck_to_xtal+0x6c>)
   838d2:	4b16      	ldr	r3, [pc, #88]	; (8392c <pmc_switch_mainck_to_xtal+0x6c>)
   838d4:	6a1b      	ldr	r3, [r3, #32]
   838d6:	4a16      	ldr	r2, [pc, #88]	; (83930 <pmc_switch_mainck_to_xtal+0x70>)
   838d8:	401a      	ands	r2, r3
   838da:	4b16      	ldr	r3, [pc, #88]	; (83934 <pmc_switch_mainck_to_xtal+0x74>)
   838dc:	4313      	orrs	r3, r2
   838de:	620b      	str	r3, [r1, #32]
   838e0:	e01e      	b.n	83920 <pmc_switch_mainck_to_xtal+0x60>
   838e2:	4912      	ldr	r1, [pc, #72]	; (8392c <pmc_switch_mainck_to_xtal+0x6c>)
   838e4:	4b11      	ldr	r3, [pc, #68]	; (8392c <pmc_switch_mainck_to_xtal+0x6c>)
   838e6:	6a1b      	ldr	r3, [r3, #32]
   838e8:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   838ec:	f023 0303 	bic.w	r3, r3, #3
   838f0:	683a      	ldr	r2, [r7, #0]
   838f2:	0212      	lsls	r2, r2, #8
   838f4:	b292      	uxth	r2, r2
   838f6:	4313      	orrs	r3, r2
   838f8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   838fc:	f043 0301 	orr.w	r3, r3, #1
   83900:	620b      	str	r3, [r1, #32]
   83902:	bf00      	nop
   83904:	4b09      	ldr	r3, [pc, #36]	; (8392c <pmc_switch_mainck_to_xtal+0x6c>)
   83906:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   83908:	f003 0301 	and.w	r3, r3, #1
   8390c:	2b00      	cmp	r3, #0
   8390e:	d0f9      	beq.n	83904 <pmc_switch_mainck_to_xtal+0x44>
   83910:	4a06      	ldr	r2, [pc, #24]	; (8392c <pmc_switch_mainck_to_xtal+0x6c>)
   83912:	4b06      	ldr	r3, [pc, #24]	; (8392c <pmc_switch_mainck_to_xtal+0x6c>)
   83914:	6a1b      	ldr	r3, [r3, #32]
   83916:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   8391a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8391e:	6213      	str	r3, [r2, #32]
   83920:	bf00      	nop
   83922:	370c      	adds	r7, #12
   83924:	46bd      	mov	sp, r7
   83926:	bc80      	pop	{r7}
   83928:	4770      	bx	lr
   8392a:	bf00      	nop
   8392c:	400e0600 	.word	0x400e0600
   83930:	fec8fffc 	.word	0xfec8fffc
   83934:	01370002 	.word	0x01370002

00083938 <pmc_osc_is_ready_mainck>:
   83938:	b480      	push	{r7}
   8393a:	af00      	add	r7, sp, #0
   8393c:	4b03      	ldr	r3, [pc, #12]	; (8394c <pmc_osc_is_ready_mainck+0x14>)
   8393e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   83940:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
   83944:	4618      	mov	r0, r3
   83946:	46bd      	mov	sp, r7
   83948:	bc80      	pop	{r7}
   8394a:	4770      	bx	lr
   8394c:	400e0600 	.word	0x400e0600

00083950 <pmc_disable_pllack>:
   83950:	b480      	push	{r7}
   83952:	af00      	add	r7, sp, #0
   83954:	4b03      	ldr	r3, [pc, #12]	; (83964 <pmc_disable_pllack+0x14>)
   83956:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   8395a:	629a      	str	r2, [r3, #40]	; 0x28
   8395c:	bf00      	nop
   8395e:	46bd      	mov	sp, r7
   83960:	bc80      	pop	{r7}
   83962:	4770      	bx	lr
   83964:	400e0600 	.word	0x400e0600

00083968 <pmc_is_locked_pllack>:
   83968:	b480      	push	{r7}
   8396a:	af00      	add	r7, sp, #0
   8396c:	4b03      	ldr	r3, [pc, #12]	; (8397c <pmc_is_locked_pllack+0x14>)
   8396e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   83970:	f003 0302 	and.w	r3, r3, #2
   83974:	4618      	mov	r0, r3
   83976:	46bd      	mov	sp, r7
   83978:	bc80      	pop	{r7}
   8397a:	4770      	bx	lr
   8397c:	400e0600 	.word	0x400e0600

00083980 <pmc_is_locked_upll>:
   83980:	b480      	push	{r7}
   83982:	af00      	add	r7, sp, #0
   83984:	4b03      	ldr	r3, [pc, #12]	; (83994 <pmc_is_locked_upll+0x14>)
   83986:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   83988:	f003 0340 	and.w	r3, r3, #64	; 0x40
   8398c:	4618      	mov	r0, r3
   8398e:	46bd      	mov	sp, r7
   83990:	bc80      	pop	{r7}
   83992:	4770      	bx	lr
   83994:	400e0600 	.word	0x400e0600

00083998 <pmc_enable_periph_clk>:
   83998:	b480      	push	{r7}
   8399a:	b083      	sub	sp, #12
   8399c:	af00      	add	r7, sp, #0
   8399e:	6078      	str	r0, [r7, #4]
   839a0:	687b      	ldr	r3, [r7, #4]
   839a2:	2b2c      	cmp	r3, #44	; 0x2c
   839a4:	d901      	bls.n	839aa <pmc_enable_periph_clk+0x12>
   839a6:	2301      	movs	r3, #1
   839a8:	e02f      	b.n	83a0a <pmc_enable_periph_clk+0x72>
   839aa:	687b      	ldr	r3, [r7, #4]
   839ac:	2b1f      	cmp	r3, #31
   839ae:	d813      	bhi.n	839d8 <pmc_enable_periph_clk+0x40>
   839b0:	4b18      	ldr	r3, [pc, #96]	; (83a14 <pmc_enable_periph_clk+0x7c>)
   839b2:	699a      	ldr	r2, [r3, #24]
   839b4:	2101      	movs	r1, #1
   839b6:	687b      	ldr	r3, [r7, #4]
   839b8:	fa01 f303 	lsl.w	r3, r1, r3
   839bc:	401a      	ands	r2, r3
   839be:	2101      	movs	r1, #1
   839c0:	687b      	ldr	r3, [r7, #4]
   839c2:	fa01 f303 	lsl.w	r3, r1, r3
   839c6:	429a      	cmp	r2, r3
   839c8:	d01e      	beq.n	83a08 <pmc_enable_periph_clk+0x70>
   839ca:	4a12      	ldr	r2, [pc, #72]	; (83a14 <pmc_enable_periph_clk+0x7c>)
   839cc:	2101      	movs	r1, #1
   839ce:	687b      	ldr	r3, [r7, #4]
   839d0:	fa01 f303 	lsl.w	r3, r1, r3
   839d4:	6113      	str	r3, [r2, #16]
   839d6:	e017      	b.n	83a08 <pmc_enable_periph_clk+0x70>
   839d8:	687b      	ldr	r3, [r7, #4]
   839da:	3b20      	subs	r3, #32
   839dc:	607b      	str	r3, [r7, #4]
   839de:	4b0d      	ldr	r3, [pc, #52]	; (83a14 <pmc_enable_periph_clk+0x7c>)
   839e0:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   839e4:	2101      	movs	r1, #1
   839e6:	687b      	ldr	r3, [r7, #4]
   839e8:	fa01 f303 	lsl.w	r3, r1, r3
   839ec:	401a      	ands	r2, r3
   839ee:	2101      	movs	r1, #1
   839f0:	687b      	ldr	r3, [r7, #4]
   839f2:	fa01 f303 	lsl.w	r3, r1, r3
   839f6:	429a      	cmp	r2, r3
   839f8:	d006      	beq.n	83a08 <pmc_enable_periph_clk+0x70>
   839fa:	4a06      	ldr	r2, [pc, #24]	; (83a14 <pmc_enable_periph_clk+0x7c>)
   839fc:	2101      	movs	r1, #1
   839fe:	687b      	ldr	r3, [r7, #4]
   83a00:	fa01 f303 	lsl.w	r3, r1, r3
   83a04:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
   83a08:	2300      	movs	r3, #0
   83a0a:	4618      	mov	r0, r3
   83a0c:	370c      	adds	r7, #12
   83a0e:	46bd      	mov	sp, r7
   83a10:	bc80      	pop	{r7}
   83a12:	4770      	bx	lr
   83a14:	400e0600 	.word	0x400e0600

00083a18 <osc_get_rate>:
{
   83a18:	b480      	push	{r7}
   83a1a:	b083      	sub	sp, #12
   83a1c:	af00      	add	r7, sp, #0
   83a1e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   83a20:	687b      	ldr	r3, [r7, #4]
   83a22:	2b07      	cmp	r3, #7
   83a24:	d825      	bhi.n	83a72 <osc_get_rate+0x5a>
   83a26:	a201      	add	r2, pc, #4	; (adr r2, 83a2c <osc_get_rate+0x14>)
   83a28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   83a2c:	00083a4d 	.word	0x00083a4d
   83a30:	00083a53 	.word	0x00083a53
   83a34:	00083a59 	.word	0x00083a59
   83a38:	00083a5f 	.word	0x00083a5f
   83a3c:	00083a63 	.word	0x00083a63
   83a40:	00083a67 	.word	0x00083a67
   83a44:	00083a6b 	.word	0x00083a6b
   83a48:	00083a6f 	.word	0x00083a6f
		return OSC_SLCK_32K_RC_HZ;
   83a4c:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   83a50:	e010      	b.n	83a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
   83a52:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   83a56:	e00d      	b.n	83a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
   83a58:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   83a5c:	e00a      	b.n	83a74 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
   83a5e:	4b08      	ldr	r3, [pc, #32]	; (83a80 <osc_get_rate+0x68>)
   83a60:	e008      	b.n	83a74 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
   83a62:	4b08      	ldr	r3, [pc, #32]	; (83a84 <osc_get_rate+0x6c>)
   83a64:	e006      	b.n	83a74 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
   83a66:	4b08      	ldr	r3, [pc, #32]	; (83a88 <osc_get_rate+0x70>)
   83a68:	e004      	b.n	83a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
   83a6a:	4b07      	ldr	r3, [pc, #28]	; (83a88 <osc_get_rate+0x70>)
   83a6c:	e002      	b.n	83a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
   83a6e:	4b06      	ldr	r3, [pc, #24]	; (83a88 <osc_get_rate+0x70>)
   83a70:	e000      	b.n	83a74 <osc_get_rate+0x5c>
	return 0;
   83a72:	2300      	movs	r3, #0
}
   83a74:	4618      	mov	r0, r3
   83a76:	370c      	adds	r7, #12
   83a78:	46bd      	mov	sp, r7
   83a7a:	bc80      	pop	{r7}
   83a7c:	4770      	bx	lr
   83a7e:	bf00      	nop
   83a80:	003d0900 	.word	0x003d0900
   83a84:	007a1200 	.word	0x007a1200
   83a88:	00b71b00 	.word	0x00b71b00

00083a8c <sysclk_get_main_hz>:
{
   83a8c:	b580      	push	{r7, lr}
   83a8e:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
   83a90:	2006      	movs	r0, #6
   83a92:	4b04      	ldr	r3, [pc, #16]	; (83aa4 <sysclk_get_main_hz+0x18>)
   83a94:	4798      	blx	r3
   83a96:	4602      	mov	r2, r0
   83a98:	4613      	mov	r3, r2
   83a9a:	00db      	lsls	r3, r3, #3
   83a9c:	1a9b      	subs	r3, r3, r2
   83a9e:	005b      	lsls	r3, r3, #1
}
   83aa0:	4618      	mov	r0, r3
   83aa2:	bd80      	pop	{r7, pc}
   83aa4:	00083a19 	.word	0x00083a19

00083aa8 <sysclk_get_cpu_hz>:
{
   83aa8:	b580      	push	{r7, lr}
   83aaa:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
   83aac:	4b02      	ldr	r3, [pc, #8]	; (83ab8 <sysclk_get_cpu_hz+0x10>)
   83aae:	4798      	blx	r3
   83ab0:	4603      	mov	r3, r0
   83ab2:	085b      	lsrs	r3, r3, #1
}
   83ab4:	4618      	mov	r0, r3
   83ab6:	bd80      	pop	{r7, pc}
   83ab8:	00083a8d 	.word	0x00083a8d

00083abc <sysclk_enable_peripheral_clock>:
{
   83abc:	b580      	push	{r7, lr}
   83abe:	b082      	sub	sp, #8
   83ac0:	af00      	add	r7, sp, #0
   83ac2:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   83ac4:	6878      	ldr	r0, [r7, #4]
   83ac6:	4b03      	ldr	r3, [pc, #12]	; (83ad4 <sysclk_enable_peripheral_clock+0x18>)
   83ac8:	4798      	blx	r3
}
   83aca:	bf00      	nop
   83acc:	3708      	adds	r7, #8
   83ace:	46bd      	mov	sp, r7
   83ad0:	bd80      	pop	{r7, pc}
   83ad2:	bf00      	nop
   83ad4:	00083999 	.word	0x00083999

00083ad8 <ioport_init>:
{
   83ad8:	b580      	push	{r7, lr}
   83ada:	af00      	add	r7, sp, #0
	sysclk_enable_peripheral_clock(ID_PIOA);
   83adc:	200b      	movs	r0, #11
   83ade:	4b06      	ldr	r3, [pc, #24]	; (83af8 <ioport_init+0x20>)
   83ae0:	4798      	blx	r3
	sysclk_enable_peripheral_clock(ID_PIOB);
   83ae2:	200c      	movs	r0, #12
   83ae4:	4b04      	ldr	r3, [pc, #16]	; (83af8 <ioport_init+0x20>)
   83ae6:	4798      	blx	r3
	sysclk_enable_peripheral_clock(ID_PIOC);
   83ae8:	200d      	movs	r0, #13
   83aea:	4b03      	ldr	r3, [pc, #12]	; (83af8 <ioport_init+0x20>)
   83aec:	4798      	blx	r3
	sysclk_enable_peripheral_clock(ID_PIOD);
   83aee:	200e      	movs	r0, #14
   83af0:	4b01      	ldr	r3, [pc, #4]	; (83af8 <ioport_init+0x20>)
   83af2:	4798      	blx	r3
}
   83af4:	bf00      	nop
   83af6:	bd80      	pop	{r7, pc}
   83af8:	00083abd 	.word	0x00083abd

00083afc <ioport_disable_pin>:
{
   83afc:	b480      	push	{r7}
   83afe:	b089      	sub	sp, #36	; 0x24
   83b00:	af00      	add	r7, sp, #0
   83b02:	6078      	str	r0, [r7, #4]
   83b04:	687b      	ldr	r3, [r7, #4]
   83b06:	61fb      	str	r3, [r7, #28]
   83b08:	69fb      	ldr	r3, [r7, #28]
   83b0a:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   83b0c:	69bb      	ldr	r3, [r7, #24]
   83b0e:	095a      	lsrs	r2, r3, #5
   83b10:	69fb      	ldr	r3, [r7, #28]
   83b12:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   83b14:	697b      	ldr	r3, [r7, #20]
   83b16:	f003 031f 	and.w	r3, r3, #31
   83b1a:	2101      	movs	r1, #1
   83b1c:	fa01 f303 	lsl.w	r3, r1, r3
   83b20:	613a      	str	r2, [r7, #16]
   83b22:	60fb      	str	r3, [r7, #12]
   83b24:	693b      	ldr	r3, [r7, #16]
   83b26:	60bb      	str	r3, [r7, #8]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   83b28:	68bb      	ldr	r3, [r7, #8]
   83b2a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   83b2e:	f203 7307 	addw	r3, r3, #1799	; 0x707
   83b32:	025b      	lsls	r3, r3, #9
   83b34:	461a      	mov	r2, r3
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
   83b36:	68fb      	ldr	r3, [r7, #12]
   83b38:	6053      	str	r3, [r2, #4]
}
   83b3a:	bf00      	nop
   83b3c:	3724      	adds	r7, #36	; 0x24
   83b3e:	46bd      	mov	sp, r7
   83b40:	bc80      	pop	{r7}
   83b42:	4770      	bx	lr

00083b44 <ioport_set_pin_mode>:
{
   83b44:	b480      	push	{r7}
   83b46:	b08d      	sub	sp, #52	; 0x34
   83b48:	af00      	add	r7, sp, #0
   83b4a:	6078      	str	r0, [r7, #4]
   83b4c:	6039      	str	r1, [r7, #0]
   83b4e:	687b      	ldr	r3, [r7, #4]
   83b50:	62fb      	str	r3, [r7, #44]	; 0x2c
   83b52:	683b      	ldr	r3, [r7, #0]
   83b54:	62bb      	str	r3, [r7, #40]	; 0x28
   83b56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   83b58:	627b      	str	r3, [r7, #36]	; 0x24
	return pin >> 5;
   83b5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   83b5c:	095a      	lsrs	r2, r3, #5
   83b5e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   83b60:	623b      	str	r3, [r7, #32]
	return 1U << (pin & 0x1F);
   83b62:	6a3b      	ldr	r3, [r7, #32]
   83b64:	f003 031f 	and.w	r3, r3, #31
   83b68:	2101      	movs	r1, #1
   83b6a:	fa01 f303 	lsl.w	r3, r1, r3
   83b6e:	61fa      	str	r2, [r7, #28]
   83b70:	61bb      	str	r3, [r7, #24]
   83b72:	6abb      	ldr	r3, [r7, #40]	; 0x28
   83b74:	617b      	str	r3, [r7, #20]
   83b76:	69fb      	ldr	r3, [r7, #28]
   83b78:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   83b7a:	693b      	ldr	r3, [r7, #16]
   83b7c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   83b80:	f203 7307 	addw	r3, r3, #1799	; 0x707
   83b84:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_port_to_base(port);
   83b86:	60fb      	str	r3, [r7, #12]
	if (mode & IOPORT_MODE_PULLUP) {
   83b88:	697b      	ldr	r3, [r7, #20]
   83b8a:	f003 0308 	and.w	r3, r3, #8
   83b8e:	2b00      	cmp	r3, #0
   83b90:	d003      	beq.n	83b9a <ioport_set_pin_mode+0x56>
		base->PIO_PUER = mask;
   83b92:	68fb      	ldr	r3, [r7, #12]
   83b94:	69ba      	ldr	r2, [r7, #24]
   83b96:	665a      	str	r2, [r3, #100]	; 0x64
   83b98:	e002      	b.n	83ba0 <ioport_set_pin_mode+0x5c>
		base->PIO_PUDR = mask;
   83b9a:	68fb      	ldr	r3, [r7, #12]
   83b9c:	69ba      	ldr	r2, [r7, #24]
   83b9e:	661a      	str	r2, [r3, #96]	; 0x60
	if (mode & IOPORT_MODE_OPEN_DRAIN) {
   83ba0:	697b      	ldr	r3, [r7, #20]
   83ba2:	f003 0320 	and.w	r3, r3, #32
   83ba6:	2b00      	cmp	r3, #0
   83ba8:	d003      	beq.n	83bb2 <ioport_set_pin_mode+0x6e>
		base->PIO_MDER = mask;
   83baa:	68fb      	ldr	r3, [r7, #12]
   83bac:	69ba      	ldr	r2, [r7, #24]
   83bae:	651a      	str	r2, [r3, #80]	; 0x50
   83bb0:	e002      	b.n	83bb8 <ioport_set_pin_mode+0x74>
		base->PIO_MDDR = mask;
   83bb2:	68fb      	ldr	r3, [r7, #12]
   83bb4:	69ba      	ldr	r2, [r7, #24]
   83bb6:	655a      	str	r2, [r3, #84]	; 0x54
	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
   83bb8:	697b      	ldr	r3, [r7, #20]
   83bba:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   83bbe:	2b00      	cmp	r3, #0
   83bc0:	d003      	beq.n	83bca <ioport_set_pin_mode+0x86>
		base->PIO_IFER = mask;
   83bc2:	68fb      	ldr	r3, [r7, #12]
   83bc4:	69ba      	ldr	r2, [r7, #24]
   83bc6:	621a      	str	r2, [r3, #32]
   83bc8:	e002      	b.n	83bd0 <ioport_set_pin_mode+0x8c>
		base->PIO_IFDR = mask;
   83bca:	68fb      	ldr	r3, [r7, #12]
   83bcc:	69ba      	ldr	r2, [r7, #24]
   83bce:	625a      	str	r2, [r3, #36]	; 0x24
	if (mode & IOPORT_MODE_DEBOUNCE) {
   83bd0:	697b      	ldr	r3, [r7, #20]
   83bd2:	f003 0380 	and.w	r3, r3, #128	; 0x80
   83bd6:	2b00      	cmp	r3, #0
   83bd8:	d004      	beq.n	83be4 <ioport_set_pin_mode+0xa0>
		base->PIO_DIFSR = mask;
   83bda:	68fb      	ldr	r3, [r7, #12]
   83bdc:	69ba      	ldr	r2, [r7, #24]
   83bde:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
   83be2:	e003      	b.n	83bec <ioport_set_pin_mode+0xa8>
		base->PIO_SCIFSR = mask;
   83be4:	68fb      	ldr	r3, [r7, #12]
   83be6:	69ba      	ldr	r2, [r7, #24]
   83be8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	if (mode & IOPORT_MODE_MUX_BIT0) {
   83bec:	697b      	ldr	r3, [r7, #20]
   83bee:	f003 0301 	and.w	r3, r3, #1
   83bf2:	2b00      	cmp	r3, #0
   83bf4:	d006      	beq.n	83c04 <ioport_set_pin_mode+0xc0>
		base->PIO_ABSR |= mask;
   83bf6:	68fb      	ldr	r3, [r7, #12]
   83bf8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   83bfa:	69bb      	ldr	r3, [r7, #24]
   83bfc:	431a      	orrs	r2, r3
   83bfe:	68fb      	ldr	r3, [r7, #12]
   83c00:	671a      	str	r2, [r3, #112]	; 0x70
}
   83c02:	e006      	b.n	83c12 <ioport_set_pin_mode+0xce>
		base->PIO_ABSR &= ~mask;
   83c04:	68fb      	ldr	r3, [r7, #12]
   83c06:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   83c08:	69bb      	ldr	r3, [r7, #24]
   83c0a:	43db      	mvns	r3, r3
   83c0c:	401a      	ands	r2, r3
   83c0e:	68fb      	ldr	r3, [r7, #12]
   83c10:	671a      	str	r2, [r3, #112]	; 0x70
   83c12:	bf00      	nop
   83c14:	3734      	adds	r7, #52	; 0x34
   83c16:	46bd      	mov	sp, r7
   83c18:	bc80      	pop	{r7}
   83c1a:	4770      	bx	lr

00083c1c <ioport_set_pin_dir>:
{
   83c1c:	b480      	push	{r7}
   83c1e:	b08d      	sub	sp, #52	; 0x34
   83c20:	af00      	add	r7, sp, #0
   83c22:	6078      	str	r0, [r7, #4]
   83c24:	460b      	mov	r3, r1
   83c26:	70fb      	strb	r3, [r7, #3]
   83c28:	687b      	ldr	r3, [r7, #4]
   83c2a:	62fb      	str	r3, [r7, #44]	; 0x2c
   83c2c:	78fb      	ldrb	r3, [r7, #3]
   83c2e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
   83c32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   83c34:	627b      	str	r3, [r7, #36]	; 0x24
   83c36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   83c38:	623b      	str	r3, [r7, #32]
	return pin >> 5;
   83c3a:	6a3b      	ldr	r3, [r7, #32]
   83c3c:	095b      	lsrs	r3, r3, #5
   83c3e:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   83c40:	69fb      	ldr	r3, [r7, #28]
   83c42:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   83c46:	f203 7307 	addw	r3, r3, #1799	; 0x707
   83c4a:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   83c4c:	61bb      	str	r3, [r7, #24]
	if (dir == IOPORT_DIR_OUTPUT) {
   83c4e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   83c52:	2b01      	cmp	r3, #1
   83c54:	d109      	bne.n	83c6a <ioport_set_pin_dir+0x4e>
   83c56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   83c58:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   83c5a:	697b      	ldr	r3, [r7, #20]
   83c5c:	f003 031f 	and.w	r3, r3, #31
   83c60:	2201      	movs	r2, #1
   83c62:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   83c64:	69bb      	ldr	r3, [r7, #24]
   83c66:	611a      	str	r2, [r3, #16]
   83c68:	e00c      	b.n	83c84 <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
   83c6a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   83c6e:	2b00      	cmp	r3, #0
   83c70:	d108      	bne.n	83c84 <ioport_set_pin_dir+0x68>
   83c72:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   83c74:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
   83c76:	693b      	ldr	r3, [r7, #16]
   83c78:	f003 031f 	and.w	r3, r3, #31
   83c7c:	2201      	movs	r2, #1
   83c7e:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   83c80:	69bb      	ldr	r3, [r7, #24]
   83c82:	615a      	str	r2, [r3, #20]
   83c84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   83c86:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   83c88:	68fb      	ldr	r3, [r7, #12]
   83c8a:	f003 031f 	and.w	r3, r3, #31
   83c8e:	2201      	movs	r2, #1
   83c90:	409a      	lsls	r2, r3
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   83c92:	69bb      	ldr	r3, [r7, #24]
   83c94:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
}
   83c98:	bf00      	nop
   83c9a:	3734      	adds	r7, #52	; 0x34
   83c9c:	46bd      	mov	sp, r7
   83c9e:	bc80      	pop	{r7}
   83ca0:	4770      	bx	lr

00083ca2 <ioport_set_pin_level>:
{
   83ca2:	b480      	push	{r7}
   83ca4:	b08b      	sub	sp, #44	; 0x2c
   83ca6:	af00      	add	r7, sp, #0
   83ca8:	6078      	str	r0, [r7, #4]
   83caa:	460b      	mov	r3, r1
   83cac:	70fb      	strb	r3, [r7, #3]
   83cae:	687b      	ldr	r3, [r7, #4]
   83cb0:	627b      	str	r3, [r7, #36]	; 0x24
   83cb2:	78fb      	ldrb	r3, [r7, #3]
   83cb4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   83cb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   83cba:	61fb      	str	r3, [r7, #28]
   83cbc:	69fb      	ldr	r3, [r7, #28]
   83cbe:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   83cc0:	69bb      	ldr	r3, [r7, #24]
   83cc2:	095b      	lsrs	r3, r3, #5
   83cc4:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   83cc6:	697b      	ldr	r3, [r7, #20]
   83cc8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   83ccc:	f203 7307 	addw	r3, r3, #1799	; 0x707
   83cd0:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   83cd2:	613b      	str	r3, [r7, #16]
	if (level) {
   83cd4:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   83cd8:	2b00      	cmp	r3, #0
   83cda:	d009      	beq.n	83cf0 <ioport_set_pin_level+0x4e>
   83cdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   83cde:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   83ce0:	68fb      	ldr	r3, [r7, #12]
   83ce2:	f003 031f 	and.w	r3, r3, #31
   83ce6:	2201      	movs	r2, #1
   83ce8:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   83cea:	693b      	ldr	r3, [r7, #16]
   83cec:	631a      	str	r2, [r3, #48]	; 0x30
}
   83cee:	e008      	b.n	83d02 <ioport_set_pin_level+0x60>
   83cf0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   83cf2:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   83cf4:	68bb      	ldr	r3, [r7, #8]
   83cf6:	f003 031f 	and.w	r3, r3, #31
   83cfa:	2201      	movs	r2, #1
   83cfc:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   83cfe:	693b      	ldr	r3, [r7, #16]
   83d00:	635a      	str	r2, [r3, #52]	; 0x34
   83d02:	bf00      	nop
   83d04:	372c      	adds	r7, #44	; 0x2c
   83d06:	46bd      	mov	sp, r7
   83d08:	bc80      	pop	{r7}
   83d0a:	4770      	bx	lr

00083d0c <board_init>:
#include "asf.h"
#include "board.h"
#include "conf_board.h"

void board_init(void)
{
   83d0c:	b580      	push	{r7, lr}
   83d0e:	b084      	sub	sp, #16
   83d10:	af00      	add	r7, sp, #0
	#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   83d12:	4ba6      	ldr	r3, [pc, #664]	; (83fac <board_init+0x2a0>)
   83d14:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   83d18:	605a      	str	r2, [r3, #4]
	#endif
	
	ioport_init();
   83d1a:	4ba5      	ldr	r3, [pc, #660]	; (83fb0 <board_init+0x2a4>)
   83d1c:	4798      	blx	r3
	
	/* Configure LED pins */
	ioport_set_pin_dir(LED_ONBOARD, IOPORT_DIR_OUTPUT);
   83d1e:	2101      	movs	r1, #1
   83d20:	206a      	movs	r0, #106	; 0x6a
   83d22:	4ba4      	ldr	r3, [pc, #656]	; (83fb4 <board_init+0x2a8>)
   83d24:	4798      	blx	r3
	ioport_set_pin_level(LED_ONBOARD, 0);
   83d26:	2100      	movs	r1, #0
   83d28:	206a      	movs	r0, #106	; 0x6a
   83d2a:	4ba3      	ldr	r3, [pc, #652]	; (83fb8 <board_init+0x2ac>)
   83d2c:	4798      	blx	r3
	ioport_set_pin_dir(LED_M1, IOPORT_DIR_OUTPUT);
   83d2e:	2101      	movs	r1, #1
   83d30:	2067      	movs	r0, #103	; 0x67
   83d32:	4ba0      	ldr	r3, [pc, #640]	; (83fb4 <board_init+0x2a8>)
   83d34:	4798      	blx	r3
	ioport_set_pin_level(LED_M1, 0);
   83d36:	2100      	movs	r1, #0
   83d38:	2067      	movs	r0, #103	; 0x67
   83d3a:	4b9f      	ldr	r3, [pc, #636]	; (83fb8 <board_init+0x2ac>)
   83d3c:	4798      	blx	r3
	ioport_set_pin_dir(LED_M2, IOPORT_DIR_OUTPUT);
   83d3e:	2101      	movs	r1, #1
   83d40:	2068      	movs	r0, #104	; 0x68
   83d42:	4b9c      	ldr	r3, [pc, #624]	; (83fb4 <board_init+0x2a8>)
   83d44:	4798      	blx	r3
	ioport_set_pin_level(LED_M2, 0);
   83d46:	2100      	movs	r1, #0
   83d48:	2068      	movs	r0, #104	; 0x68
   83d4a:	4b9b      	ldr	r3, [pc, #620]	; (83fb8 <board_init+0x2ac>)
   83d4c:	4798      	blx	r3
	ioport_set_pin_dir(LED_M3, IOPORT_DIR_OUTPUT);
   83d4e:	2101      	movs	r1, #1
   83d50:	2069      	movs	r0, #105	; 0x69
   83d52:	4b98      	ldr	r3, [pc, #608]	; (83fb4 <board_init+0x2a8>)
   83d54:	4798      	blx	r3
	ioport_set_pin_level(LED_M3, 0);
   83d56:	2100      	movs	r1, #0
   83d58:	2069      	movs	r0, #105	; 0x69
   83d5a:	4b97      	ldr	r3, [pc, #604]	; (83fb8 <board_init+0x2ac>)
   83d5c:	4798      	blx	r3
	ioport_set_pin_dir(LED_BAT, IOPORT_DIR_OUTPUT);
   83d5e:	2101      	movs	r1, #1
   83d60:	2066      	movs	r0, #102	; 0x66
   83d62:	4b94      	ldr	r3, [pc, #592]	; (83fb4 <board_init+0x2a8>)
   83d64:	4798      	blx	r3
	ioport_set_pin_level(LED_BAT, 0);
   83d66:	2100      	movs	r1, #0
   83d68:	2066      	movs	r0, #102	; 0x66
   83d6a:	4b93      	ldr	r3, [pc, #588]	; (83fb8 <board_init+0x2ac>)
   83d6c:	4798      	blx	r3
	
	/* Configure pushbutton pins */
	ioport_set_pin_dir(PB_UP, IOPORT_DIR_INPUT);
   83d6e:	2100      	movs	r1, #0
   83d70:	2060      	movs	r0, #96	; 0x60
   83d72:	4b90      	ldr	r3, [pc, #576]	; (83fb4 <board_init+0x2a8>)
   83d74:	4798      	blx	r3
	ioport_set_pin_mode(PB_UP, IOPORT_MODE_PULLUP | IOPORT_MODE_DEBOUNCE);
   83d76:	2188      	movs	r1, #136	; 0x88
   83d78:	2060      	movs	r0, #96	; 0x60
   83d7a:	4b90      	ldr	r3, [pc, #576]	; (83fbc <board_init+0x2b0>)
   83d7c:	4798      	blx	r3
	ioport_set_pin_dir(PB_LEFT, IOPORT_DIR_INPUT);
   83d7e:	2100      	movs	r1, #0
   83d80:	2061      	movs	r0, #97	; 0x61
   83d82:	4b8c      	ldr	r3, [pc, #560]	; (83fb4 <board_init+0x2a8>)
   83d84:	4798      	blx	r3
	ioport_set_pin_mode(PB_LEFT, IOPORT_MODE_PULLUP | IOPORT_MODE_DEBOUNCE);
   83d86:	2188      	movs	r1, #136	; 0x88
   83d88:	2061      	movs	r0, #97	; 0x61
   83d8a:	4b8c      	ldr	r3, [pc, #560]	; (83fbc <board_init+0x2b0>)
   83d8c:	4798      	blx	r3
	ioport_set_pin_dir(PB_MID, IOPORT_DIR_INPUT);
   83d8e:	2100      	movs	r1, #0
   83d90:	2062      	movs	r0, #98	; 0x62
   83d92:	4b88      	ldr	r3, [pc, #544]	; (83fb4 <board_init+0x2a8>)
   83d94:	4798      	blx	r3
	ioport_set_pin_mode(PB_MID, IOPORT_MODE_PULLUP | IOPORT_MODE_DEBOUNCE);
   83d96:	2188      	movs	r1, #136	; 0x88
   83d98:	2062      	movs	r0, #98	; 0x62
   83d9a:	4b88      	ldr	r3, [pc, #544]	; (83fbc <board_init+0x2b0>)
   83d9c:	4798      	blx	r3
	ioport_set_pin_dir(PB_RIGHT, IOPORT_DIR_INPUT);
   83d9e:	2100      	movs	r1, #0
   83da0:	2063      	movs	r0, #99	; 0x63
   83da2:	4b84      	ldr	r3, [pc, #528]	; (83fb4 <board_init+0x2a8>)
   83da4:	4798      	blx	r3
	ioport_set_pin_mode(PB_RIGHT, IOPORT_MODE_PULLUP | IOPORT_MODE_DEBOUNCE);
   83da6:	2188      	movs	r1, #136	; 0x88
   83da8:	2063      	movs	r0, #99	; 0x63
   83daa:	4b84      	ldr	r3, [pc, #528]	; (83fbc <board_init+0x2b0>)
   83dac:	4798      	blx	r3
	ioport_set_pin_dir(PB_DOWN, IOPORT_DIR_INPUT);
   83dae:	2100      	movs	r1, #0
   83db0:	2064      	movs	r0, #100	; 0x64
   83db2:	4b80      	ldr	r3, [pc, #512]	; (83fb4 <board_init+0x2a8>)
   83db4:	4798      	blx	r3
	ioport_set_pin_mode(PB_DOWN, IOPORT_MODE_PULLUP | IOPORT_MODE_DEBOUNCE);
   83db6:	2188      	movs	r1, #136	; 0x88
   83db8:	2064      	movs	r0, #100	; 0x64
   83dba:	4b80      	ldr	r3, [pc, #512]	; (83fbc <board_init+0x2b0>)
   83dbc:	4798      	blx	r3
	ioport_set_pin_dir(PB_RETURN, IOPORT_DIR_INPUT);
   83dbe:	2100      	movs	r1, #0
   83dc0:	2065      	movs	r0, #101	; 0x65
   83dc2:	4b7c      	ldr	r3, [pc, #496]	; (83fb4 <board_init+0x2a8>)
   83dc4:	4798      	blx	r3
	ioport_set_pin_mode(PB_RETURN, IOPORT_MODE_PULLUP | IOPORT_MODE_DEBOUNCE);
   83dc6:	2188      	movs	r1, #136	; 0x88
   83dc8:	2065      	movs	r0, #101	; 0x65
   83dca:	4b7c      	ldr	r3, [pc, #496]	; (83fbc <board_init+0x2b0>)
   83dcc:	4798      	blx	r3
  
    /* Configure Motor pins */
    ioport_set_pin_mode(MOTOR_LEFT_L, IOPORT_MODE_MUX_B);
   83dce:	2101      	movs	r1, #1
   83dd0:	2042      	movs	r0, #66	; 0x42
   83dd2:	4b7a      	ldr	r3, [pc, #488]	; (83fbc <board_init+0x2b0>)
   83dd4:	4798      	blx	r3
    ioport_disable_pin(MOTOR_LEFT_L);
   83dd6:	2042      	movs	r0, #66	; 0x42
   83dd8:	4b79      	ldr	r3, [pc, #484]	; (83fc0 <board_init+0x2b4>)
   83dda:	4798      	blx	r3
    ioport_set_pin_mode(MOTOR_LEFT_H, IOPORT_MODE_MUX_B);
   83ddc:	2101      	movs	r1, #1
   83dde:	2043      	movs	r0, #67	; 0x43
   83de0:	4b76      	ldr	r3, [pc, #472]	; (83fbc <board_init+0x2b0>)
   83de2:	4798      	blx	r3
    ioport_disable_pin(MOTOR_LEFT_H);
   83de4:	2043      	movs	r0, #67	; 0x43
   83de6:	4b76      	ldr	r3, [pc, #472]	; (83fc0 <board_init+0x2b4>)
   83de8:	4798      	blx	r3
    ioport_set_pin_mode(MOTOR_RIGHT_L, IOPORT_MODE_MUX_B);
   83dea:	2101      	movs	r1, #1
   83dec:	2044      	movs	r0, #68	; 0x44
   83dee:	4b73      	ldr	r3, [pc, #460]	; (83fbc <board_init+0x2b0>)
   83df0:	4798      	blx	r3
    ioport_disable_pin(MOTOR_RIGHT_L);
   83df2:	2044      	movs	r0, #68	; 0x44
   83df4:	4b72      	ldr	r3, [pc, #456]	; (83fc0 <board_init+0x2b4>)
   83df6:	4798      	blx	r3
    ioport_set_pin_mode(MOTOR_RIGHT_H, IOPORT_MODE_MUX_B);
   83df8:	2101      	movs	r1, #1
   83dfa:	2045      	movs	r0, #69	; 0x45
   83dfc:	4b6f      	ldr	r3, [pc, #444]	; (83fbc <board_init+0x2b0>)
   83dfe:	4798      	blx	r3
    ioport_disable_pin(MOTOR_RIGHT_H);
   83e00:	2045      	movs	r0, #69	; 0x45
   83e02:	4b6f      	ldr	r3, [pc, #444]	; (83fc0 <board_init+0x2b4>)
   83e04:	4798      	blx	r3
    ioport_set_pin_mode(MOTOR_REAR_L, IOPORT_MODE_MUX_B);
   83e06:	2101      	movs	r1, #1
   83e08:	2046      	movs	r0, #70	; 0x46
   83e0a:	4b6c      	ldr	r3, [pc, #432]	; (83fbc <board_init+0x2b0>)
   83e0c:	4798      	blx	r3
    ioport_disable_pin(MOTOR_REAR_L);
   83e0e:	2046      	movs	r0, #70	; 0x46
   83e10:	4b6b      	ldr	r3, [pc, #428]	; (83fc0 <board_init+0x2b4>)
   83e12:	4798      	blx	r3
    ioport_set_pin_mode(MOTOR_REAR_H, IOPORT_MODE_MUX_B);
   83e14:	2101      	movs	r1, #1
   83e16:	2047      	movs	r0, #71	; 0x47
   83e18:	4b68      	ldr	r3, [pc, #416]	; (83fbc <board_init+0x2b0>)
   83e1a:	4798      	blx	r3
    ioport_disable_pin(MOTOR_REAR_H);
   83e1c:	2047      	movs	r0, #71	; 0x47
   83e1e:	4b68      	ldr	r3, [pc, #416]	; (83fc0 <board_init+0x2b4>)
   83e20:	4798      	blx	r3

    /* Configure Encoder pins */
    ioport_set_pin_mode(ENC_CLK, IOPORT_MODE_MUX_B);
   83e22:	2101      	movs	r1, #1
   83e24:	2055      	movs	r0, #85	; 0x55
   83e26:	4b65      	ldr	r3, [pc, #404]	; (83fbc <board_init+0x2b0>)
   83e28:	4798      	blx	r3
    ioport_disable_pin(ENC_CLK);
   83e2a:	2055      	movs	r0, #85	; 0x55
   83e2c:	4b64      	ldr	r3, [pc, #400]	; (83fc0 <board_init+0x2b4>)
   83e2e:	4798      	blx	r3
    ioport_set_pin_mode(ENC_LOAD, IOPORT_DIR_OUTPUT);
   83e30:	2101      	movs	r1, #1
   83e32:	2020      	movs	r0, #32
   83e34:	4b61      	ldr	r3, [pc, #388]	; (83fbc <board_init+0x2b0>)
   83e36:	4798      	blx	r3
    ioport_set_pin_level(ENC_LOAD, 1);
   83e38:	2101      	movs	r1, #1
   83e3a:	2020      	movs	r0, #32
   83e3c:	4b5e      	ldr	r3, [pc, #376]	; (83fb8 <board_init+0x2ac>)
   83e3e:	4798      	blx	r3

    ioport_set_pin_mode(ENC_LEFT_A, ENC_LEFT_A_FLAGS);
   83e40:	2100      	movs	r1, #0
   83e42:	2058      	movs	r0, #88	; 0x58
   83e44:	4b5d      	ldr	r3, [pc, #372]	; (83fbc <board_init+0x2b0>)
   83e46:	4798      	blx	r3
    ioport_set_pin_mode(ENC_LEFT_B, ENC_LEFT_B_FLAGS);
   83e48:	2100      	movs	r1, #0
   83e4a:	2059      	movs	r0, #89	; 0x59
   83e4c:	4b5b      	ldr	r3, [pc, #364]	; (83fbc <board_init+0x2b0>)
   83e4e:	4798      	blx	r3
    ioport_set_pin_mode(ENC_LEFT_C, ENC_LEFT_C_FLAGS);
   83e50:	2100      	movs	r1, #0
   83e52:	205a      	movs	r0, #90	; 0x5a
   83e54:	4b59      	ldr	r3, [pc, #356]	; (83fbc <board_init+0x2b0>)
   83e56:	4798      	blx	r3
    ioport_set_pin_mode(ENC_LEFT_D, ENC_LEFT_D_FLAGS);
   83e58:	2100      	movs	r1, #0
   83e5a:	205b      	movs	r0, #91	; 0x5b
   83e5c:	4b57      	ldr	r3, [pc, #348]	; (83fbc <board_init+0x2b0>)
   83e5e:	4798      	blx	r3
    ioport_set_pin_mode(ENC_LEFT_E, ENC_LEFT_E_FLAGS);
   83e60:	2100      	movs	r1, #0
   83e62:	205c      	movs	r0, #92	; 0x5c
   83e64:	4b55      	ldr	r3, [pc, #340]	; (83fbc <board_init+0x2b0>)
   83e66:	4798      	blx	r3
    ioport_set_pin_mode(ENC_LEFT_F, ENC_LEFT_F_FLAGS);
   83e68:	2100      	movs	r1, #0
   83e6a:	205d      	movs	r0, #93	; 0x5d
   83e6c:	4b53      	ldr	r3, [pc, #332]	; (83fbc <board_init+0x2b0>)
   83e6e:	4798      	blx	r3
    ioport_set_pin_mode(ENC_LEFT_G, ENC_LEFT_G_FLAGS);
   83e70:	2100      	movs	r1, #0
   83e72:	205e      	movs	r0, #94	; 0x5e
   83e74:	4b51      	ldr	r3, [pc, #324]	; (83fbc <board_init+0x2b0>)
   83e76:	4798      	blx	r3
    
    ioport_set_pin_mode(ENC_RIGHT_A, ENC_RIGHT_A_FLAGS);
   83e78:	2100      	movs	r1, #0
   83e7a:	2050      	movs	r0, #80	; 0x50
   83e7c:	4b4f      	ldr	r3, [pc, #316]	; (83fbc <board_init+0x2b0>)
   83e7e:	4798      	blx	r3
    ioport_set_pin_mode(ENC_RIGHT_B, ENC_RIGHT_B_FLAGS);
   83e80:	2100      	movs	r1, #0
   83e82:	2051      	movs	r0, #81	; 0x51
   83e84:	4b4d      	ldr	r3, [pc, #308]	; (83fbc <board_init+0x2b0>)
   83e86:	4798      	blx	r3
    ioport_set_pin_mode(ENC_RIGHT_C, ENC_RIGHT_C_FLAGS);
   83e88:	2100      	movs	r1, #0
   83e8a:	2052      	movs	r0, #82	; 0x52
   83e8c:	4b4b      	ldr	r3, [pc, #300]	; (83fbc <board_init+0x2b0>)
   83e8e:	4798      	blx	r3
    ioport_set_pin_mode(ENC_RIGHT_D, ENC_RIGHT_D_FLAGS);
   83e90:	2100      	movs	r1, #0
   83e92:	2053      	movs	r0, #83	; 0x53
   83e94:	4b49      	ldr	r3, [pc, #292]	; (83fbc <board_init+0x2b0>)
   83e96:	4798      	blx	r3
    ioport_set_pin_mode(ENC_RIGHT_E, ENC_RIGHT_E_FLAGS);
   83e98:	2100      	movs	r1, #0
   83e9a:	2054      	movs	r0, #84	; 0x54
   83e9c:	4b47      	ldr	r3, [pc, #284]	; (83fbc <board_init+0x2b0>)
   83e9e:	4798      	blx	r3
    ioport_set_pin_mode(ENC_RIGHT_F, ENC_RIGHT_F_FLAGS);
   83ea0:	2100      	movs	r1, #0
   83ea2:	2056      	movs	r0, #86	; 0x56
   83ea4:	4b45      	ldr	r3, [pc, #276]	; (83fbc <board_init+0x2b0>)
   83ea6:	4798      	blx	r3
    ioport_set_pin_mode(ENC_RIGHT_G, ENC_RIGHT_G_FLAGS);
   83ea8:	2100      	movs	r1, #0
   83eaa:	2057      	movs	r0, #87	; 0x57
   83eac:	4b43      	ldr	r3, [pc, #268]	; (83fbc <board_init+0x2b0>)
   83eae:	4798      	blx	r3
    
    ioport_set_pin_mode(ENC_REAR_A, ENC_REAR_A_FLAGS);
   83eb0:	2100      	movs	r1, #0
   83eb2:	2041      	movs	r0, #65	; 0x41
   83eb4:	4b41      	ldr	r3, [pc, #260]	; (83fbc <board_init+0x2b0>)
   83eb6:	4798      	blx	r3
    ioport_set_pin_mode(ENC_REAR_B, ENC_REAR_B_FLAGS);
   83eb8:	2100      	movs	r1, #0
   83eba:	204a      	movs	r0, #74	; 0x4a
   83ebc:	4b3f      	ldr	r3, [pc, #252]	; (83fbc <board_init+0x2b0>)
   83ebe:	4798      	blx	r3
    ioport_set_pin_mode(ENC_REAR_C, ENC_REAR_C_FLAGS);
   83ec0:	2100      	movs	r1, #0
   83ec2:	204b      	movs	r0, #75	; 0x4b
   83ec4:	4b3d      	ldr	r3, [pc, #244]	; (83fbc <board_init+0x2b0>)
   83ec6:	4798      	blx	r3
    ioport_set_pin_mode(ENC_REAR_D, ENC_REAR_D_FLAGS);
   83ec8:	2100      	movs	r1, #0
   83eca:	204c      	movs	r0, #76	; 0x4c
   83ecc:	4b3b      	ldr	r3, [pc, #236]	; (83fbc <board_init+0x2b0>)
   83ece:	4798      	blx	r3
    ioport_set_pin_mode(ENC_REAR_E, ENC_REAR_E_FLAGS);
   83ed0:	2100      	movs	r1, #0
   83ed2:	204d      	movs	r0, #77	; 0x4d
   83ed4:	4b39      	ldr	r3, [pc, #228]	; (83fbc <board_init+0x2b0>)
   83ed6:	4798      	blx	r3
    ioport_set_pin_mode(ENC_REAR_F, ENC_REAR_F_FLAGS);
   83ed8:	2100      	movs	r1, #0
   83eda:	204e      	movs	r0, #78	; 0x4e
   83edc:	4b37      	ldr	r3, [pc, #220]	; (83fbc <board_init+0x2b0>)
   83ede:	4798      	blx	r3
    ioport_set_pin_mode(ENC_REAR_G, ENC_REAR_G_FLAGS);
   83ee0:	2100      	movs	r1, #0
   83ee2:	204f      	movs	r0, #79	; 0x4f
   83ee4:	4b35      	ldr	r3, [pc, #212]	; (83fbc <board_init+0x2b0>)
   83ee6:	4798      	blx	r3
  
    /* Configure Raspberry Pi GPIO pins */
    ioport_set_pin_dir(RPI1, IOPORT_DIR_OUTPUT);
   83ee8:	2101      	movs	r1, #1
   83eea:	2001      	movs	r0, #1
   83eec:	4b31      	ldr	r3, [pc, #196]	; (83fb4 <board_init+0x2a8>)
   83eee:	4798      	blx	r3
    ioport_set_pin_level(RPI1, 1);
   83ef0:	2101      	movs	r1, #1
   83ef2:	2001      	movs	r0, #1
   83ef4:	4b30      	ldr	r3, [pc, #192]	; (83fb8 <board_init+0x2ac>)
   83ef6:	4798      	blx	r3
    ioport_set_pin_dir(RPI2, IOPORT_DIR_INPUT);
   83ef8:	2100      	movs	r1, #0
   83efa:	2008      	movs	r0, #8
   83efc:	4b2d      	ldr	r3, [pc, #180]	; (83fb4 <board_init+0x2a8>)
   83efe:	4798      	blx	r3
    ioport_set_pin_dir(RPI3, IOPORT_DIR_INPUT);
   83f00:	2100      	movs	r1, #0
   83f02:	2009      	movs	r0, #9
   83f04:	4b2b      	ldr	r3, [pc, #172]	; (83fb4 <board_init+0x2a8>)
   83f06:	4798      	blx	r3
    ioport_set_pin_dir(RPI4, IOPORT_DIR_INPUT);
   83f08:	2100      	movs	r1, #0
   83f0a:	2007      	movs	r0, #7
   83f0c:	4b29      	ldr	r3, [pc, #164]	; (83fb4 <board_init+0x2a8>)
   83f0e:	4798      	blx	r3
    ioport_set_pin_dir(RPI5, IOPORT_DIR_INPUT);
   83f10:	2100      	movs	r1, #0
   83f12:	2005      	movs	r0, #5
   83f14:	4b27      	ldr	r3, [pc, #156]	; (83fb4 <board_init+0x2a8>)
   83f16:	4798      	blx	r3
    ioport_set_pin_dir(RPI6, IOPORT_DIR_INPUT);
   83f18:	2100      	movs	r1, #0
   83f1a:	2000      	movs	r0, #0
   83f1c:	4b25      	ldr	r3, [pc, #148]	; (83fb4 <board_init+0x2a8>)
   83f1e:	4798      	blx	r3
  
    /* Configure I2C pins */
    ioport_set_pin_mode(I2C0_DATA, IOPORT_MODE_MUX_A);
   83f20:	2100      	movs	r1, #0
   83f22:	2011      	movs	r0, #17
   83f24:	4b25      	ldr	r3, [pc, #148]	; (83fbc <board_init+0x2b0>)
   83f26:	4798      	blx	r3
    ioport_disable_pin(I2C0_DATA);
   83f28:	2011      	movs	r0, #17
   83f2a:	4b25      	ldr	r3, [pc, #148]	; (83fc0 <board_init+0x2b4>)
   83f2c:	4798      	blx	r3
    ioport_set_pin_mode(I2C0_CLK, IOPORT_MODE_MUX_A);
   83f2e:	2100      	movs	r1, #0
   83f30:	2012      	movs	r0, #18
   83f32:	4b22      	ldr	r3, [pc, #136]	; (83fbc <board_init+0x2b0>)
   83f34:	4798      	blx	r3
    ioport_disable_pin(I2C0_CLK);
   83f36:	2012      	movs	r0, #18
   83f38:	4b21      	ldr	r3, [pc, #132]	; (83fc0 <board_init+0x2b4>)
   83f3a:	4798      	blx	r3
	
	/* Configure SPI pins */
	ioport_set_pin_mode(SPI1_MISO, IOPORT_MODE_MUX_A);
   83f3c:	2100      	movs	r1, #0
   83f3e:	200c      	movs	r0, #12
   83f40:	4b1e      	ldr	r3, [pc, #120]	; (83fbc <board_init+0x2b0>)
   83f42:	4798      	blx	r3
	ioport_disable_pin(SPI1_MISO);
   83f44:	200c      	movs	r0, #12
   83f46:	4b1e      	ldr	r3, [pc, #120]	; (83fc0 <board_init+0x2b4>)
   83f48:	4798      	blx	r3
	ioport_set_pin_mode(SPI1_MOSI, IOPORT_MODE_MUX_A);
   83f4a:	2100      	movs	r1, #0
   83f4c:	200d      	movs	r0, #13
   83f4e:	4b1b      	ldr	r3, [pc, #108]	; (83fbc <board_init+0x2b0>)
   83f50:	4798      	blx	r3
	ioport_disable_pin(SPI1_MOSI);
   83f52:	200d      	movs	r0, #13
   83f54:	4b1a      	ldr	r3, [pc, #104]	; (83fc0 <board_init+0x2b4>)
   83f56:	4798      	blx	r3
	ioport_set_pin_mode(SPI1_SPCK, IOPORT_MODE_MUX_A);
   83f58:	2100      	movs	r1, #0
   83f5a:	2010      	movs	r0, #16
   83f5c:	4b17      	ldr	r3, [pc, #92]	; (83fbc <board_init+0x2b0>)
   83f5e:	4798      	blx	r3
	ioport_disable_pin(SPI1_SPCK);
   83f60:	2010      	movs	r0, #16
   83f62:	4b17      	ldr	r3, [pc, #92]	; (83fc0 <board_init+0x2b4>)
   83f64:	4798      	blx	r3
	ioport_set_pin_mode(SPI1_NPCS0, IOPORT_MODE_MUX_A);
   83f66:	2100      	movs	r1, #0
   83f68:	200e      	movs	r0, #14
   83f6a:	4b14      	ldr	r3, [pc, #80]	; (83fbc <board_init+0x2b0>)
   83f6c:	4798      	blx	r3
	ioport_disable_pin(SPI1_NPCS0);
   83f6e:	200e      	movs	r0, #14
   83f70:	4b13      	ldr	r3, [pc, #76]	; (83fc0 <board_init+0x2b4>)
   83f72:	4798      	blx	r3

    /* Configure micro SD Card pins */
    ioport_set_pin_mode(MSD_CMD, IOPORT_MODE_MUX_A);
   83f74:	2100      	movs	r1, #0
   83f76:	2014      	movs	r0, #20
   83f78:	4b10      	ldr	r3, [pc, #64]	; (83fbc <board_init+0x2b0>)
   83f7a:	4798      	blx	r3
	ioport_disable_pin(MSD_CMD);
   83f7c:	2014      	movs	r0, #20
   83f7e:	4b10      	ldr	r3, [pc, #64]	; (83fc0 <board_init+0x2b4>)
   83f80:	4798      	blx	r3
    ioport_set_pin_mode(MSD_CLK, IOPORT_MODE_MUX_A);
   83f82:	2100      	movs	r1, #0
   83f84:	2013      	movs	r0, #19
   83f86:	4b0d      	ldr	r3, [pc, #52]	; (83fbc <board_init+0x2b0>)
   83f88:	4798      	blx	r3
	ioport_disable_pin(MSD_CLK);
   83f8a:	2013      	movs	r0, #19
   83f8c:	4b0c      	ldr	r3, [pc, #48]	; (83fc0 <board_init+0x2b4>)
   83f8e:	4798      	blx	r3
    ioport_set_pin_mode(MSD_DATA0, IOPORT_MODE_MUX_A);
   83f90:	2100      	movs	r1, #0
   83f92:	2015      	movs	r0, #21
   83f94:	4b09      	ldr	r3, [pc, #36]	; (83fbc <board_init+0x2b0>)
   83f96:	4798      	blx	r3
	ioport_disable_pin(MSD_DATA0);
   83f98:	2015      	movs	r0, #21
   83f9a:	4b09      	ldr	r3, [pc, #36]	; (83fc0 <board_init+0x2b4>)
   83f9c:	4798      	blx	r3
    ioport_set_pin_mode(MSD_DATA1, IOPORT_MODE_MUX_A);
   83f9e:	2100      	movs	r1, #0
   83fa0:	2016      	movs	r0, #22
   83fa2:	4b06      	ldr	r3, [pc, #24]	; (83fbc <board_init+0x2b0>)
   83fa4:	4798      	blx	r3
	ioport_disable_pin(MSD_DATA1);
   83fa6:	2016      	movs	r0, #22
   83fa8:	e00c      	b.n	83fc4 <board_init+0x2b8>
   83faa:	bf00      	nop
   83fac:	400e1a50 	.word	0x400e1a50
   83fb0:	00083ad9 	.word	0x00083ad9
   83fb4:	00083c1d 	.word	0x00083c1d
   83fb8:	00083ca3 	.word	0x00083ca3
   83fbc:	00083b45 	.word	0x00083b45
   83fc0:	00083afd 	.word	0x00083afd
   83fc4:	4b17      	ldr	r3, [pc, #92]	; (84024 <board_init+0x318>)
   83fc6:	4798      	blx	r3
    ioport_set_pin_mode(MSD_DATA2, IOPORT_MODE_MUX_A);
   83fc8:	2100      	movs	r1, #0
   83fca:	2017      	movs	r0, #23
   83fcc:	4b16      	ldr	r3, [pc, #88]	; (84028 <board_init+0x31c>)
   83fce:	4798      	blx	r3
	ioport_disable_pin(MSD_DATA2);
   83fd0:	2017      	movs	r0, #23
   83fd2:	4b14      	ldr	r3, [pc, #80]	; (84024 <board_init+0x318>)
   83fd4:	4798      	blx	r3
    ioport_set_pin_mode(MSD_DATA3, IOPORT_MODE_MUX_A);
   83fd6:	2100      	movs	r1, #0
   83fd8:	2018      	movs	r0, #24
   83fda:	4b13      	ldr	r3, [pc, #76]	; (84028 <board_init+0x31c>)
   83fdc:	4798      	blx	r3
	ioport_disable_pin(MSD_DATA3);
   83fde:	2018      	movs	r0, #24
   83fe0:	4b10      	ldr	r3, [pc, #64]	; (84024 <board_init+0x318>)
   83fe2:	4798      	blx	r3


    /* Init PWM */
    pmc_enable_periph_clk(ID_PWM);
   83fe4:	2024      	movs	r0, #36	; 0x24
   83fe6:	4b11      	ldr	r3, [pc, #68]	; (8402c <board_init+0x320>)
   83fe8:	4798      	blx	r3
    pwm_channel_disable(PWM, MOTOR_LEFT);
   83fea:	2100      	movs	r1, #0
   83fec:	4810      	ldr	r0, [pc, #64]	; (84030 <board_init+0x324>)
   83fee:	4b11      	ldr	r3, [pc, #68]	; (84034 <board_init+0x328>)
   83ff0:	4798      	blx	r3
    pwm_channel_disable(PWM, MOTOR_RIGHT);
   83ff2:	2101      	movs	r1, #1
   83ff4:	480e      	ldr	r0, [pc, #56]	; (84030 <board_init+0x324>)
   83ff6:	4b0f      	ldr	r3, [pc, #60]	; (84034 <board_init+0x328>)
   83ff8:	4798      	blx	r3
    pwm_channel_disable(PWM, MOTOR_REAR);
   83ffa:	2102      	movs	r1, #2
   83ffc:	480c      	ldr	r0, [pc, #48]	; (84030 <board_init+0x324>)
   83ffe:	4b0d      	ldr	r3, [pc, #52]	; (84034 <board_init+0x328>)
   84000:	4798      	blx	r3
    pwm_clock_t clock_setting =
   84002:	4b0d      	ldr	r3, [pc, #52]	; (84038 <board_init+0x32c>)
   84004:	607b      	str	r3, [r7, #4]
   84006:	2300      	movs	r3, #0
   84008:	60bb      	str	r3, [r7, #8]
    {
        .ul_clka = PWM_FREQUENCY * PERIOD_VALUE,
        .ul_clkb = 0,
        .ul_mck = sysclk_get_cpu_hz()
   8400a:	4b0c      	ldr	r3, [pc, #48]	; (8403c <board_init+0x330>)
   8400c:	4798      	blx	r3
   8400e:	4603      	mov	r3, r0
    pwm_clock_t clock_setting =
   84010:	60fb      	str	r3, [r7, #12]
    };
    pwm_init(PWM, &clock_setting);
   84012:	1d3b      	adds	r3, r7, #4
   84014:	4619      	mov	r1, r3
   84016:	4806      	ldr	r0, [pc, #24]	; (84030 <board_init+0x324>)
   84018:	4b09      	ldr	r3, [pc, #36]	; (84040 <board_init+0x334>)
   8401a:	4798      	blx	r3
}
   8401c:	bf00      	nop
   8401e:	3710      	adds	r7, #16
   84020:	46bd      	mov	sp, r7
   84022:	bd80      	pop	{r7, pc}
   84024:	00083afd 	.word	0x00083afd
   84028:	00083b45 	.word	0x00083b45
   8402c:	00083999 	.word	0x00083999
   84030:	40094000 	.word	0x40094000
   84034:	0008069d 	.word	0x0008069d
   84038:	01312d00 	.word	0x01312d00
   8403c:	00083aa9 	.word	0x00083aa9
   84040:	00080371 	.word	0x00080371

00084044 <Dummy_Handler>:
   84044:	b480      	push	{r7}
   84046:	af00      	add	r7, sp, #0
   84048:	e7fe      	b.n	84048 <Dummy_Handler+0x4>
	...

0008404c <Reset_Handler>:
   8404c:	b580      	push	{r7, lr}
   8404e:	b082      	sub	sp, #8
   84050:	af00      	add	r7, sp, #0
   84052:	4b1e      	ldr	r3, [pc, #120]	; (840cc <Reset_Handler+0x80>)
   84054:	607b      	str	r3, [r7, #4]
   84056:	4b1e      	ldr	r3, [pc, #120]	; (840d0 <Reset_Handler+0x84>)
   84058:	603b      	str	r3, [r7, #0]
   8405a:	687a      	ldr	r2, [r7, #4]
   8405c:	683b      	ldr	r3, [r7, #0]
   8405e:	429a      	cmp	r2, r3
   84060:	d00c      	beq.n	8407c <Reset_Handler+0x30>
   84062:	e007      	b.n	84074 <Reset_Handler+0x28>
   84064:	683b      	ldr	r3, [r7, #0]
   84066:	1d1a      	adds	r2, r3, #4
   84068:	603a      	str	r2, [r7, #0]
   8406a:	687a      	ldr	r2, [r7, #4]
   8406c:	1d11      	adds	r1, r2, #4
   8406e:	6079      	str	r1, [r7, #4]
   84070:	6812      	ldr	r2, [r2, #0]
   84072:	601a      	str	r2, [r3, #0]
   84074:	683b      	ldr	r3, [r7, #0]
   84076:	4a17      	ldr	r2, [pc, #92]	; (840d4 <Reset_Handler+0x88>)
   84078:	4293      	cmp	r3, r2
   8407a:	d3f3      	bcc.n	84064 <Reset_Handler+0x18>
   8407c:	4b16      	ldr	r3, [pc, #88]	; (840d8 <Reset_Handler+0x8c>)
   8407e:	603b      	str	r3, [r7, #0]
   84080:	e004      	b.n	8408c <Reset_Handler+0x40>
   84082:	683b      	ldr	r3, [r7, #0]
   84084:	1d1a      	adds	r2, r3, #4
   84086:	603a      	str	r2, [r7, #0]
   84088:	2200      	movs	r2, #0
   8408a:	601a      	str	r2, [r3, #0]
   8408c:	683b      	ldr	r3, [r7, #0]
   8408e:	4a13      	ldr	r2, [pc, #76]	; (840dc <Reset_Handler+0x90>)
   84090:	4293      	cmp	r3, r2
   84092:	d3f6      	bcc.n	84082 <Reset_Handler+0x36>
   84094:	4b12      	ldr	r3, [pc, #72]	; (840e0 <Reset_Handler+0x94>)
   84096:	607b      	str	r3, [r7, #4]
   84098:	4a12      	ldr	r2, [pc, #72]	; (840e4 <Reset_Handler+0x98>)
   8409a:	687b      	ldr	r3, [r7, #4]
   8409c:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   840a0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   840a4:	6093      	str	r3, [r2, #8]
   840a6:	687b      	ldr	r3, [r7, #4]
   840a8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   840ac:	d309      	bcc.n	840c2 <Reset_Handler+0x76>
   840ae:	687b      	ldr	r3, [r7, #4]
   840b0:	4a0d      	ldr	r2, [pc, #52]	; (840e8 <Reset_Handler+0x9c>)
   840b2:	4293      	cmp	r3, r2
   840b4:	d805      	bhi.n	840c2 <Reset_Handler+0x76>
   840b6:	4a0b      	ldr	r2, [pc, #44]	; (840e4 <Reset_Handler+0x98>)
   840b8:	4b0a      	ldr	r3, [pc, #40]	; (840e4 <Reset_Handler+0x98>)
   840ba:	689b      	ldr	r3, [r3, #8]
   840bc:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   840c0:	6093      	str	r3, [r2, #8]
   840c2:	4b0a      	ldr	r3, [pc, #40]	; (840ec <Reset_Handler+0xa0>)
   840c4:	4798      	blx	r3
   840c6:	4b0a      	ldr	r3, [pc, #40]	; (840f0 <Reset_Handler+0xa4>)
   840c8:	4798      	blx	r3
   840ca:	e7fe      	b.n	840ca <Reset_Handler+0x7e>
   840cc:	00089a14 	.word	0x00089a14
   840d0:	20070000 	.word	0x20070000
   840d4:	20070b50 	.word	0x20070b50
   840d8:	20070b50 	.word	0x20070b50
   840dc:	20071018 	.word	0x20071018
   840e0:	00080000 	.word	0x00080000
   840e4:	e000ed00 	.word	0xe000ed00
   840e8:	200fffff 	.word	0x200fffff
   840ec:	00085505 	.word	0x00085505
   840f0:	000844c5 	.word	0x000844c5

000840f4 <SystemCoreClockUpdate>:
   840f4:	b480      	push	{r7}
   840f6:	af00      	add	r7, sp, #0
   840f8:	4b57      	ldr	r3, [pc, #348]	; (84258 <SystemCoreClockUpdate+0x164>)
   840fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   840fc:	f003 0303 	and.w	r3, r3, #3
   84100:	2b03      	cmp	r3, #3
   84102:	f200 808a 	bhi.w	8421a <SystemCoreClockUpdate+0x126>
   84106:	a201      	add	r2, pc, #4	; (adr r2, 8410c <SystemCoreClockUpdate+0x18>)
   84108:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8410c:	0008411d 	.word	0x0008411d
   84110:	0008413d 	.word	0x0008413d
   84114:	0008418d 	.word	0x0008418d
   84118:	0008418d 	.word	0x0008418d
   8411c:	4b4f      	ldr	r3, [pc, #316]	; (8425c <SystemCoreClockUpdate+0x168>)
   8411e:	695b      	ldr	r3, [r3, #20]
   84120:	f003 0380 	and.w	r3, r3, #128	; 0x80
   84124:	2b00      	cmp	r3, #0
   84126:	d004      	beq.n	84132 <SystemCoreClockUpdate+0x3e>
   84128:	4b4d      	ldr	r3, [pc, #308]	; (84260 <SystemCoreClockUpdate+0x16c>)
   8412a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   8412e:	601a      	str	r2, [r3, #0]
   84130:	e073      	b.n	8421a <SystemCoreClockUpdate+0x126>
   84132:	4b4b      	ldr	r3, [pc, #300]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84134:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
   84138:	601a      	str	r2, [r3, #0]
   8413a:	e06e      	b.n	8421a <SystemCoreClockUpdate+0x126>
   8413c:	4b46      	ldr	r3, [pc, #280]	; (84258 <SystemCoreClockUpdate+0x164>)
   8413e:	6a1b      	ldr	r3, [r3, #32]
   84140:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
   84144:	2b00      	cmp	r3, #0
   84146:	d003      	beq.n	84150 <SystemCoreClockUpdate+0x5c>
   84148:	4b45      	ldr	r3, [pc, #276]	; (84260 <SystemCoreClockUpdate+0x16c>)
   8414a:	4a46      	ldr	r2, [pc, #280]	; (84264 <SystemCoreClockUpdate+0x170>)
   8414c:	601a      	str	r2, [r3, #0]
   8414e:	e064      	b.n	8421a <SystemCoreClockUpdate+0x126>
   84150:	4b43      	ldr	r3, [pc, #268]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84152:	4a45      	ldr	r2, [pc, #276]	; (84268 <SystemCoreClockUpdate+0x174>)
   84154:	601a      	str	r2, [r3, #0]
   84156:	4b40      	ldr	r3, [pc, #256]	; (84258 <SystemCoreClockUpdate+0x164>)
   84158:	6a1b      	ldr	r3, [r3, #32]
   8415a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8415e:	2b10      	cmp	r3, #16
   84160:	d004      	beq.n	8416c <SystemCoreClockUpdate+0x78>
   84162:	2b20      	cmp	r3, #32
   84164:	d008      	beq.n	84178 <SystemCoreClockUpdate+0x84>
   84166:	2b00      	cmp	r3, #0
   84168:	d00e      	beq.n	84188 <SystemCoreClockUpdate+0x94>
   8416a:	e00e      	b.n	8418a <SystemCoreClockUpdate+0x96>
   8416c:	4b3c      	ldr	r3, [pc, #240]	; (84260 <SystemCoreClockUpdate+0x16c>)
   8416e:	681b      	ldr	r3, [r3, #0]
   84170:	005b      	lsls	r3, r3, #1
   84172:	4a3b      	ldr	r2, [pc, #236]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84174:	6013      	str	r3, [r2, #0]
   84176:	e008      	b.n	8418a <SystemCoreClockUpdate+0x96>
   84178:	4b39      	ldr	r3, [pc, #228]	; (84260 <SystemCoreClockUpdate+0x16c>)
   8417a:	681a      	ldr	r2, [r3, #0]
   8417c:	4613      	mov	r3, r2
   8417e:	005b      	lsls	r3, r3, #1
   84180:	4413      	add	r3, r2
   84182:	4a37      	ldr	r2, [pc, #220]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84184:	6013      	str	r3, [r2, #0]
   84186:	e000      	b.n	8418a <SystemCoreClockUpdate+0x96>
   84188:	bf00      	nop
   8418a:	e046      	b.n	8421a <SystemCoreClockUpdate+0x126>
   8418c:	4b32      	ldr	r3, [pc, #200]	; (84258 <SystemCoreClockUpdate+0x164>)
   8418e:	6a1b      	ldr	r3, [r3, #32]
   84190:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
   84194:	2b00      	cmp	r3, #0
   84196:	d003      	beq.n	841a0 <SystemCoreClockUpdate+0xac>
   84198:	4b31      	ldr	r3, [pc, #196]	; (84260 <SystemCoreClockUpdate+0x16c>)
   8419a:	4a32      	ldr	r2, [pc, #200]	; (84264 <SystemCoreClockUpdate+0x170>)
   8419c:	601a      	str	r2, [r3, #0]
   8419e:	e01c      	b.n	841da <SystemCoreClockUpdate+0xe6>
   841a0:	4b2f      	ldr	r3, [pc, #188]	; (84260 <SystemCoreClockUpdate+0x16c>)
   841a2:	4a31      	ldr	r2, [pc, #196]	; (84268 <SystemCoreClockUpdate+0x174>)
   841a4:	601a      	str	r2, [r3, #0]
   841a6:	4b2c      	ldr	r3, [pc, #176]	; (84258 <SystemCoreClockUpdate+0x164>)
   841a8:	6a1b      	ldr	r3, [r3, #32]
   841aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
   841ae:	2b10      	cmp	r3, #16
   841b0:	d004      	beq.n	841bc <SystemCoreClockUpdate+0xc8>
   841b2:	2b20      	cmp	r3, #32
   841b4:	d008      	beq.n	841c8 <SystemCoreClockUpdate+0xd4>
   841b6:	2b00      	cmp	r3, #0
   841b8:	d00e      	beq.n	841d8 <SystemCoreClockUpdate+0xe4>
   841ba:	e00e      	b.n	841da <SystemCoreClockUpdate+0xe6>
   841bc:	4b28      	ldr	r3, [pc, #160]	; (84260 <SystemCoreClockUpdate+0x16c>)
   841be:	681b      	ldr	r3, [r3, #0]
   841c0:	005b      	lsls	r3, r3, #1
   841c2:	4a27      	ldr	r2, [pc, #156]	; (84260 <SystemCoreClockUpdate+0x16c>)
   841c4:	6013      	str	r3, [r2, #0]
   841c6:	e008      	b.n	841da <SystemCoreClockUpdate+0xe6>
   841c8:	4b25      	ldr	r3, [pc, #148]	; (84260 <SystemCoreClockUpdate+0x16c>)
   841ca:	681a      	ldr	r2, [r3, #0]
   841cc:	4613      	mov	r3, r2
   841ce:	005b      	lsls	r3, r3, #1
   841d0:	4413      	add	r3, r2
   841d2:	4a23      	ldr	r2, [pc, #140]	; (84260 <SystemCoreClockUpdate+0x16c>)
   841d4:	6013      	str	r3, [r2, #0]
   841d6:	e000      	b.n	841da <SystemCoreClockUpdate+0xe6>
   841d8:	bf00      	nop
   841da:	4b1f      	ldr	r3, [pc, #124]	; (84258 <SystemCoreClockUpdate+0x164>)
   841dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   841de:	f003 0303 	and.w	r3, r3, #3
   841e2:	2b02      	cmp	r3, #2
   841e4:	d115      	bne.n	84212 <SystemCoreClockUpdate+0x11e>
   841e6:	4b1c      	ldr	r3, [pc, #112]	; (84258 <SystemCoreClockUpdate+0x164>)
   841e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   841ea:	0c1b      	lsrs	r3, r3, #16
   841ec:	f3c3 030a 	ubfx	r3, r3, #0, #11
   841f0:	3301      	adds	r3, #1
   841f2:	4a1b      	ldr	r2, [pc, #108]	; (84260 <SystemCoreClockUpdate+0x16c>)
   841f4:	6812      	ldr	r2, [r2, #0]
   841f6:	fb02 f303 	mul.w	r3, r2, r3
   841fa:	4a19      	ldr	r2, [pc, #100]	; (84260 <SystemCoreClockUpdate+0x16c>)
   841fc:	6013      	str	r3, [r2, #0]
   841fe:	4b16      	ldr	r3, [pc, #88]	; (84258 <SystemCoreClockUpdate+0x164>)
   84200:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   84202:	b2db      	uxtb	r3, r3
   84204:	4a16      	ldr	r2, [pc, #88]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84206:	6812      	ldr	r2, [r2, #0]
   84208:	fbb2 f3f3 	udiv	r3, r2, r3
   8420c:	4a14      	ldr	r2, [pc, #80]	; (84260 <SystemCoreClockUpdate+0x16c>)
   8420e:	6013      	str	r3, [r2, #0]
   84210:	e002      	b.n	84218 <SystemCoreClockUpdate+0x124>
   84212:	4b13      	ldr	r3, [pc, #76]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84214:	4a15      	ldr	r2, [pc, #84]	; (8426c <SystemCoreClockUpdate+0x178>)
   84216:	601a      	str	r2, [r3, #0]
   84218:	bf00      	nop
   8421a:	4b0f      	ldr	r3, [pc, #60]	; (84258 <SystemCoreClockUpdate+0x164>)
   8421c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8421e:	f003 0370 	and.w	r3, r3, #112	; 0x70
   84222:	2b70      	cmp	r3, #112	; 0x70
   84224:	d108      	bne.n	84238 <SystemCoreClockUpdate+0x144>
   84226:	4b0e      	ldr	r3, [pc, #56]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84228:	681b      	ldr	r3, [r3, #0]
   8422a:	4a11      	ldr	r2, [pc, #68]	; (84270 <SystemCoreClockUpdate+0x17c>)
   8422c:	fba2 2303 	umull	r2, r3, r2, r3
   84230:	085b      	lsrs	r3, r3, #1
   84232:	4a0b      	ldr	r2, [pc, #44]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84234:	6013      	str	r3, [r2, #0]
   84236:	e00a      	b.n	8424e <SystemCoreClockUpdate+0x15a>
   84238:	4b07      	ldr	r3, [pc, #28]	; (84258 <SystemCoreClockUpdate+0x164>)
   8423a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   8423c:	091b      	lsrs	r3, r3, #4
   8423e:	f003 0307 	and.w	r3, r3, #7
   84242:	4a07      	ldr	r2, [pc, #28]	; (84260 <SystemCoreClockUpdate+0x16c>)
   84244:	6812      	ldr	r2, [r2, #0]
   84246:	fa22 f303 	lsr.w	r3, r2, r3
   8424a:	4a05      	ldr	r2, [pc, #20]	; (84260 <SystemCoreClockUpdate+0x16c>)
   8424c:	6013      	str	r3, [r2, #0]
   8424e:	bf00      	nop
   84250:	46bd      	mov	sp, r7
   84252:	bc80      	pop	{r7}
   84254:	4770      	bx	lr
   84256:	bf00      	nop
   84258:	400e0600 	.word	0x400e0600
   8425c:	400e1a10 	.word	0x400e1a10
   84260:	2007019c 	.word	0x2007019c
   84264:	00b71b00 	.word	0x00b71b00
   84268:	003d0900 	.word	0x003d0900
   8426c:	0e4e1c00 	.word	0x0e4e1c00
   84270:	aaaaaaab 	.word	0xaaaaaaab

00084274 <_sbrk>:
   84274:	b480      	push	{r7}
   84276:	b085      	sub	sp, #20
   84278:	af00      	add	r7, sp, #0
   8427a:	6078      	str	r0, [r7, #4]
   8427c:	4b10      	ldr	r3, [pc, #64]	; (842c0 <_sbrk+0x4c>)
   8427e:	60fb      	str	r3, [r7, #12]
   84280:	4b10      	ldr	r3, [pc, #64]	; (842c4 <_sbrk+0x50>)
   84282:	681b      	ldr	r3, [r3, #0]
   84284:	2b00      	cmp	r3, #0
   84286:	d102      	bne.n	8428e <_sbrk+0x1a>
   84288:	4b0e      	ldr	r3, [pc, #56]	; (842c4 <_sbrk+0x50>)
   8428a:	4a0f      	ldr	r2, [pc, #60]	; (842c8 <_sbrk+0x54>)
   8428c:	601a      	str	r2, [r3, #0]
   8428e:	4b0d      	ldr	r3, [pc, #52]	; (842c4 <_sbrk+0x50>)
   84290:	681b      	ldr	r3, [r3, #0]
   84292:	60bb      	str	r3, [r7, #8]
   84294:	68ba      	ldr	r2, [r7, #8]
   84296:	687b      	ldr	r3, [r7, #4]
   84298:	441a      	add	r2, r3
   8429a:	68fb      	ldr	r3, [r7, #12]
   8429c:	429a      	cmp	r2, r3
   8429e:	dd02      	ble.n	842a6 <_sbrk+0x32>
   842a0:	f04f 33ff 	mov.w	r3, #4294967295
   842a4:	e006      	b.n	842b4 <_sbrk+0x40>
   842a6:	4b07      	ldr	r3, [pc, #28]	; (842c4 <_sbrk+0x50>)
   842a8:	681a      	ldr	r2, [r3, #0]
   842aa:	687b      	ldr	r3, [r7, #4]
   842ac:	4413      	add	r3, r2
   842ae:	4a05      	ldr	r2, [pc, #20]	; (842c4 <_sbrk+0x50>)
   842b0:	6013      	str	r3, [r2, #0]
   842b2:	68bb      	ldr	r3, [r7, #8]
   842b4:	4618      	mov	r0, r3
   842b6:	3714      	adds	r7, #20
   842b8:	46bd      	mov	sp, r7
   842ba:	bc80      	pop	{r7}
   842bc:	4770      	bx	lr
   842be:	bf00      	nop
   842c0:	20087ffc 	.word	0x20087ffc
   842c4:	20070df0 	.word	0x20070df0
   842c8:	20073018 	.word	0x20073018

000842cc <NVIC_SetPriority>:
{
   842cc:	b480      	push	{r7}
   842ce:	b083      	sub	sp, #12
   842d0:	af00      	add	r7, sp, #0
   842d2:	4603      	mov	r3, r0
   842d4:	6039      	str	r1, [r7, #0]
   842d6:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
   842d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
   842dc:	2b00      	cmp	r3, #0
   842de:	da0b      	bge.n	842f8 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
   842e0:	490d      	ldr	r1, [pc, #52]	; (84318 <NVIC_SetPriority+0x4c>)
   842e2:	79fb      	ldrb	r3, [r7, #7]
   842e4:	f003 030f 	and.w	r3, r3, #15
   842e8:	3b04      	subs	r3, #4
   842ea:	683a      	ldr	r2, [r7, #0]
   842ec:	b2d2      	uxtb	r2, r2
   842ee:	0112      	lsls	r2, r2, #4
   842f0:	b2d2      	uxtb	r2, r2
   842f2:	440b      	add	r3, r1
   842f4:	761a      	strb	r2, [r3, #24]
}
   842f6:	e009      	b.n	8430c <NVIC_SetPriority+0x40>
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   842f8:	4908      	ldr	r1, [pc, #32]	; (8431c <NVIC_SetPriority+0x50>)
   842fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
   842fe:	683a      	ldr	r2, [r7, #0]
   84300:	b2d2      	uxtb	r2, r2
   84302:	0112      	lsls	r2, r2, #4
   84304:	b2d2      	uxtb	r2, r2
   84306:	440b      	add	r3, r1
   84308:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
   8430c:	bf00      	nop
   8430e:	370c      	adds	r7, #12
   84310:	46bd      	mov	sp, r7
   84312:	bc80      	pop	{r7}
   84314:	4770      	bx	lr
   84316:	bf00      	nop
   84318:	e000ed00 	.word	0xe000ed00
   8431c:	e000e100 	.word	0xe000e100

00084320 <SysTick_Config>:
    function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
   84320:	b580      	push	{r7, lr}
   84322:	b082      	sub	sp, #8
   84324:	af00      	add	r7, sp, #0
   84326:	6078      	str	r0, [r7, #4]
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
   84328:	687b      	ldr	r3, [r7, #4]
   8432a:	3b01      	subs	r3, #1
   8432c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   84330:	d301      	bcc.n	84336 <SysTick_Config+0x16>
   84332:	2301      	movs	r3, #1
   84334:	e00f      	b.n	84356 <SysTick_Config+0x36>

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
   84336:	4a0a      	ldr	r2, [pc, #40]	; (84360 <SysTick_Config+0x40>)
   84338:	687b      	ldr	r3, [r7, #4]
   8433a:	3b01      	subs	r3, #1
   8433c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
   8433e:	210f      	movs	r1, #15
   84340:	f04f 30ff 	mov.w	r0, #4294967295
   84344:	4b07      	ldr	r3, [pc, #28]	; (84364 <SysTick_Config+0x44>)
   84346:	4798      	blx	r3
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
   84348:	4b05      	ldr	r3, [pc, #20]	; (84360 <SysTick_Config+0x40>)
   8434a:	2200      	movs	r2, #0
   8434c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
   8434e:	4b04      	ldr	r3, [pc, #16]	; (84360 <SysTick_Config+0x40>)
   84350:	2207      	movs	r2, #7
   84352:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
  return (0);                                                  /* Function successful */
   84354:	2300      	movs	r3, #0
}
   84356:	4618      	mov	r0, r3
   84358:	3708      	adds	r7, #8
   8435a:	46bd      	mov	sp, r7
   8435c:	bd80      	pop	{r7, pc}
   8435e:	bf00      	nop
   84360:	e000e010 	.word	0xe000e010
   84364:	000842cd 	.word	0x000842cd

00084368 <osc_get_rate>:
{
   84368:	b480      	push	{r7}
   8436a:	b083      	sub	sp, #12
   8436c:	af00      	add	r7, sp, #0
   8436e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   84370:	687b      	ldr	r3, [r7, #4]
   84372:	2b07      	cmp	r3, #7
   84374:	d825      	bhi.n	843c2 <osc_get_rate+0x5a>
   84376:	a201      	add	r2, pc, #4	; (adr r2, 8437c <osc_get_rate+0x14>)
   84378:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8437c:	0008439d 	.word	0x0008439d
   84380:	000843a3 	.word	0x000843a3
   84384:	000843a9 	.word	0x000843a9
   84388:	000843af 	.word	0x000843af
   8438c:	000843b3 	.word	0x000843b3
   84390:	000843b7 	.word	0x000843b7
   84394:	000843bb 	.word	0x000843bb
   84398:	000843bf 	.word	0x000843bf
		return OSC_SLCK_32K_RC_HZ;
   8439c:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   843a0:	e010      	b.n	843c4 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
   843a2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   843a6:	e00d      	b.n	843c4 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
   843a8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   843ac:	e00a      	b.n	843c4 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
   843ae:	4b08      	ldr	r3, [pc, #32]	; (843d0 <osc_get_rate+0x68>)
   843b0:	e008      	b.n	843c4 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
   843b2:	4b08      	ldr	r3, [pc, #32]	; (843d4 <osc_get_rate+0x6c>)
   843b4:	e006      	b.n	843c4 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
   843b6:	4b08      	ldr	r3, [pc, #32]	; (843d8 <osc_get_rate+0x70>)
   843b8:	e004      	b.n	843c4 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
   843ba:	4b07      	ldr	r3, [pc, #28]	; (843d8 <osc_get_rate+0x70>)
   843bc:	e002      	b.n	843c4 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
   843be:	4b06      	ldr	r3, [pc, #24]	; (843d8 <osc_get_rate+0x70>)
   843c0:	e000      	b.n	843c4 <osc_get_rate+0x5c>
	return 0;
   843c2:	2300      	movs	r3, #0
}
   843c4:	4618      	mov	r0, r3
   843c6:	370c      	adds	r7, #12
   843c8:	46bd      	mov	sp, r7
   843ca:	bc80      	pop	{r7}
   843cc:	4770      	bx	lr
   843ce:	bf00      	nop
   843d0:	003d0900 	.word	0x003d0900
   843d4:	007a1200 	.word	0x007a1200
   843d8:	00b71b00 	.word	0x00b71b00

000843dc <sysclk_get_main_hz>:
{
   843dc:	b580      	push	{r7, lr}
   843de:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
   843e0:	2006      	movs	r0, #6
   843e2:	4b04      	ldr	r3, [pc, #16]	; (843f4 <sysclk_get_main_hz+0x18>)
   843e4:	4798      	blx	r3
   843e6:	4602      	mov	r2, r0
   843e8:	4613      	mov	r3, r2
   843ea:	00db      	lsls	r3, r3, #3
   843ec:	1a9b      	subs	r3, r3, r2
   843ee:	005b      	lsls	r3, r3, #1
}
   843f0:	4618      	mov	r0, r3
   843f2:	bd80      	pop	{r7, pc}
   843f4:	00084369 	.word	0x00084369

000843f8 <sysclk_get_cpu_hz>:
{
   843f8:	b580      	push	{r7, lr}
   843fa:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
   843fc:	4b02      	ldr	r3, [pc, #8]	; (84408 <sysclk_get_cpu_hz+0x10>)
   843fe:	4798      	blx	r3
   84400:	4603      	mov	r3, r0
   84402:	085b      	lsrs	r3, r3, #1
}
   84404:	4618      	mov	r0, r3
   84406:	bd80      	pop	{r7, pc}
   84408:	000843dd 	.word	0x000843dd

0008440c <ioport_set_pin_level>:
{
   8440c:	b480      	push	{r7}
   8440e:	b08b      	sub	sp, #44	; 0x2c
   84410:	af00      	add	r7, sp, #0
   84412:	6078      	str	r0, [r7, #4]
   84414:	460b      	mov	r3, r1
   84416:	70fb      	strb	r3, [r7, #3]
   84418:	687b      	ldr	r3, [r7, #4]
   8441a:	627b      	str	r3, [r7, #36]	; 0x24
   8441c:	78fb      	ldrb	r3, [r7, #3]
   8441e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   84422:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   84424:	61fb      	str	r3, [r7, #28]
   84426:	69fb      	ldr	r3, [r7, #28]
   84428:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   8442a:	69bb      	ldr	r3, [r7, #24]
   8442c:	095b      	lsrs	r3, r3, #5
   8442e:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   84430:	697b      	ldr	r3, [r7, #20]
   84432:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   84436:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8443a:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   8443c:	613b      	str	r3, [r7, #16]
	if (level) {
   8443e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   84442:	2b00      	cmp	r3, #0
   84444:	d009      	beq.n	8445a <ioport_set_pin_level+0x4e>
   84446:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   84448:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8444a:	68fb      	ldr	r3, [r7, #12]
   8444c:	f003 031f 	and.w	r3, r3, #31
   84450:	2201      	movs	r2, #1
   84452:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   84454:	693b      	ldr	r3, [r7, #16]
   84456:	631a      	str	r2, [r3, #48]	; 0x30
}
   84458:	e008      	b.n	8446c <ioport_set_pin_level+0x60>
   8445a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   8445c:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   8445e:	68bb      	ldr	r3, [r7, #8]
   84460:	f003 031f 	and.w	r3, r3, #31
   84464:	2201      	movs	r2, #1
   84466:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   84468:	693b      	ldr	r3, [r7, #16]
   8446a:	635a      	str	r2, [r3, #52]	; 0x34
   8446c:	bf00      	nop
   8446e:	372c      	adds	r7, #44	; 0x2c
   84470:	46bd      	mov	sp, r7
   84472:	bc80      	pop	{r7}
   84474:	4770      	bx	lr

00084476 <ioport_get_pin_level>:
{
   84476:	b480      	push	{r7}
   84478:	b089      	sub	sp, #36	; 0x24
   8447a:	af00      	add	r7, sp, #0
   8447c:	6078      	str	r0, [r7, #4]
   8447e:	687b      	ldr	r3, [r7, #4]
   84480:	61fb      	str	r3, [r7, #28]
   84482:	69fb      	ldr	r3, [r7, #28]
   84484:	61bb      	str	r3, [r7, #24]
   84486:	69bb      	ldr	r3, [r7, #24]
   84488:	617b      	str	r3, [r7, #20]
	return pin >> 5;
   8448a:	697b      	ldr	r3, [r7, #20]
   8448c:	095b      	lsrs	r3, r3, #5
   8448e:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   84490:	693b      	ldr	r3, [r7, #16]
   84492:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   84496:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8449a:	025b      	lsls	r3, r3, #9
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   8449c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   8449e:	69fb      	ldr	r3, [r7, #28]
   844a0:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   844a2:	68fb      	ldr	r3, [r7, #12]
   844a4:	f003 031f 	and.w	r3, r3, #31
   844a8:	2101      	movs	r1, #1
   844aa:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   844ae:	4013      	ands	r3, r2
   844b0:	2b00      	cmp	r3, #0
   844b2:	bf14      	ite	ne
   844b4:	2301      	movne	r3, #1
   844b6:	2300      	moveq	r3, #0
   844b8:	b2db      	uxtb	r3, r3
}
   844ba:	4618      	mov	r0, r3
   844bc:	3724      	adds	r7, #36	; 0x24
   844be:	46bd      	mov	sp, r7
   844c0:	bc80      	pop	{r7}
   844c2:	4770      	bx	lr

000844c4 <main>:

void noOS_bootup_sequence(void);
void set_led(ioport_pin_t pin, Bool level);

int main(void)
{
   844c4:	b580      	push	{r7, lr}
   844c6:	b082      	sub	sp, #8
   844c8:	af00      	add	r7, sp, #0
    event_t act_event;

    sysclk_init();
   844ca:	4b1c      	ldr	r3, [pc, #112]	; (8453c <main+0x78>)
   844cc:	4798      	blx	r3
    board_init();
   844ce:	4b1c      	ldr	r3, [pc, #112]	; (84540 <main+0x7c>)
   844d0:	4798      	blx	r3
    SysTick_Config(sysclk_get_cpu_hz() / 1000);
   844d2:	4b1c      	ldr	r3, [pc, #112]	; (84544 <main+0x80>)
   844d4:	4798      	blx	r3
   844d6:	4602      	mov	r2, r0
   844d8:	4b1b      	ldr	r3, [pc, #108]	; (84548 <main+0x84>)
   844da:	fba3 2302 	umull	r2, r3, r3, r2
   844de:	099b      	lsrs	r3, r3, #6
   844e0:	4618      	mov	r0, r3
   844e2:	4b1a      	ldr	r3, [pc, #104]	; (8454c <main+0x88>)
   844e4:	4798      	blx	r3
    
    motor_init();
   844e6:	4b1a      	ldr	r3, [pc, #104]	; (84550 <main+0x8c>)
   844e8:	4798      	blx	r3
    
    sd_mmc_init();
   844ea:	4b1a      	ldr	r3, [pc, #104]	; (84554 <main+0x90>)
   844ec:	4798      	blx	r3
    
    spi_init();
   844ee:	4b1a      	ldr	r3, [pc, #104]	; (84558 <main+0x94>)
   844f0:	4798      	blx	r3
    
    compass_init();
   844f2:	4b1a      	ldr	r3, [pc, #104]	; (8455c <main+0x98>)
   844f4:	4798      	blx	r3
    lcd_init();
   844f6:	4b1a      	ldr	r3, [pc, #104]	; (84560 <main+0x9c>)
   844f8:	4798      	blx	r3
    test_file_name[0] = LUN_ID_SD_MMC_0_MEM + '0';
    res = f_open(&file_object, (char const *)test_file_name, FA_CREATE_ALWAYS | FA_WRITE);
    f_write(&file_object, "Test SD/MMC stack\n", 18, &bw);
    f_close(&file_object);*/
    
    noOS_bootup_sequence();
   844fa:	4b1a      	ldr	r3, [pc, #104]	; (84564 <main+0xa0>)
   844fc:	4798      	blx	r3
    
    enable_motor();
   844fe:	4b1a      	ldr	r3, [pc, #104]	; (84568 <main+0xa4>)
   84500:	4798      	blx	r3
    pwm_channel_enable(PWM, MOTOR_RIGHT);
    pwm_channel_enable(PWM, MOTOR_REAR);*/

    while (1)
    {
        update_comm();
   84502:	4b1a      	ldr	r3, [pc, #104]	; (8456c <main+0xa8>)
   84504:	4798      	blx	r3
        update_heartbeat();
   84506:	4b1a      	ldr	r3, [pc, #104]	; (84570 <main+0xac>)
   84508:	4798      	blx	r3
        //check_battery();
        
        if (stm.ibit.heartbeat)
   8450a:	4b1a      	ldr	r3, [pc, #104]	; (84574 <main+0xb0>)
   8450c:	781b      	ldrb	r3, [r3, #0]
   8450e:	f003 0301 	and.w	r3, r3, #1
   84512:	b2db      	uxtb	r3, r3
   84514:	2b00      	cmp	r3, #0
   84516:	d004      	beq.n	84522 <main+0x5e>
        {
            set_led(LED_M2, 1);
   84518:	2101      	movs	r1, #1
   8451a:	2068      	movs	r0, #104	; 0x68
   8451c:	4b16      	ldr	r3, [pc, #88]	; (84578 <main+0xb4>)
   8451e:	4798      	blx	r3
   84520:	e003      	b.n	8452a <main+0x66>
        }
        else
        {
            set_led(LED_M2, 0);
   84522:	2100      	movs	r1, #0
   84524:	2068      	movs	r0, #104	; 0x68
   84526:	4b14      	ldr	r3, [pc, #80]	; (84578 <main+0xb4>)
   84528:	4798      	blx	r3
        motor_speed(MOTOR_RIGHT, 50);
        motor_speed(MOTOR_REAR, 50);*/

        //update_motor(1, 1, 1);
        
        act_event = button_events();
   8452a:	4b14      	ldr	r3, [pc, #80]	; (8457c <main+0xb8>)
   8452c:	4798      	blx	r3
   8452e:	4603      	mov	r3, r0
   84530:	71fb      	strb	r3, [r7, #7]
        
        menu(act_event);
   84532:	79fb      	ldrb	r3, [r7, #7]
   84534:	4618      	mov	r0, r3
   84536:	4b12      	ldr	r3, [pc, #72]	; (84580 <main+0xbc>)
   84538:	4798      	blx	r3
        update_comm();
   8453a:	e7e2      	b.n	84502 <main+0x3e>
   8453c:	000834a5 	.word	0x000834a5
   84540:	00083d0d 	.word	0x00083d0d
   84544:	000843f9 	.word	0x000843f9
   84548:	10624dd3 	.word	0x10624dd3
   8454c:	00084321 	.word	0x00084321
   84550:	000829cd 	.word	0x000829cd
   84554:	00080161 	.word	0x00080161
   84558:	00080b15 	.word	0x00080b15
   8455c:	000813f5 	.word	0x000813f5
   84560:	00081635 	.word	0x00081635
   84564:	00084585 	.word	0x00084585
   84568:	00082bb5 	.word	0x00082bb5
   8456c:	00083019 	.word	0x00083019
   84570:	0008310d 	.word	0x0008310d
   84574:	20070e34 	.word	0x20070e34
   84578:	00084739 	.word	0x00084739
   8457c:	00082609 	.word	0x00082609
   84580:	00081c79 	.word	0x00081c79

00084584 <noOS_bootup_sequence>:
    }
}

void noOS_bootup_sequence(void)
{
   84584:	b580      	push	{r7, lr}
   84586:	b082      	sub	sp, #8
   84588:	af00      	add	r7, sp, #0
    while (!ioport_get_pin_level(RPI2) && ioport_get_pin_level(PB_MID))
   8458a:	e072      	b.n	84672 <noOS_bootup_sequence+0xee>
    {
        if (getTicks() >= (ticks_blink_update + 800))
   8458c:	4b5e      	ldr	r3, [pc, #376]	; (84708 <noOS_bootup_sequence+0x184>)
   8458e:	4798      	blx	r3
   84590:	4602      	mov	r2, r0
   84592:	4b5e      	ldr	r3, [pc, #376]	; (8470c <noOS_bootup_sequence+0x188>)
   84594:	681b      	ldr	r3, [r3, #0]
   84596:	f503 7348 	add.w	r3, r3, #800	; 0x320
   8459a:	429a      	cmp	r2, r3
   8459c:	d31a      	bcc.n	845d4 <noOS_bootup_sequence+0x50>
        {
            ticks_blink_update = getTicks();
   8459e:	4b5a      	ldr	r3, [pc, #360]	; (84708 <noOS_bootup_sequence+0x184>)
   845a0:	4798      	blx	r3
   845a2:	4602      	mov	r2, r0
   845a4:	4b59      	ldr	r3, [pc, #356]	; (8470c <noOS_bootup_sequence+0x188>)
   845a6:	601a      	str	r2, [r3, #0]
            
            if (blink_level)
   845a8:	4b59      	ldr	r3, [pc, #356]	; (84710 <noOS_bootup_sequence+0x18c>)
   845aa:	781b      	ldrb	r3, [r3, #0]
   845ac:	2b00      	cmp	r3, #0
   845ae:	d003      	beq.n	845b8 <noOS_bootup_sequence+0x34>
            {
                blink_level = 0;
   845b0:	4b57      	ldr	r3, [pc, #348]	; (84710 <noOS_bootup_sequence+0x18c>)
   845b2:	2200      	movs	r2, #0
   845b4:	701a      	strb	r2, [r3, #0]
   845b6:	e002      	b.n	845be <noOS_bootup_sequence+0x3a>
            }
            else
            {
                blink_level = 1;
   845b8:	4b55      	ldr	r3, [pc, #340]	; (84710 <noOS_bootup_sequence+0x18c>)
   845ba:	2201      	movs	r2, #1
   845bc:	701a      	strb	r2, [r3, #0]
            }
            
            ioport_set_pin_level(LED_BAT, blink_level);
   845be:	4b54      	ldr	r3, [pc, #336]	; (84710 <noOS_bootup_sequence+0x18c>)
   845c0:	781b      	ldrb	r3, [r3, #0]
   845c2:	2b00      	cmp	r3, #0
   845c4:	bf14      	ite	ne
   845c6:	2301      	movne	r3, #1
   845c8:	2300      	moveq	r3, #0
   845ca:	b2db      	uxtb	r3, r3
   845cc:	4619      	mov	r1, r3
   845ce:	2066      	movs	r0, #102	; 0x66
   845d0:	4b50      	ldr	r3, [pc, #320]	; (84714 <noOS_bootup_sequence+0x190>)
   845d2:	4798      	blx	r3
        }
        
        if (getTicks() >= (ticks_dot_update + 500))
   845d4:	4b4c      	ldr	r3, [pc, #304]	; (84708 <noOS_bootup_sequence+0x184>)
   845d6:	4798      	blx	r3
   845d8:	4602      	mov	r2, r0
   845da:	4b4f      	ldr	r3, [pc, #316]	; (84718 <noOS_bootup_sequence+0x194>)
   845dc:	681b      	ldr	r3, [r3, #0]
   845de:	f503 73fa 	add.w	r3, r3, #500	; 0x1f4
   845e2:	429a      	cmp	r2, r3
   845e4:	d315      	bcc.n	84612 <noOS_bootup_sequence+0x8e>
        {
            ticks_dot_update = getTicks();
   845e6:	4b48      	ldr	r3, [pc, #288]	; (84708 <noOS_bootup_sequence+0x184>)
   845e8:	4798      	blx	r3
   845ea:	4602      	mov	r2, r0
   845ec:	4b4a      	ldr	r3, [pc, #296]	; (84718 <noOS_bootup_sequence+0x194>)
   845ee:	601a      	str	r2, [r3, #0]
            
            if (dots < 3)
   845f0:	4b4a      	ldr	r3, [pc, #296]	; (8471c <noOS_bootup_sequence+0x198>)
   845f2:	781b      	ldrb	r3, [r3, #0]
   845f4:	2b02      	cmp	r3, #2
   845f6:	d806      	bhi.n	84606 <noOS_bootup_sequence+0x82>
            {
                dots++;
   845f8:	4b48      	ldr	r3, [pc, #288]	; (8471c <noOS_bootup_sequence+0x198>)
   845fa:	781b      	ldrb	r3, [r3, #0]
   845fc:	3301      	adds	r3, #1
   845fe:	b2da      	uxtb	r2, r3
   84600:	4b46      	ldr	r3, [pc, #280]	; (8471c <noOS_bootup_sequence+0x198>)
   84602:	701a      	strb	r2, [r3, #0]
   84604:	e002      	b.n	8460c <noOS_bootup_sequence+0x88>
            }
            else
            {
                dots = 0;
   84606:	4b45      	ldr	r3, [pc, #276]	; (8471c <noOS_bootup_sequence+0x198>)
   84608:	2200      	movs	r2, #0
   8460a:	701a      	strb	r2, [r3, #0]
            }
            
            update_dots = 1;
   8460c:	4b44      	ldr	r3, [pc, #272]	; (84720 <noOS_bootup_sequence+0x19c>)
   8460e:	2201      	movs	r2, #1
   84610:	701a      	strb	r2, [r3, #0]
        }
        
        if (update_dots)
   84612:	4b43      	ldr	r3, [pc, #268]	; (84720 <noOS_bootup_sequence+0x19c>)
   84614:	781b      	ldrb	r3, [r3, #0]
   84616:	2b00      	cmp	r3, #0
   84618:	d02b      	beq.n	84672 <noOS_bootup_sequence+0xee>
        {
            update_dots = 0;
   8461a:	4b41      	ldr	r3, [pc, #260]	; (84720 <noOS_bootup_sequence+0x19c>)
   8461c:	2200      	movs	r2, #0
   8461e:	701a      	strb	r2, [r3, #0]
            
            switch (dots)
   84620:	4b3e      	ldr	r3, [pc, #248]	; (8471c <noOS_bootup_sequence+0x198>)
   84622:	781b      	ldrb	r3, [r3, #0]
   84624:	2b03      	cmp	r3, #3
   84626:	d823      	bhi.n	84670 <noOS_bootup_sequence+0xec>
   84628:	a201      	add	r2, pc, #4	; (adr r2, 84630 <noOS_bootup_sequence+0xac>)
   8462a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8462e:	bf00      	nop
   84630:	00084641 	.word	0x00084641
   84634:	0008464d 	.word	0x0008464d
   84638:	00084659 	.word	0x00084659
   8463c:	00084665 	.word	0x00084665
            {
                case 0:
                lcd_print_s(2, 2, "booting noOS   ");
   84640:	4a38      	ldr	r2, [pc, #224]	; (84724 <noOS_bootup_sequence+0x1a0>)
   84642:	2102      	movs	r1, #2
   84644:	2002      	movs	r0, #2
   84646:	4b38      	ldr	r3, [pc, #224]	; (84728 <noOS_bootup_sequence+0x1a4>)
   84648:	4798      	blx	r3
                break;
   8464a:	e012      	b.n	84672 <noOS_bootup_sequence+0xee>
                case 1:
                lcd_print_s(2, 14, ".");
   8464c:	4a37      	ldr	r2, [pc, #220]	; (8472c <noOS_bootup_sequence+0x1a8>)
   8464e:	210e      	movs	r1, #14
   84650:	2002      	movs	r0, #2
   84652:	4b35      	ldr	r3, [pc, #212]	; (84728 <noOS_bootup_sequence+0x1a4>)
   84654:	4798      	blx	r3
                break;
   84656:	e00c      	b.n	84672 <noOS_bootup_sequence+0xee>
                case 2:
                lcd_print_s(2, 15, ".");
   84658:	4a34      	ldr	r2, [pc, #208]	; (8472c <noOS_bootup_sequence+0x1a8>)
   8465a:	210f      	movs	r1, #15
   8465c:	2002      	movs	r0, #2
   8465e:	4b32      	ldr	r3, [pc, #200]	; (84728 <noOS_bootup_sequence+0x1a4>)
   84660:	4798      	blx	r3
                break;
   84662:	e006      	b.n	84672 <noOS_bootup_sequence+0xee>
                case 3:
                lcd_print_s(2, 16, ".");
   84664:	4a31      	ldr	r2, [pc, #196]	; (8472c <noOS_bootup_sequence+0x1a8>)
   84666:	2110      	movs	r1, #16
   84668:	2002      	movs	r0, #2
   8466a:	4b2f      	ldr	r3, [pc, #188]	; (84728 <noOS_bootup_sequence+0x1a4>)
   8466c:	4798      	blx	r3
                break;
   8466e:	e000      	b.n	84672 <noOS_bootup_sequence+0xee>
                default:
                break;
   84670:	bf00      	nop
    while (!ioport_get_pin_level(RPI2) && ioport_get_pin_level(PB_MID))
   84672:	2008      	movs	r0, #8
   84674:	4b2e      	ldr	r3, [pc, #184]	; (84730 <noOS_bootup_sequence+0x1ac>)
   84676:	4798      	blx	r3
   84678:	4603      	mov	r3, r0
   8467a:	f083 0301 	eor.w	r3, r3, #1
   8467e:	b2db      	uxtb	r3, r3
   84680:	2b00      	cmp	r3, #0
   84682:	d006      	beq.n	84692 <noOS_bootup_sequence+0x10e>
   84684:	2062      	movs	r0, #98	; 0x62
   84686:	4b2a      	ldr	r3, [pc, #168]	; (84730 <noOS_bootup_sequence+0x1ac>)
   84688:	4798      	blx	r3
   8468a:	4603      	mov	r3, r0
   8468c:	2b00      	cmp	r3, #0
   8468e:	f47f af7d 	bne.w	8458c <noOS_bootup_sequence+0x8>
            }
        }
    }
    
    for(int i = 0; i< 3; i++)
   84692:	2300      	movs	r3, #0
   84694:	607b      	str	r3, [r7, #4]
   84696:	e030      	b.n	846fa <noOS_bootup_sequence+0x176>
    {
        ioport_set_pin_level(LED_ONBOARD, 1);
   84698:	2101      	movs	r1, #1
   8469a:	206a      	movs	r0, #106	; 0x6a
   8469c:	4b1d      	ldr	r3, [pc, #116]	; (84714 <noOS_bootup_sequence+0x190>)
   8469e:	4798      	blx	r3
        ioport_set_pin_level(LED_BAT, 1);
   846a0:	2101      	movs	r1, #1
   846a2:	2066      	movs	r0, #102	; 0x66
   846a4:	4b1b      	ldr	r3, [pc, #108]	; (84714 <noOS_bootup_sequence+0x190>)
   846a6:	4798      	blx	r3
        ioport_set_pin_level(LED_M1, 1);
   846a8:	2101      	movs	r1, #1
   846aa:	2067      	movs	r0, #103	; 0x67
   846ac:	4b19      	ldr	r3, [pc, #100]	; (84714 <noOS_bootup_sequence+0x190>)
   846ae:	4798      	blx	r3
        ioport_set_pin_level(LED_M2, 1);
   846b0:	2101      	movs	r1, #1
   846b2:	2068      	movs	r0, #104	; 0x68
   846b4:	4b17      	ldr	r3, [pc, #92]	; (84714 <noOS_bootup_sequence+0x190>)
   846b6:	4798      	blx	r3
        ioport_set_pin_level(LED_M3, 1);
   846b8:	2101      	movs	r1, #1
   846ba:	2069      	movs	r0, #105	; 0x69
   846bc:	4b15      	ldr	r3, [pc, #84]	; (84714 <noOS_bootup_sequence+0x190>)
   846be:	4798      	blx	r3
        mdelay(100);
   846c0:	2064      	movs	r0, #100	; 0x64
   846c2:	4b1c      	ldr	r3, [pc, #112]	; (84734 <noOS_bootup_sequence+0x1b0>)
   846c4:	4798      	blx	r3
        ioport_set_pin_level(LED_ONBOARD, 0);
   846c6:	2100      	movs	r1, #0
   846c8:	206a      	movs	r0, #106	; 0x6a
   846ca:	4b12      	ldr	r3, [pc, #72]	; (84714 <noOS_bootup_sequence+0x190>)
   846cc:	4798      	blx	r3
        ioport_set_pin_level(LED_BAT, 0);
   846ce:	2100      	movs	r1, #0
   846d0:	2066      	movs	r0, #102	; 0x66
   846d2:	4b10      	ldr	r3, [pc, #64]	; (84714 <noOS_bootup_sequence+0x190>)
   846d4:	4798      	blx	r3
        ioport_set_pin_level(LED_M1, 0);
   846d6:	2100      	movs	r1, #0
   846d8:	2067      	movs	r0, #103	; 0x67
   846da:	4b0e      	ldr	r3, [pc, #56]	; (84714 <noOS_bootup_sequence+0x190>)
   846dc:	4798      	blx	r3
        ioport_set_pin_level(LED_M2, 0);
   846de:	2100      	movs	r1, #0
   846e0:	2068      	movs	r0, #104	; 0x68
   846e2:	4b0c      	ldr	r3, [pc, #48]	; (84714 <noOS_bootup_sequence+0x190>)
   846e4:	4798      	blx	r3
        ioport_set_pin_level(LED_M3, 0);
   846e6:	2100      	movs	r1, #0
   846e8:	2069      	movs	r0, #105	; 0x69
   846ea:	4b0a      	ldr	r3, [pc, #40]	; (84714 <noOS_bootup_sequence+0x190>)
   846ec:	4798      	blx	r3
        mdelay(100);
   846ee:	2064      	movs	r0, #100	; 0x64
   846f0:	4b10      	ldr	r3, [pc, #64]	; (84734 <noOS_bootup_sequence+0x1b0>)
   846f2:	4798      	blx	r3
    for(int i = 0; i< 3; i++)
   846f4:	687b      	ldr	r3, [r7, #4]
   846f6:	3301      	adds	r3, #1
   846f8:	607b      	str	r3, [r7, #4]
   846fa:	687b      	ldr	r3, [r7, #4]
   846fc:	2b02      	cmp	r3, #2
   846fe:	ddcb      	ble.n	84698 <noOS_bootup_sequence+0x114>
    }
}
   84700:	bf00      	nop
   84702:	3708      	adds	r7, #8
   84704:	46bd      	mov	sp, r7
   84706:	bd80      	pop	{r7, pc}
   84708:	00082fd9 	.word	0x00082fd9
   8470c:	20070fe8 	.word	0x20070fe8
   84710:	20070fe4 	.word	0x20070fe4
   84714:	0008440d 	.word	0x0008440d
   84718:	20070fec 	.word	0x20070fec
   8471c:	20070df4 	.word	0x20070df4
   84720:	200701a0 	.word	0x200701a0
   84724:	0008974c 	.word	0x0008974c
   84728:	00081725 	.word	0x00081725
   8472c:	0008975c 	.word	0x0008975c
   84730:	00084477 	.word	0x00084477
   84734:	00082fed 	.word	0x00082fed

00084738 <set_led>:

void set_led(ioport_pin_t pin, Bool level)
{
   84738:	b580      	push	{r7, lr}
   8473a:	b082      	sub	sp, #8
   8473c:	af00      	add	r7, sp, #0
   8473e:	6078      	str	r0, [r7, #4]
   84740:	460b      	mov	r3, r1
   84742:	70fb      	strb	r3, [r7, #3]
    if (allow_leds)
   84744:	4b0b      	ldr	r3, [pc, #44]	; (84774 <set_led+0x3c>)
   84746:	781b      	ldrb	r3, [r3, #0]
   84748:	2b00      	cmp	r3, #0
   8474a:	d00a      	beq.n	84762 <set_led+0x2a>
    {
        ioport_set_pin_level(pin, level);
   8474c:	78fb      	ldrb	r3, [r7, #3]
   8474e:	2b00      	cmp	r3, #0
   84750:	bf14      	ite	ne
   84752:	2301      	movne	r3, #1
   84754:	2300      	moveq	r3, #0
   84756:	b2db      	uxtb	r3, r3
   84758:	4619      	mov	r1, r3
   8475a:	6878      	ldr	r0, [r7, #4]
   8475c:	4b06      	ldr	r3, [pc, #24]	; (84778 <set_led+0x40>)
   8475e:	4798      	blx	r3
    }
    else
    {
        ioport_set_pin_level(pin, 0);
    }
}
   84760:	e003      	b.n	8476a <set_led+0x32>
        ioport_set_pin_level(pin, 0);
   84762:	2100      	movs	r1, #0
   84764:	6878      	ldr	r0, [r7, #4]
   84766:	4b04      	ldr	r3, [pc, #16]	; (84778 <set_led+0x40>)
   84768:	4798      	blx	r3
}
   8476a:	bf00      	nop
   8476c:	3708      	adds	r7, #8
   8476e:	46bd      	mov	sp, r7
   84770:	bd80      	pop	{r7, pc}
   84772:	bf00      	nop
   84774:	2007018d 	.word	0x2007018d
   84778:	0008440d 	.word	0x0008440d

0008477c <__aeabi_drsub>:
   8477c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84780:	e002      	b.n	84788 <__adddf3>
   84782:	bf00      	nop

00084784 <__aeabi_dsub>:
   84784:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084788 <__adddf3>:
   84788:	b530      	push	{r4, r5, lr}
   8478a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   8478e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84792:	ea94 0f05 	teq	r4, r5
   84796:	bf08      	it	eq
   84798:	ea90 0f02 	teqeq	r0, r2
   8479c:	bf1f      	itttt	ne
   8479e:	ea54 0c00 	orrsne.w	ip, r4, r0
   847a2:	ea55 0c02 	orrsne.w	ip, r5, r2
   847a6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   847aa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   847ae:	f000 80e2 	beq.w	84976 <__adddf3+0x1ee>
   847b2:	ea4f 5454 	mov.w	r4, r4, lsr #21
   847b6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   847ba:	bfb8      	it	lt
   847bc:	426d      	neglt	r5, r5
   847be:	dd0c      	ble.n	847da <__adddf3+0x52>
   847c0:	442c      	add	r4, r5
   847c2:	ea80 0202 	eor.w	r2, r0, r2
   847c6:	ea81 0303 	eor.w	r3, r1, r3
   847ca:	ea82 0000 	eor.w	r0, r2, r0
   847ce:	ea83 0101 	eor.w	r1, r3, r1
   847d2:	ea80 0202 	eor.w	r2, r0, r2
   847d6:	ea81 0303 	eor.w	r3, r1, r3
   847da:	2d36      	cmp	r5, #54	; 0x36
   847dc:	bf88      	it	hi
   847de:	bd30      	pophi	{r4, r5, pc}
   847e0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   847e4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   847e8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   847ec:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   847f0:	d002      	beq.n	847f8 <__adddf3+0x70>
   847f2:	4240      	negs	r0, r0
   847f4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   847f8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   847fc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84800:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84804:	d002      	beq.n	8480c <__adddf3+0x84>
   84806:	4252      	negs	r2, r2
   84808:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   8480c:	ea94 0f05 	teq	r4, r5
   84810:	f000 80a7 	beq.w	84962 <__adddf3+0x1da>
   84814:	f1a4 0401 	sub.w	r4, r4, #1
   84818:	f1d5 0e20 	rsbs	lr, r5, #32
   8481c:	db0d      	blt.n	8483a <__adddf3+0xb2>
   8481e:	fa02 fc0e 	lsl.w	ip, r2, lr
   84822:	fa22 f205 	lsr.w	r2, r2, r5
   84826:	1880      	adds	r0, r0, r2
   84828:	f141 0100 	adc.w	r1, r1, #0
   8482c:	fa03 f20e 	lsl.w	r2, r3, lr
   84830:	1880      	adds	r0, r0, r2
   84832:	fa43 f305 	asr.w	r3, r3, r5
   84836:	4159      	adcs	r1, r3
   84838:	e00e      	b.n	84858 <__adddf3+0xd0>
   8483a:	f1a5 0520 	sub.w	r5, r5, #32
   8483e:	f10e 0e20 	add.w	lr, lr, #32
   84842:	2a01      	cmp	r2, #1
   84844:	fa03 fc0e 	lsl.w	ip, r3, lr
   84848:	bf28      	it	cs
   8484a:	f04c 0c02 	orrcs.w	ip, ip, #2
   8484e:	fa43 f305 	asr.w	r3, r3, r5
   84852:	18c0      	adds	r0, r0, r3
   84854:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84858:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8485c:	d507      	bpl.n	8486e <__adddf3+0xe6>
   8485e:	f04f 0e00 	mov.w	lr, #0
   84862:	f1dc 0c00 	rsbs	ip, ip, #0
   84866:	eb7e 0000 	sbcs.w	r0, lr, r0
   8486a:	eb6e 0101 	sbc.w	r1, lr, r1
   8486e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84872:	d31b      	bcc.n	848ac <__adddf3+0x124>
   84874:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84878:	d30c      	bcc.n	84894 <__adddf3+0x10c>
   8487a:	0849      	lsrs	r1, r1, #1
   8487c:	ea5f 0030 	movs.w	r0, r0, rrx
   84880:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84884:	f104 0401 	add.w	r4, r4, #1
   84888:	ea4f 5244 	mov.w	r2, r4, lsl #21
   8488c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84890:	f080 809a 	bcs.w	849c8 <__adddf3+0x240>
   84894:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84898:	bf08      	it	eq
   8489a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8489e:	f150 0000 	adcs.w	r0, r0, #0
   848a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   848a6:	ea41 0105 	orr.w	r1, r1, r5
   848aa:	bd30      	pop	{r4, r5, pc}
   848ac:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   848b0:	4140      	adcs	r0, r0
   848b2:	eb41 0101 	adc.w	r1, r1, r1
   848b6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   848ba:	f1a4 0401 	sub.w	r4, r4, #1
   848be:	d1e9      	bne.n	84894 <__adddf3+0x10c>
   848c0:	f091 0f00 	teq	r1, #0
   848c4:	bf04      	itt	eq
   848c6:	4601      	moveq	r1, r0
   848c8:	2000      	moveq	r0, #0
   848ca:	fab1 f381 	clz	r3, r1
   848ce:	bf08      	it	eq
   848d0:	3320      	addeq	r3, #32
   848d2:	f1a3 030b 	sub.w	r3, r3, #11
   848d6:	f1b3 0220 	subs.w	r2, r3, #32
   848da:	da0c      	bge.n	848f6 <__adddf3+0x16e>
   848dc:	320c      	adds	r2, #12
   848de:	dd08      	ble.n	848f2 <__adddf3+0x16a>
   848e0:	f102 0c14 	add.w	ip, r2, #20
   848e4:	f1c2 020c 	rsb	r2, r2, #12
   848e8:	fa01 f00c 	lsl.w	r0, r1, ip
   848ec:	fa21 f102 	lsr.w	r1, r1, r2
   848f0:	e00c      	b.n	8490c <__adddf3+0x184>
   848f2:	f102 0214 	add.w	r2, r2, #20
   848f6:	bfd8      	it	le
   848f8:	f1c2 0c20 	rsble	ip, r2, #32
   848fc:	fa01 f102 	lsl.w	r1, r1, r2
   84900:	fa20 fc0c 	lsr.w	ip, r0, ip
   84904:	bfdc      	itt	le
   84906:	ea41 010c 	orrle.w	r1, r1, ip
   8490a:	4090      	lslle	r0, r2
   8490c:	1ae4      	subs	r4, r4, r3
   8490e:	bfa2      	ittt	ge
   84910:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84914:	4329      	orrge	r1, r5
   84916:	bd30      	popge	{r4, r5, pc}
   84918:	ea6f 0404 	mvn.w	r4, r4
   8491c:	3c1f      	subs	r4, #31
   8491e:	da1c      	bge.n	8495a <__adddf3+0x1d2>
   84920:	340c      	adds	r4, #12
   84922:	dc0e      	bgt.n	84942 <__adddf3+0x1ba>
   84924:	f104 0414 	add.w	r4, r4, #20
   84928:	f1c4 0220 	rsb	r2, r4, #32
   8492c:	fa20 f004 	lsr.w	r0, r0, r4
   84930:	fa01 f302 	lsl.w	r3, r1, r2
   84934:	ea40 0003 	orr.w	r0, r0, r3
   84938:	fa21 f304 	lsr.w	r3, r1, r4
   8493c:	ea45 0103 	orr.w	r1, r5, r3
   84940:	bd30      	pop	{r4, r5, pc}
   84942:	f1c4 040c 	rsb	r4, r4, #12
   84946:	f1c4 0220 	rsb	r2, r4, #32
   8494a:	fa20 f002 	lsr.w	r0, r0, r2
   8494e:	fa01 f304 	lsl.w	r3, r1, r4
   84952:	ea40 0003 	orr.w	r0, r0, r3
   84956:	4629      	mov	r1, r5
   84958:	bd30      	pop	{r4, r5, pc}
   8495a:	fa21 f004 	lsr.w	r0, r1, r4
   8495e:	4629      	mov	r1, r5
   84960:	bd30      	pop	{r4, r5, pc}
   84962:	f094 0f00 	teq	r4, #0
   84966:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   8496a:	bf06      	itte	eq
   8496c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84970:	3401      	addeq	r4, #1
   84972:	3d01      	subne	r5, #1
   84974:	e74e      	b.n	84814 <__adddf3+0x8c>
   84976:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8497a:	bf18      	it	ne
   8497c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84980:	d029      	beq.n	849d6 <__adddf3+0x24e>
   84982:	ea94 0f05 	teq	r4, r5
   84986:	bf08      	it	eq
   84988:	ea90 0f02 	teqeq	r0, r2
   8498c:	d005      	beq.n	8499a <__adddf3+0x212>
   8498e:	ea54 0c00 	orrs.w	ip, r4, r0
   84992:	bf04      	itt	eq
   84994:	4619      	moveq	r1, r3
   84996:	4610      	moveq	r0, r2
   84998:	bd30      	pop	{r4, r5, pc}
   8499a:	ea91 0f03 	teq	r1, r3
   8499e:	bf1e      	ittt	ne
   849a0:	2100      	movne	r1, #0
   849a2:	2000      	movne	r0, #0
   849a4:	bd30      	popne	{r4, r5, pc}
   849a6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   849aa:	d105      	bne.n	849b8 <__adddf3+0x230>
   849ac:	0040      	lsls	r0, r0, #1
   849ae:	4149      	adcs	r1, r1
   849b0:	bf28      	it	cs
   849b2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   849b6:	bd30      	pop	{r4, r5, pc}
   849b8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   849bc:	bf3c      	itt	cc
   849be:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   849c2:	bd30      	popcc	{r4, r5, pc}
   849c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   849c8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   849cc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   849d0:	f04f 0000 	mov.w	r0, #0
   849d4:	bd30      	pop	{r4, r5, pc}
   849d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   849da:	bf1a      	itte	ne
   849dc:	4619      	movne	r1, r3
   849de:	4610      	movne	r0, r2
   849e0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   849e4:	bf1c      	itt	ne
   849e6:	460b      	movne	r3, r1
   849e8:	4602      	movne	r2, r0
   849ea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   849ee:	bf06      	itte	eq
   849f0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   849f4:	ea91 0f03 	teqeq	r1, r3
   849f8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   849fc:	bd30      	pop	{r4, r5, pc}
   849fe:	bf00      	nop

00084a00 <__aeabi_ui2d>:
   84a00:	f090 0f00 	teq	r0, #0
   84a04:	bf04      	itt	eq
   84a06:	2100      	moveq	r1, #0
   84a08:	4770      	bxeq	lr
   84a0a:	b530      	push	{r4, r5, lr}
   84a0c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84a10:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84a14:	f04f 0500 	mov.w	r5, #0
   84a18:	f04f 0100 	mov.w	r1, #0
   84a1c:	e750      	b.n	848c0 <__adddf3+0x138>
   84a1e:	bf00      	nop

00084a20 <__aeabi_i2d>:
   84a20:	f090 0f00 	teq	r0, #0
   84a24:	bf04      	itt	eq
   84a26:	2100      	moveq	r1, #0
   84a28:	4770      	bxeq	lr
   84a2a:	b530      	push	{r4, r5, lr}
   84a2c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84a30:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84a34:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84a38:	bf48      	it	mi
   84a3a:	4240      	negmi	r0, r0
   84a3c:	f04f 0100 	mov.w	r1, #0
   84a40:	e73e      	b.n	848c0 <__adddf3+0x138>
   84a42:	bf00      	nop

00084a44 <__aeabi_f2d>:
   84a44:	0042      	lsls	r2, r0, #1
   84a46:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84a4a:	ea4f 0131 	mov.w	r1, r1, rrx
   84a4e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84a52:	bf1f      	itttt	ne
   84a54:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84a58:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84a5c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84a60:	4770      	bxne	lr
   84a62:	f092 0f00 	teq	r2, #0
   84a66:	bf14      	ite	ne
   84a68:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84a6c:	4770      	bxeq	lr
   84a6e:	b530      	push	{r4, r5, lr}
   84a70:	f44f 7460 	mov.w	r4, #896	; 0x380
   84a74:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84a78:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84a7c:	e720      	b.n	848c0 <__adddf3+0x138>
   84a7e:	bf00      	nop

00084a80 <__aeabi_ul2d>:
   84a80:	ea50 0201 	orrs.w	r2, r0, r1
   84a84:	bf08      	it	eq
   84a86:	4770      	bxeq	lr
   84a88:	b530      	push	{r4, r5, lr}
   84a8a:	f04f 0500 	mov.w	r5, #0
   84a8e:	e00a      	b.n	84aa6 <__aeabi_l2d+0x16>

00084a90 <__aeabi_l2d>:
   84a90:	ea50 0201 	orrs.w	r2, r0, r1
   84a94:	bf08      	it	eq
   84a96:	4770      	bxeq	lr
   84a98:	b530      	push	{r4, r5, lr}
   84a9a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84a9e:	d502      	bpl.n	84aa6 <__aeabi_l2d+0x16>
   84aa0:	4240      	negs	r0, r0
   84aa2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84aa6:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84aaa:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84aae:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84ab2:	f43f aedc 	beq.w	8486e <__adddf3+0xe6>
   84ab6:	f04f 0203 	mov.w	r2, #3
   84aba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84abe:	bf18      	it	ne
   84ac0:	3203      	addne	r2, #3
   84ac2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84ac6:	bf18      	it	ne
   84ac8:	3203      	addne	r2, #3
   84aca:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84ace:	f1c2 0320 	rsb	r3, r2, #32
   84ad2:	fa00 fc03 	lsl.w	ip, r0, r3
   84ad6:	fa20 f002 	lsr.w	r0, r0, r2
   84ada:	fa01 fe03 	lsl.w	lr, r1, r3
   84ade:	ea40 000e 	orr.w	r0, r0, lr
   84ae2:	fa21 f102 	lsr.w	r1, r1, r2
   84ae6:	4414      	add	r4, r2
   84ae8:	e6c1      	b.n	8486e <__adddf3+0xe6>
   84aea:	bf00      	nop

00084aec <__aeabi_dmul>:
   84aec:	b570      	push	{r4, r5, r6, lr}
   84aee:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84af2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84af6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84afa:	bf1d      	ittte	ne
   84afc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84b00:	ea94 0f0c 	teqne	r4, ip
   84b04:	ea95 0f0c 	teqne	r5, ip
   84b08:	f000 f8de 	bleq	84cc8 <__aeabi_dmul+0x1dc>
   84b0c:	442c      	add	r4, r5
   84b0e:	ea81 0603 	eor.w	r6, r1, r3
   84b12:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   84b16:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84b1a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84b1e:	bf18      	it	ne
   84b20:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   84b24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84b28:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   84b2c:	d038      	beq.n	84ba0 <__aeabi_dmul+0xb4>
   84b2e:	fba0 ce02 	umull	ip, lr, r0, r2
   84b32:	f04f 0500 	mov.w	r5, #0
   84b36:	fbe1 e502 	umlal	lr, r5, r1, r2
   84b3a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   84b3e:	fbe0 e503 	umlal	lr, r5, r0, r3
   84b42:	f04f 0600 	mov.w	r6, #0
   84b46:	fbe1 5603 	umlal	r5, r6, r1, r3
   84b4a:	f09c 0f00 	teq	ip, #0
   84b4e:	bf18      	it	ne
   84b50:	f04e 0e01 	orrne.w	lr, lr, #1
   84b54:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   84b58:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   84b5c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   84b60:	d204      	bcs.n	84b6c <__aeabi_dmul+0x80>
   84b62:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   84b66:	416d      	adcs	r5, r5
   84b68:	eb46 0606 	adc.w	r6, r6, r6
   84b6c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   84b70:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   84b74:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   84b78:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   84b7c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   84b80:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84b84:	bf88      	it	hi
   84b86:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84b8a:	d81e      	bhi.n	84bca <__aeabi_dmul+0xde>
   84b8c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   84b90:	bf08      	it	eq
   84b92:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   84b96:	f150 0000 	adcs.w	r0, r0, #0
   84b9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84b9e:	bd70      	pop	{r4, r5, r6, pc}
   84ba0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   84ba4:	ea46 0101 	orr.w	r1, r6, r1
   84ba8:	ea40 0002 	orr.w	r0, r0, r2
   84bac:	ea81 0103 	eor.w	r1, r1, r3
   84bb0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   84bb4:	bfc2      	ittt	gt
   84bb6:	ebd4 050c 	rsbsgt	r5, r4, ip
   84bba:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84bbe:	bd70      	popgt	{r4, r5, r6, pc}
   84bc0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84bc4:	f04f 0e00 	mov.w	lr, #0
   84bc8:	3c01      	subs	r4, #1
   84bca:	f300 80ab 	bgt.w	84d24 <__aeabi_dmul+0x238>
   84bce:	f114 0f36 	cmn.w	r4, #54	; 0x36
   84bd2:	bfde      	ittt	le
   84bd4:	2000      	movle	r0, #0
   84bd6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   84bda:	bd70      	pople	{r4, r5, r6, pc}
   84bdc:	f1c4 0400 	rsb	r4, r4, #0
   84be0:	3c20      	subs	r4, #32
   84be2:	da35      	bge.n	84c50 <__aeabi_dmul+0x164>
   84be4:	340c      	adds	r4, #12
   84be6:	dc1b      	bgt.n	84c20 <__aeabi_dmul+0x134>
   84be8:	f104 0414 	add.w	r4, r4, #20
   84bec:	f1c4 0520 	rsb	r5, r4, #32
   84bf0:	fa00 f305 	lsl.w	r3, r0, r5
   84bf4:	fa20 f004 	lsr.w	r0, r0, r4
   84bf8:	fa01 f205 	lsl.w	r2, r1, r5
   84bfc:	ea40 0002 	orr.w	r0, r0, r2
   84c00:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   84c04:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84c08:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84c0c:	fa21 f604 	lsr.w	r6, r1, r4
   84c10:	eb42 0106 	adc.w	r1, r2, r6
   84c14:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84c18:	bf08      	it	eq
   84c1a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84c1e:	bd70      	pop	{r4, r5, r6, pc}
   84c20:	f1c4 040c 	rsb	r4, r4, #12
   84c24:	f1c4 0520 	rsb	r5, r4, #32
   84c28:	fa00 f304 	lsl.w	r3, r0, r4
   84c2c:	fa20 f005 	lsr.w	r0, r0, r5
   84c30:	fa01 f204 	lsl.w	r2, r1, r4
   84c34:	ea40 0002 	orr.w	r0, r0, r2
   84c38:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84c3c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84c40:	f141 0100 	adc.w	r1, r1, #0
   84c44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84c48:	bf08      	it	eq
   84c4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84c4e:	bd70      	pop	{r4, r5, r6, pc}
   84c50:	f1c4 0520 	rsb	r5, r4, #32
   84c54:	fa00 f205 	lsl.w	r2, r0, r5
   84c58:	ea4e 0e02 	orr.w	lr, lr, r2
   84c5c:	fa20 f304 	lsr.w	r3, r0, r4
   84c60:	fa01 f205 	lsl.w	r2, r1, r5
   84c64:	ea43 0302 	orr.w	r3, r3, r2
   84c68:	fa21 f004 	lsr.w	r0, r1, r4
   84c6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84c70:	fa21 f204 	lsr.w	r2, r1, r4
   84c74:	ea20 0002 	bic.w	r0, r0, r2
   84c78:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   84c7c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84c80:	bf08      	it	eq
   84c82:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84c86:	bd70      	pop	{r4, r5, r6, pc}
   84c88:	f094 0f00 	teq	r4, #0
   84c8c:	d10f      	bne.n	84cae <__aeabi_dmul+0x1c2>
   84c8e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   84c92:	0040      	lsls	r0, r0, #1
   84c94:	eb41 0101 	adc.w	r1, r1, r1
   84c98:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84c9c:	bf08      	it	eq
   84c9e:	3c01      	subeq	r4, #1
   84ca0:	d0f7      	beq.n	84c92 <__aeabi_dmul+0x1a6>
   84ca2:	ea41 0106 	orr.w	r1, r1, r6
   84ca6:	f095 0f00 	teq	r5, #0
   84caa:	bf18      	it	ne
   84cac:	4770      	bxne	lr
   84cae:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   84cb2:	0052      	lsls	r2, r2, #1
   84cb4:	eb43 0303 	adc.w	r3, r3, r3
   84cb8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   84cbc:	bf08      	it	eq
   84cbe:	3d01      	subeq	r5, #1
   84cc0:	d0f7      	beq.n	84cb2 <__aeabi_dmul+0x1c6>
   84cc2:	ea43 0306 	orr.w	r3, r3, r6
   84cc6:	4770      	bx	lr
   84cc8:	ea94 0f0c 	teq	r4, ip
   84ccc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   84cd0:	bf18      	it	ne
   84cd2:	ea95 0f0c 	teqne	r5, ip
   84cd6:	d00c      	beq.n	84cf2 <__aeabi_dmul+0x206>
   84cd8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84cdc:	bf18      	it	ne
   84cde:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84ce2:	d1d1      	bne.n	84c88 <__aeabi_dmul+0x19c>
   84ce4:	ea81 0103 	eor.w	r1, r1, r3
   84ce8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84cec:	f04f 0000 	mov.w	r0, #0
   84cf0:	bd70      	pop	{r4, r5, r6, pc}
   84cf2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84cf6:	bf06      	itte	eq
   84cf8:	4610      	moveq	r0, r2
   84cfa:	4619      	moveq	r1, r3
   84cfc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84d00:	d019      	beq.n	84d36 <__aeabi_dmul+0x24a>
   84d02:	ea94 0f0c 	teq	r4, ip
   84d06:	d102      	bne.n	84d0e <__aeabi_dmul+0x222>
   84d08:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   84d0c:	d113      	bne.n	84d36 <__aeabi_dmul+0x24a>
   84d0e:	ea95 0f0c 	teq	r5, ip
   84d12:	d105      	bne.n	84d20 <__aeabi_dmul+0x234>
   84d14:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   84d18:	bf1c      	itt	ne
   84d1a:	4610      	movne	r0, r2
   84d1c:	4619      	movne	r1, r3
   84d1e:	d10a      	bne.n	84d36 <__aeabi_dmul+0x24a>
   84d20:	ea81 0103 	eor.w	r1, r1, r3
   84d24:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84d28:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84d2c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84d30:	f04f 0000 	mov.w	r0, #0
   84d34:	bd70      	pop	{r4, r5, r6, pc}
   84d36:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84d3a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   84d3e:	bd70      	pop	{r4, r5, r6, pc}

00084d40 <__aeabi_ddiv>:
   84d40:	b570      	push	{r4, r5, r6, lr}
   84d42:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84d46:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84d4a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84d4e:	bf1d      	ittte	ne
   84d50:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84d54:	ea94 0f0c 	teqne	r4, ip
   84d58:	ea95 0f0c 	teqne	r5, ip
   84d5c:	f000 f8a7 	bleq	84eae <__aeabi_ddiv+0x16e>
   84d60:	eba4 0405 	sub.w	r4, r4, r5
   84d64:	ea81 0e03 	eor.w	lr, r1, r3
   84d68:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   84d6c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84d70:	f000 8088 	beq.w	84e84 <__aeabi_ddiv+0x144>
   84d74:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84d78:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   84d7c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   84d80:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   84d84:	ea4f 2202 	mov.w	r2, r2, lsl #8
   84d88:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   84d8c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   84d90:	ea4f 2600 	mov.w	r6, r0, lsl #8
   84d94:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   84d98:	429d      	cmp	r5, r3
   84d9a:	bf08      	it	eq
   84d9c:	4296      	cmpeq	r6, r2
   84d9e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   84da2:	f504 7440 	add.w	r4, r4, #768	; 0x300
   84da6:	d202      	bcs.n	84dae <__aeabi_ddiv+0x6e>
   84da8:	085b      	lsrs	r3, r3, #1
   84daa:	ea4f 0232 	mov.w	r2, r2, rrx
   84dae:	1ab6      	subs	r6, r6, r2
   84db0:	eb65 0503 	sbc.w	r5, r5, r3
   84db4:	085b      	lsrs	r3, r3, #1
   84db6:	ea4f 0232 	mov.w	r2, r2, rrx
   84dba:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   84dbe:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   84dc2:	ebb6 0e02 	subs.w	lr, r6, r2
   84dc6:	eb75 0e03 	sbcs.w	lr, r5, r3
   84dca:	bf22      	ittt	cs
   84dcc:	1ab6      	subcs	r6, r6, r2
   84dce:	4675      	movcs	r5, lr
   84dd0:	ea40 000c 	orrcs.w	r0, r0, ip
   84dd4:	085b      	lsrs	r3, r3, #1
   84dd6:	ea4f 0232 	mov.w	r2, r2, rrx
   84dda:	ebb6 0e02 	subs.w	lr, r6, r2
   84dde:	eb75 0e03 	sbcs.w	lr, r5, r3
   84de2:	bf22      	ittt	cs
   84de4:	1ab6      	subcs	r6, r6, r2
   84de6:	4675      	movcs	r5, lr
   84de8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   84dec:	085b      	lsrs	r3, r3, #1
   84dee:	ea4f 0232 	mov.w	r2, r2, rrx
   84df2:	ebb6 0e02 	subs.w	lr, r6, r2
   84df6:	eb75 0e03 	sbcs.w	lr, r5, r3
   84dfa:	bf22      	ittt	cs
   84dfc:	1ab6      	subcs	r6, r6, r2
   84dfe:	4675      	movcs	r5, lr
   84e00:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   84e04:	085b      	lsrs	r3, r3, #1
   84e06:	ea4f 0232 	mov.w	r2, r2, rrx
   84e0a:	ebb6 0e02 	subs.w	lr, r6, r2
   84e0e:	eb75 0e03 	sbcs.w	lr, r5, r3
   84e12:	bf22      	ittt	cs
   84e14:	1ab6      	subcs	r6, r6, r2
   84e16:	4675      	movcs	r5, lr
   84e18:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   84e1c:	ea55 0e06 	orrs.w	lr, r5, r6
   84e20:	d018      	beq.n	84e54 <__aeabi_ddiv+0x114>
   84e22:	ea4f 1505 	mov.w	r5, r5, lsl #4
   84e26:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   84e2a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   84e2e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   84e32:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   84e36:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   84e3a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   84e3e:	d1c0      	bne.n	84dc2 <__aeabi_ddiv+0x82>
   84e40:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84e44:	d10b      	bne.n	84e5e <__aeabi_ddiv+0x11e>
   84e46:	ea41 0100 	orr.w	r1, r1, r0
   84e4a:	f04f 0000 	mov.w	r0, #0
   84e4e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   84e52:	e7b6      	b.n	84dc2 <__aeabi_ddiv+0x82>
   84e54:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84e58:	bf04      	itt	eq
   84e5a:	4301      	orreq	r1, r0
   84e5c:	2000      	moveq	r0, #0
   84e5e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84e62:	bf88      	it	hi
   84e64:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84e68:	f63f aeaf 	bhi.w	84bca <__aeabi_dmul+0xde>
   84e6c:	ebb5 0c03 	subs.w	ip, r5, r3
   84e70:	bf04      	itt	eq
   84e72:	ebb6 0c02 	subseq.w	ip, r6, r2
   84e76:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84e7a:	f150 0000 	adcs.w	r0, r0, #0
   84e7e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84e82:	bd70      	pop	{r4, r5, r6, pc}
   84e84:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   84e88:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   84e8c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   84e90:	bfc2      	ittt	gt
   84e92:	ebd4 050c 	rsbsgt	r5, r4, ip
   84e96:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84e9a:	bd70      	popgt	{r4, r5, r6, pc}
   84e9c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84ea0:	f04f 0e00 	mov.w	lr, #0
   84ea4:	3c01      	subs	r4, #1
   84ea6:	e690      	b.n	84bca <__aeabi_dmul+0xde>
   84ea8:	ea45 0e06 	orr.w	lr, r5, r6
   84eac:	e68d      	b.n	84bca <__aeabi_dmul+0xde>
   84eae:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   84eb2:	ea94 0f0c 	teq	r4, ip
   84eb6:	bf08      	it	eq
   84eb8:	ea95 0f0c 	teqeq	r5, ip
   84ebc:	f43f af3b 	beq.w	84d36 <__aeabi_dmul+0x24a>
   84ec0:	ea94 0f0c 	teq	r4, ip
   84ec4:	d10a      	bne.n	84edc <__aeabi_ddiv+0x19c>
   84ec6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84eca:	f47f af34 	bne.w	84d36 <__aeabi_dmul+0x24a>
   84ece:	ea95 0f0c 	teq	r5, ip
   84ed2:	f47f af25 	bne.w	84d20 <__aeabi_dmul+0x234>
   84ed6:	4610      	mov	r0, r2
   84ed8:	4619      	mov	r1, r3
   84eda:	e72c      	b.n	84d36 <__aeabi_dmul+0x24a>
   84edc:	ea95 0f0c 	teq	r5, ip
   84ee0:	d106      	bne.n	84ef0 <__aeabi_ddiv+0x1b0>
   84ee2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   84ee6:	f43f aefd 	beq.w	84ce4 <__aeabi_dmul+0x1f8>
   84eea:	4610      	mov	r0, r2
   84eec:	4619      	mov	r1, r3
   84eee:	e722      	b.n	84d36 <__aeabi_dmul+0x24a>
   84ef0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84ef4:	bf18      	it	ne
   84ef6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84efa:	f47f aec5 	bne.w	84c88 <__aeabi_dmul+0x19c>
   84efe:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   84f02:	f47f af0d 	bne.w	84d20 <__aeabi_dmul+0x234>
   84f06:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   84f0a:	f47f aeeb 	bne.w	84ce4 <__aeabi_dmul+0x1f8>
   84f0e:	e712      	b.n	84d36 <__aeabi_dmul+0x24a>

00084f10 <__aeabi_frsub>:
   84f10:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   84f14:	e002      	b.n	84f1c <__addsf3>
   84f16:	bf00      	nop

00084f18 <__aeabi_fsub>:
   84f18:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00084f1c <__addsf3>:
   84f1c:	0042      	lsls	r2, r0, #1
   84f1e:	bf1f      	itttt	ne
   84f20:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   84f24:	ea92 0f03 	teqne	r2, r3
   84f28:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   84f2c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   84f30:	d06a      	beq.n	85008 <__addsf3+0xec>
   84f32:	ea4f 6212 	mov.w	r2, r2, lsr #24
   84f36:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   84f3a:	bfc1      	itttt	gt
   84f3c:	18d2      	addgt	r2, r2, r3
   84f3e:	4041      	eorgt	r1, r0
   84f40:	4048      	eorgt	r0, r1
   84f42:	4041      	eorgt	r1, r0
   84f44:	bfb8      	it	lt
   84f46:	425b      	neglt	r3, r3
   84f48:	2b19      	cmp	r3, #25
   84f4a:	bf88      	it	hi
   84f4c:	4770      	bxhi	lr
   84f4e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   84f52:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   84f56:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   84f5a:	bf18      	it	ne
   84f5c:	4240      	negne	r0, r0
   84f5e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84f62:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   84f66:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   84f6a:	bf18      	it	ne
   84f6c:	4249      	negne	r1, r1
   84f6e:	ea92 0f03 	teq	r2, r3
   84f72:	d03f      	beq.n	84ff4 <__addsf3+0xd8>
   84f74:	f1a2 0201 	sub.w	r2, r2, #1
   84f78:	fa41 fc03 	asr.w	ip, r1, r3
   84f7c:	eb10 000c 	adds.w	r0, r0, ip
   84f80:	f1c3 0320 	rsb	r3, r3, #32
   84f84:	fa01 f103 	lsl.w	r1, r1, r3
   84f88:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   84f8c:	d502      	bpl.n	84f94 <__addsf3+0x78>
   84f8e:	4249      	negs	r1, r1
   84f90:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   84f94:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   84f98:	d313      	bcc.n	84fc2 <__addsf3+0xa6>
   84f9a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   84f9e:	d306      	bcc.n	84fae <__addsf3+0x92>
   84fa0:	0840      	lsrs	r0, r0, #1
   84fa2:	ea4f 0131 	mov.w	r1, r1, rrx
   84fa6:	f102 0201 	add.w	r2, r2, #1
   84faa:	2afe      	cmp	r2, #254	; 0xfe
   84fac:	d251      	bcs.n	85052 <__addsf3+0x136>
   84fae:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   84fb2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   84fb6:	bf08      	it	eq
   84fb8:	f020 0001 	biceq.w	r0, r0, #1
   84fbc:	ea40 0003 	orr.w	r0, r0, r3
   84fc0:	4770      	bx	lr
   84fc2:	0049      	lsls	r1, r1, #1
   84fc4:	eb40 0000 	adc.w	r0, r0, r0
   84fc8:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   84fcc:	f1a2 0201 	sub.w	r2, r2, #1
   84fd0:	d1ed      	bne.n	84fae <__addsf3+0x92>
   84fd2:	fab0 fc80 	clz	ip, r0
   84fd6:	f1ac 0c08 	sub.w	ip, ip, #8
   84fda:	ebb2 020c 	subs.w	r2, r2, ip
   84fde:	fa00 f00c 	lsl.w	r0, r0, ip
   84fe2:	bfaa      	itet	ge
   84fe4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   84fe8:	4252      	neglt	r2, r2
   84fea:	4318      	orrge	r0, r3
   84fec:	bfbc      	itt	lt
   84fee:	40d0      	lsrlt	r0, r2
   84ff0:	4318      	orrlt	r0, r3
   84ff2:	4770      	bx	lr
   84ff4:	f092 0f00 	teq	r2, #0
   84ff8:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   84ffc:	bf06      	itte	eq
   84ffe:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   85002:	3201      	addeq	r2, #1
   85004:	3b01      	subne	r3, #1
   85006:	e7b5      	b.n	84f74 <__addsf3+0x58>
   85008:	ea4f 0341 	mov.w	r3, r1, lsl #1
   8500c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   85010:	bf18      	it	ne
   85012:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   85016:	d021      	beq.n	8505c <__addsf3+0x140>
   85018:	ea92 0f03 	teq	r2, r3
   8501c:	d004      	beq.n	85028 <__addsf3+0x10c>
   8501e:	f092 0f00 	teq	r2, #0
   85022:	bf08      	it	eq
   85024:	4608      	moveq	r0, r1
   85026:	4770      	bx	lr
   85028:	ea90 0f01 	teq	r0, r1
   8502c:	bf1c      	itt	ne
   8502e:	2000      	movne	r0, #0
   85030:	4770      	bxne	lr
   85032:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   85036:	d104      	bne.n	85042 <__addsf3+0x126>
   85038:	0040      	lsls	r0, r0, #1
   8503a:	bf28      	it	cs
   8503c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   85040:	4770      	bx	lr
   85042:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   85046:	bf3c      	itt	cc
   85048:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   8504c:	4770      	bxcc	lr
   8504e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   85052:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   85056:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   8505a:	4770      	bx	lr
   8505c:	ea7f 6222 	mvns.w	r2, r2, asr #24
   85060:	bf16      	itet	ne
   85062:	4608      	movne	r0, r1
   85064:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   85068:	4601      	movne	r1, r0
   8506a:	0242      	lsls	r2, r0, #9
   8506c:	bf06      	itte	eq
   8506e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   85072:	ea90 0f01 	teqeq	r0, r1
   85076:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   8507a:	4770      	bx	lr

0008507c <__aeabi_ui2f>:
   8507c:	f04f 0300 	mov.w	r3, #0
   85080:	e004      	b.n	8508c <__aeabi_i2f+0x8>
   85082:	bf00      	nop

00085084 <__aeabi_i2f>:
   85084:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   85088:	bf48      	it	mi
   8508a:	4240      	negmi	r0, r0
   8508c:	ea5f 0c00 	movs.w	ip, r0
   85090:	bf08      	it	eq
   85092:	4770      	bxeq	lr
   85094:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   85098:	4601      	mov	r1, r0
   8509a:	f04f 0000 	mov.w	r0, #0
   8509e:	e01c      	b.n	850da <__aeabi_l2f+0x2a>

000850a0 <__aeabi_ul2f>:
   850a0:	ea50 0201 	orrs.w	r2, r0, r1
   850a4:	bf08      	it	eq
   850a6:	4770      	bxeq	lr
   850a8:	f04f 0300 	mov.w	r3, #0
   850ac:	e00a      	b.n	850c4 <__aeabi_l2f+0x14>
   850ae:	bf00      	nop

000850b0 <__aeabi_l2f>:
   850b0:	ea50 0201 	orrs.w	r2, r0, r1
   850b4:	bf08      	it	eq
   850b6:	4770      	bxeq	lr
   850b8:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   850bc:	d502      	bpl.n	850c4 <__aeabi_l2f+0x14>
   850be:	4240      	negs	r0, r0
   850c0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   850c4:	ea5f 0c01 	movs.w	ip, r1
   850c8:	bf02      	ittt	eq
   850ca:	4684      	moveq	ip, r0
   850cc:	4601      	moveq	r1, r0
   850ce:	2000      	moveq	r0, #0
   850d0:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   850d4:	bf08      	it	eq
   850d6:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   850da:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   850de:	fabc f28c 	clz	r2, ip
   850e2:	3a08      	subs	r2, #8
   850e4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   850e8:	db10      	blt.n	8510c <__aeabi_l2f+0x5c>
   850ea:	fa01 fc02 	lsl.w	ip, r1, r2
   850ee:	4463      	add	r3, ip
   850f0:	fa00 fc02 	lsl.w	ip, r0, r2
   850f4:	f1c2 0220 	rsb	r2, r2, #32
   850f8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   850fc:	fa20 f202 	lsr.w	r2, r0, r2
   85100:	eb43 0002 	adc.w	r0, r3, r2
   85104:	bf08      	it	eq
   85106:	f020 0001 	biceq.w	r0, r0, #1
   8510a:	4770      	bx	lr
   8510c:	f102 0220 	add.w	r2, r2, #32
   85110:	fa01 fc02 	lsl.w	ip, r1, r2
   85114:	f1c2 0220 	rsb	r2, r2, #32
   85118:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   8511c:	fa21 f202 	lsr.w	r2, r1, r2
   85120:	eb43 0002 	adc.w	r0, r3, r2
   85124:	bf08      	it	eq
   85126:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   8512a:	4770      	bx	lr

0008512c <__aeabi_fmul>:
   8512c:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85130:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   85134:	bf1e      	ittt	ne
   85136:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   8513a:	ea92 0f0c 	teqne	r2, ip
   8513e:	ea93 0f0c 	teqne	r3, ip
   85142:	d06f      	beq.n	85224 <__aeabi_fmul+0xf8>
   85144:	441a      	add	r2, r3
   85146:	ea80 0c01 	eor.w	ip, r0, r1
   8514a:	0240      	lsls	r0, r0, #9
   8514c:	bf18      	it	ne
   8514e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   85152:	d01e      	beq.n	85192 <__aeabi_fmul+0x66>
   85154:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   85158:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   8515c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   85160:	fba0 3101 	umull	r3, r1, r0, r1
   85164:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   85168:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   8516c:	bf3e      	ittt	cc
   8516e:	0049      	lslcc	r1, r1, #1
   85170:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   85174:	005b      	lslcc	r3, r3, #1
   85176:	ea40 0001 	orr.w	r0, r0, r1
   8517a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   8517e:	2afd      	cmp	r2, #253	; 0xfd
   85180:	d81d      	bhi.n	851be <__aeabi_fmul+0x92>
   85182:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   85186:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   8518a:	bf08      	it	eq
   8518c:	f020 0001 	biceq.w	r0, r0, #1
   85190:	4770      	bx	lr
   85192:	f090 0f00 	teq	r0, #0
   85196:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   8519a:	bf08      	it	eq
   8519c:	0249      	lsleq	r1, r1, #9
   8519e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   851a2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   851a6:	3a7f      	subs	r2, #127	; 0x7f
   851a8:	bfc2      	ittt	gt
   851aa:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   851ae:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   851b2:	4770      	bxgt	lr
   851b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   851b8:	f04f 0300 	mov.w	r3, #0
   851bc:	3a01      	subs	r2, #1
   851be:	dc5d      	bgt.n	8527c <__aeabi_fmul+0x150>
   851c0:	f112 0f19 	cmn.w	r2, #25
   851c4:	bfdc      	itt	le
   851c6:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   851ca:	4770      	bxle	lr
   851cc:	f1c2 0200 	rsb	r2, r2, #0
   851d0:	0041      	lsls	r1, r0, #1
   851d2:	fa21 f102 	lsr.w	r1, r1, r2
   851d6:	f1c2 0220 	rsb	r2, r2, #32
   851da:	fa00 fc02 	lsl.w	ip, r0, r2
   851de:	ea5f 0031 	movs.w	r0, r1, rrx
   851e2:	f140 0000 	adc.w	r0, r0, #0
   851e6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   851ea:	bf08      	it	eq
   851ec:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   851f0:	4770      	bx	lr
   851f2:	f092 0f00 	teq	r2, #0
   851f6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   851fa:	bf02      	ittt	eq
   851fc:	0040      	lsleq	r0, r0, #1
   851fe:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   85202:	3a01      	subeq	r2, #1
   85204:	d0f9      	beq.n	851fa <__aeabi_fmul+0xce>
   85206:	ea40 000c 	orr.w	r0, r0, ip
   8520a:	f093 0f00 	teq	r3, #0
   8520e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   85212:	bf02      	ittt	eq
   85214:	0049      	lsleq	r1, r1, #1
   85216:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   8521a:	3b01      	subeq	r3, #1
   8521c:	d0f9      	beq.n	85212 <__aeabi_fmul+0xe6>
   8521e:	ea41 010c 	orr.w	r1, r1, ip
   85222:	e78f      	b.n	85144 <__aeabi_fmul+0x18>
   85224:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   85228:	ea92 0f0c 	teq	r2, ip
   8522c:	bf18      	it	ne
   8522e:	ea93 0f0c 	teqne	r3, ip
   85232:	d00a      	beq.n	8524a <__aeabi_fmul+0x11e>
   85234:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   85238:	bf18      	it	ne
   8523a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   8523e:	d1d8      	bne.n	851f2 <__aeabi_fmul+0xc6>
   85240:	ea80 0001 	eor.w	r0, r0, r1
   85244:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   85248:	4770      	bx	lr
   8524a:	f090 0f00 	teq	r0, #0
   8524e:	bf17      	itett	ne
   85250:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   85254:	4608      	moveq	r0, r1
   85256:	f091 0f00 	teqne	r1, #0
   8525a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   8525e:	d014      	beq.n	8528a <__aeabi_fmul+0x15e>
   85260:	ea92 0f0c 	teq	r2, ip
   85264:	d101      	bne.n	8526a <__aeabi_fmul+0x13e>
   85266:	0242      	lsls	r2, r0, #9
   85268:	d10f      	bne.n	8528a <__aeabi_fmul+0x15e>
   8526a:	ea93 0f0c 	teq	r3, ip
   8526e:	d103      	bne.n	85278 <__aeabi_fmul+0x14c>
   85270:	024b      	lsls	r3, r1, #9
   85272:	bf18      	it	ne
   85274:	4608      	movne	r0, r1
   85276:	d108      	bne.n	8528a <__aeabi_fmul+0x15e>
   85278:	ea80 0001 	eor.w	r0, r0, r1
   8527c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   85280:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   85284:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   85288:	4770      	bx	lr
   8528a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   8528e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   85292:	4770      	bx	lr

00085294 <__aeabi_fdiv>:
   85294:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85298:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   8529c:	bf1e      	ittt	ne
   8529e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   852a2:	ea92 0f0c 	teqne	r2, ip
   852a6:	ea93 0f0c 	teqne	r3, ip
   852aa:	d069      	beq.n	85380 <__aeabi_fdiv+0xec>
   852ac:	eba2 0203 	sub.w	r2, r2, r3
   852b0:	ea80 0c01 	eor.w	ip, r0, r1
   852b4:	0249      	lsls	r1, r1, #9
   852b6:	ea4f 2040 	mov.w	r0, r0, lsl #9
   852ba:	d037      	beq.n	8532c <__aeabi_fdiv+0x98>
   852bc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   852c0:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   852c4:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   852c8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   852cc:	428b      	cmp	r3, r1
   852ce:	bf38      	it	cc
   852d0:	005b      	lslcc	r3, r3, #1
   852d2:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   852d6:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   852da:	428b      	cmp	r3, r1
   852dc:	bf24      	itt	cs
   852de:	1a5b      	subcs	r3, r3, r1
   852e0:	ea40 000c 	orrcs.w	r0, r0, ip
   852e4:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   852e8:	bf24      	itt	cs
   852ea:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   852ee:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   852f2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   852f6:	bf24      	itt	cs
   852f8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   852fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85300:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   85304:	bf24      	itt	cs
   85306:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   8530a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   8530e:	011b      	lsls	r3, r3, #4
   85310:	bf18      	it	ne
   85312:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   85316:	d1e0      	bne.n	852da <__aeabi_fdiv+0x46>
   85318:	2afd      	cmp	r2, #253	; 0xfd
   8531a:	f63f af50 	bhi.w	851be <__aeabi_fmul+0x92>
   8531e:	428b      	cmp	r3, r1
   85320:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   85324:	bf08      	it	eq
   85326:	f020 0001 	biceq.w	r0, r0, #1
   8532a:	4770      	bx	lr
   8532c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   85330:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   85334:	327f      	adds	r2, #127	; 0x7f
   85336:	bfc2      	ittt	gt
   85338:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   8533c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   85340:	4770      	bxgt	lr
   85342:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   85346:	f04f 0300 	mov.w	r3, #0
   8534a:	3a01      	subs	r2, #1
   8534c:	e737      	b.n	851be <__aeabi_fmul+0x92>
   8534e:	f092 0f00 	teq	r2, #0
   85352:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   85356:	bf02      	ittt	eq
   85358:	0040      	lsleq	r0, r0, #1
   8535a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   8535e:	3a01      	subeq	r2, #1
   85360:	d0f9      	beq.n	85356 <__aeabi_fdiv+0xc2>
   85362:	ea40 000c 	orr.w	r0, r0, ip
   85366:	f093 0f00 	teq	r3, #0
   8536a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   8536e:	bf02      	ittt	eq
   85370:	0049      	lsleq	r1, r1, #1
   85372:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   85376:	3b01      	subeq	r3, #1
   85378:	d0f9      	beq.n	8536e <__aeabi_fdiv+0xda>
   8537a:	ea41 010c 	orr.w	r1, r1, ip
   8537e:	e795      	b.n	852ac <__aeabi_fdiv+0x18>
   85380:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   85384:	ea92 0f0c 	teq	r2, ip
   85388:	d108      	bne.n	8539c <__aeabi_fdiv+0x108>
   8538a:	0242      	lsls	r2, r0, #9
   8538c:	f47f af7d 	bne.w	8528a <__aeabi_fmul+0x15e>
   85390:	ea93 0f0c 	teq	r3, ip
   85394:	f47f af70 	bne.w	85278 <__aeabi_fmul+0x14c>
   85398:	4608      	mov	r0, r1
   8539a:	e776      	b.n	8528a <__aeabi_fmul+0x15e>
   8539c:	ea93 0f0c 	teq	r3, ip
   853a0:	d104      	bne.n	853ac <__aeabi_fdiv+0x118>
   853a2:	024b      	lsls	r3, r1, #9
   853a4:	f43f af4c 	beq.w	85240 <__aeabi_fmul+0x114>
   853a8:	4608      	mov	r0, r1
   853aa:	e76e      	b.n	8528a <__aeabi_fmul+0x15e>
   853ac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   853b0:	bf18      	it	ne
   853b2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   853b6:	d1ca      	bne.n	8534e <__aeabi_fdiv+0xba>
   853b8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   853bc:	f47f af5c 	bne.w	85278 <__aeabi_fmul+0x14c>
   853c0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   853c4:	f47f af3c 	bne.w	85240 <__aeabi_fmul+0x114>
   853c8:	e75f      	b.n	8528a <__aeabi_fmul+0x15e>
   853ca:	bf00      	nop

000853cc <__gesf2>:
   853cc:	f04f 3cff 	mov.w	ip, #4294967295
   853d0:	e006      	b.n	853e0 <__cmpsf2+0x4>
   853d2:	bf00      	nop

000853d4 <__lesf2>:
   853d4:	f04f 0c01 	mov.w	ip, #1
   853d8:	e002      	b.n	853e0 <__cmpsf2+0x4>
   853da:	bf00      	nop

000853dc <__cmpsf2>:
   853dc:	f04f 0c01 	mov.w	ip, #1
   853e0:	f84d cd04 	str.w	ip, [sp, #-4]!
   853e4:	ea4f 0240 	mov.w	r2, r0, lsl #1
   853e8:	ea4f 0341 	mov.w	r3, r1, lsl #1
   853ec:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   853f0:	bf18      	it	ne
   853f2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   853f6:	d011      	beq.n	8541c <__cmpsf2+0x40>
   853f8:	b001      	add	sp, #4
   853fa:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
   853fe:	bf18      	it	ne
   85400:	ea90 0f01 	teqne	r0, r1
   85404:	bf58      	it	pl
   85406:	ebb2 0003 	subspl.w	r0, r2, r3
   8540a:	bf88      	it	hi
   8540c:	17c8      	asrhi	r0, r1, #31
   8540e:	bf38      	it	cc
   85410:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
   85414:	bf18      	it	ne
   85416:	f040 0001 	orrne.w	r0, r0, #1
   8541a:	4770      	bx	lr
   8541c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   85420:	d102      	bne.n	85428 <__cmpsf2+0x4c>
   85422:	ea5f 2c40 	movs.w	ip, r0, lsl #9
   85426:	d105      	bne.n	85434 <__cmpsf2+0x58>
   85428:	ea7f 6c23 	mvns.w	ip, r3, asr #24
   8542c:	d1e4      	bne.n	853f8 <__cmpsf2+0x1c>
   8542e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
   85432:	d0e1      	beq.n	853f8 <__cmpsf2+0x1c>
   85434:	f85d 0b04 	ldr.w	r0, [sp], #4
   85438:	4770      	bx	lr
   8543a:	bf00      	nop

0008543c <__aeabi_cfrcmple>:
   8543c:	4684      	mov	ip, r0
   8543e:	4608      	mov	r0, r1
   85440:	4661      	mov	r1, ip
   85442:	e7ff      	b.n	85444 <__aeabi_cfcmpeq>

00085444 <__aeabi_cfcmpeq>:
   85444:	b50f      	push	{r0, r1, r2, r3, lr}
   85446:	f7ff ffc9 	bl	853dc <__cmpsf2>
   8544a:	2800      	cmp	r0, #0
   8544c:	bf48      	it	mi
   8544e:	f110 0f00 	cmnmi.w	r0, #0
   85452:	bd0f      	pop	{r0, r1, r2, r3, pc}

00085454 <__aeabi_fcmpeq>:
   85454:	f84d ed08 	str.w	lr, [sp, #-8]!
   85458:	f7ff fff4 	bl	85444 <__aeabi_cfcmpeq>
   8545c:	bf0c      	ite	eq
   8545e:	2001      	moveq	r0, #1
   85460:	2000      	movne	r0, #0
   85462:	f85d fb08 	ldr.w	pc, [sp], #8
   85466:	bf00      	nop

00085468 <__aeabi_fcmplt>:
   85468:	f84d ed08 	str.w	lr, [sp, #-8]!
   8546c:	f7ff ffea 	bl	85444 <__aeabi_cfcmpeq>
   85470:	bf34      	ite	cc
   85472:	2001      	movcc	r0, #1
   85474:	2000      	movcs	r0, #0
   85476:	f85d fb08 	ldr.w	pc, [sp], #8
   8547a:	bf00      	nop

0008547c <__aeabi_fcmple>:
   8547c:	f84d ed08 	str.w	lr, [sp, #-8]!
   85480:	f7ff ffe0 	bl	85444 <__aeabi_cfcmpeq>
   85484:	bf94      	ite	ls
   85486:	2001      	movls	r0, #1
   85488:	2000      	movhi	r0, #0
   8548a:	f85d fb08 	ldr.w	pc, [sp], #8
   8548e:	bf00      	nop

00085490 <__aeabi_fcmpge>:
   85490:	f84d ed08 	str.w	lr, [sp, #-8]!
   85494:	f7ff ffd2 	bl	8543c <__aeabi_cfrcmple>
   85498:	bf94      	ite	ls
   8549a:	2001      	movls	r0, #1
   8549c:	2000      	movhi	r0, #0
   8549e:	f85d fb08 	ldr.w	pc, [sp], #8
   854a2:	bf00      	nop

000854a4 <__aeabi_fcmpgt>:
   854a4:	f84d ed08 	str.w	lr, [sp, #-8]!
   854a8:	f7ff ffc8 	bl	8543c <__aeabi_cfrcmple>
   854ac:	bf34      	ite	cc
   854ae:	2001      	movcc	r0, #1
   854b0:	2000      	movcs	r0, #0
   854b2:	f85d fb08 	ldr.w	pc, [sp], #8
   854b6:	bf00      	nop

000854b8 <__aeabi_f2iz>:
   854b8:	ea4f 0240 	mov.w	r2, r0, lsl #1
   854bc:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   854c0:	d30f      	bcc.n	854e2 <__aeabi_f2iz+0x2a>
   854c2:	f04f 039e 	mov.w	r3, #158	; 0x9e
   854c6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   854ca:	d90d      	bls.n	854e8 <__aeabi_f2iz+0x30>
   854cc:	ea4f 2300 	mov.w	r3, r0, lsl #8
   854d0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   854d4:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   854d8:	fa23 f002 	lsr.w	r0, r3, r2
   854dc:	bf18      	it	ne
   854de:	4240      	negne	r0, r0
   854e0:	4770      	bx	lr
   854e2:	f04f 0000 	mov.w	r0, #0
   854e6:	4770      	bx	lr
   854e8:	f112 0f61 	cmn.w	r2, #97	; 0x61
   854ec:	d101      	bne.n	854f2 <__aeabi_f2iz+0x3a>
   854ee:	0242      	lsls	r2, r0, #9
   854f0:	d105      	bne.n	854fe <__aeabi_f2iz+0x46>
   854f2:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   854f6:	bf08      	it	eq
   854f8:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   854fc:	4770      	bx	lr
   854fe:	f04f 0000 	mov.w	r0, #0
   85502:	4770      	bx	lr

00085504 <__libc_init_array>:
   85504:	b570      	push	{r4, r5, r6, lr}
   85506:	4e0f      	ldr	r6, [pc, #60]	; (85544 <__libc_init_array+0x40>)
   85508:	4d0f      	ldr	r5, [pc, #60]	; (85548 <__libc_init_array+0x44>)
   8550a:	1b76      	subs	r6, r6, r5
   8550c:	10b6      	asrs	r6, r6, #2
   8550e:	bf18      	it	ne
   85510:	2400      	movne	r4, #0
   85512:	d005      	beq.n	85520 <__libc_init_array+0x1c>
   85514:	3401      	adds	r4, #1
   85516:	f855 3b04 	ldr.w	r3, [r5], #4
   8551a:	4798      	blx	r3
   8551c:	42a6      	cmp	r6, r4
   8551e:	d1f9      	bne.n	85514 <__libc_init_array+0x10>
   85520:	4e0a      	ldr	r6, [pc, #40]	; (8554c <__libc_init_array+0x48>)
   85522:	4d0b      	ldr	r5, [pc, #44]	; (85550 <__libc_init_array+0x4c>)
   85524:	f004 fa60 	bl	899e8 <_init>
   85528:	1b76      	subs	r6, r6, r5
   8552a:	10b6      	asrs	r6, r6, #2
   8552c:	bf18      	it	ne
   8552e:	2400      	movne	r4, #0
   85530:	d006      	beq.n	85540 <__libc_init_array+0x3c>
   85532:	3401      	adds	r4, #1
   85534:	f855 3b04 	ldr.w	r3, [r5], #4
   85538:	4798      	blx	r3
   8553a:	42a6      	cmp	r6, r4
   8553c:	d1f9      	bne.n	85532 <__libc_init_array+0x2e>
   8553e:	bd70      	pop	{r4, r5, r6, pc}
   85540:	bd70      	pop	{r4, r5, r6, pc}
   85542:	bf00      	nop
   85544:	000899f4 	.word	0x000899f4
   85548:	000899f4 	.word	0x000899f4
   8554c:	000899fc 	.word	0x000899fc
   85550:	000899f4 	.word	0x000899f4

00085554 <memset>:
   85554:	b470      	push	{r4, r5, r6}
   85556:	0786      	lsls	r6, r0, #30
   85558:	d046      	beq.n	855e8 <memset+0x94>
   8555a:	1e54      	subs	r4, r2, #1
   8555c:	2a00      	cmp	r2, #0
   8555e:	d041      	beq.n	855e4 <memset+0x90>
   85560:	b2ca      	uxtb	r2, r1
   85562:	4603      	mov	r3, r0
   85564:	e002      	b.n	8556c <memset+0x18>
   85566:	f114 34ff 	adds.w	r4, r4, #4294967295
   8556a:	d33b      	bcc.n	855e4 <memset+0x90>
   8556c:	f803 2b01 	strb.w	r2, [r3], #1
   85570:	079d      	lsls	r5, r3, #30
   85572:	d1f8      	bne.n	85566 <memset+0x12>
   85574:	2c03      	cmp	r4, #3
   85576:	d92e      	bls.n	855d6 <memset+0x82>
   85578:	b2cd      	uxtb	r5, r1
   8557a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8557e:	2c0f      	cmp	r4, #15
   85580:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   85584:	d919      	bls.n	855ba <memset+0x66>
   85586:	4626      	mov	r6, r4
   85588:	f103 0210 	add.w	r2, r3, #16
   8558c:	3e10      	subs	r6, #16
   8558e:	2e0f      	cmp	r6, #15
   85590:	f842 5c10 	str.w	r5, [r2, #-16]
   85594:	f842 5c0c 	str.w	r5, [r2, #-12]
   85598:	f842 5c08 	str.w	r5, [r2, #-8]
   8559c:	f842 5c04 	str.w	r5, [r2, #-4]
   855a0:	f102 0210 	add.w	r2, r2, #16
   855a4:	d8f2      	bhi.n	8558c <memset+0x38>
   855a6:	f1a4 0210 	sub.w	r2, r4, #16
   855aa:	f022 020f 	bic.w	r2, r2, #15
   855ae:	f004 040f 	and.w	r4, r4, #15
   855b2:	3210      	adds	r2, #16
   855b4:	2c03      	cmp	r4, #3
   855b6:	4413      	add	r3, r2
   855b8:	d90d      	bls.n	855d6 <memset+0x82>
   855ba:	461e      	mov	r6, r3
   855bc:	4622      	mov	r2, r4
   855be:	3a04      	subs	r2, #4
   855c0:	2a03      	cmp	r2, #3
   855c2:	f846 5b04 	str.w	r5, [r6], #4
   855c6:	d8fa      	bhi.n	855be <memset+0x6a>
   855c8:	1f22      	subs	r2, r4, #4
   855ca:	f022 0203 	bic.w	r2, r2, #3
   855ce:	3204      	adds	r2, #4
   855d0:	4413      	add	r3, r2
   855d2:	f004 0403 	and.w	r4, r4, #3
   855d6:	b12c      	cbz	r4, 855e4 <memset+0x90>
   855d8:	b2c9      	uxtb	r1, r1
   855da:	441c      	add	r4, r3
   855dc:	f803 1b01 	strb.w	r1, [r3], #1
   855e0:	429c      	cmp	r4, r3
   855e2:	d1fb      	bne.n	855dc <memset+0x88>
   855e4:	bc70      	pop	{r4, r5, r6}
   855e6:	4770      	bx	lr
   855e8:	4614      	mov	r4, r2
   855ea:	4603      	mov	r3, r0
   855ec:	e7c2      	b.n	85574 <memset+0x20>
   855ee:	bf00      	nop

000855f0 <sprintf>:
   855f0:	b40e      	push	{r1, r2, r3}
   855f2:	4601      	mov	r1, r0
   855f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   855f6:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   855fa:	f44f 7702 	mov.w	r7, #520	; 0x208
   855fe:	f64f 76ff 	movw	r6, #65535	; 0xffff
   85602:	b09c      	sub	sp, #112	; 0x70
   85604:	ac21      	add	r4, sp, #132	; 0x84
   85606:	f854 2b04 	ldr.w	r2, [r4], #4
   8560a:	4b0b      	ldr	r3, [pc, #44]	; (85638 <sprintf+0x48>)
   8560c:	9102      	str	r1, [sp, #8]
   8560e:	9106      	str	r1, [sp, #24]
   85610:	6818      	ldr	r0, [r3, #0]
   85612:	a902      	add	r1, sp, #8
   85614:	4623      	mov	r3, r4
   85616:	9401      	str	r4, [sp, #4]
   85618:	f8ad 7014 	strh.w	r7, [sp, #20]
   8561c:	9504      	str	r5, [sp, #16]
   8561e:	9507      	str	r5, [sp, #28]
   85620:	f8ad 6016 	strh.w	r6, [sp, #22]
   85624:	f000 f838 	bl	85698 <_svfprintf_r>
   85628:	2200      	movs	r2, #0
   8562a:	9b02      	ldr	r3, [sp, #8]
   8562c:	701a      	strb	r2, [r3, #0]
   8562e:	b01c      	add	sp, #112	; 0x70
   85630:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   85634:	b003      	add	sp, #12
   85636:	4770      	bx	lr
   85638:	200701a4 	.word	0x200701a4

0008563c <strlen>:
   8563c:	f020 0103 	bic.w	r1, r0, #3
   85640:	f010 0003 	ands.w	r0, r0, #3
   85644:	f1c0 0000 	rsb	r0, r0, #0
   85648:	f851 3b04 	ldr.w	r3, [r1], #4
   8564c:	f100 0c04 	add.w	ip, r0, #4
   85650:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   85654:	f06f 0200 	mvn.w	r2, #0
   85658:	bf1c      	itt	ne
   8565a:	fa22 f20c 	lsrne.w	r2, r2, ip
   8565e:	4313      	orrne	r3, r2
   85660:	f04f 0c01 	mov.w	ip, #1
   85664:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   85668:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   8566c:	eba3 020c 	sub.w	r2, r3, ip
   85670:	ea22 0203 	bic.w	r2, r2, r3
   85674:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   85678:	bf04      	itt	eq
   8567a:	f851 3b04 	ldreq.w	r3, [r1], #4
   8567e:	3004      	addeq	r0, #4
   85680:	d0f4      	beq.n	8566c <strlen+0x30>
   85682:	f1c2 0100 	rsb	r1, r2, #0
   85686:	ea02 0201 	and.w	r2, r2, r1
   8568a:	fab2 f282 	clz	r2, r2
   8568e:	f1c2 021f 	rsb	r2, r2, #31
   85692:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   85696:	4770      	bx	lr

00085698 <_svfprintf_r>:
   85698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8569c:	b0c3      	sub	sp, #268	; 0x10c
   8569e:	460c      	mov	r4, r1
   856a0:	910b      	str	r1, [sp, #44]	; 0x2c
   856a2:	4692      	mov	sl, r2
   856a4:	930f      	str	r3, [sp, #60]	; 0x3c
   856a6:	900c      	str	r0, [sp, #48]	; 0x30
   856a8:	f002 fa56 	bl	87b58 <_localeconv_r>
   856ac:	6803      	ldr	r3, [r0, #0]
   856ae:	4618      	mov	r0, r3
   856b0:	931a      	str	r3, [sp, #104]	; 0x68
   856b2:	f7ff ffc3 	bl	8563c <strlen>
   856b6:	89a3      	ldrh	r3, [r4, #12]
   856b8:	9019      	str	r0, [sp, #100]	; 0x64
   856ba:	0619      	lsls	r1, r3, #24
   856bc:	d503      	bpl.n	856c6 <_svfprintf_r+0x2e>
   856be:	6923      	ldr	r3, [r4, #16]
   856c0:	2b00      	cmp	r3, #0
   856c2:	f001 8035 	beq.w	86730 <_svfprintf_r+0x1098>
   856c6:	2300      	movs	r3, #0
   856c8:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   856cc:	46c8      	mov	r8, r9
   856ce:	9315      	str	r3, [sp, #84]	; 0x54
   856d0:	9313      	str	r3, [sp, #76]	; 0x4c
   856d2:	9314      	str	r3, [sp, #80]	; 0x50
   856d4:	9318      	str	r3, [sp, #96]	; 0x60
   856d6:	931b      	str	r3, [sp, #108]	; 0x6c
   856d8:	9309      	str	r3, [sp, #36]	; 0x24
   856da:	9316      	str	r3, [sp, #88]	; 0x58
   856dc:	9317      	str	r3, [sp, #92]	; 0x5c
   856de:	9327      	str	r3, [sp, #156]	; 0x9c
   856e0:	9326      	str	r3, [sp, #152]	; 0x98
   856e2:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   856e6:	f89a 3000 	ldrb.w	r3, [sl]
   856ea:	4654      	mov	r4, sl
   856ec:	b1eb      	cbz	r3, 8572a <_svfprintf_r+0x92>
   856ee:	2b25      	cmp	r3, #37	; 0x25
   856f0:	d102      	bne.n	856f8 <_svfprintf_r+0x60>
   856f2:	e01a      	b.n	8572a <_svfprintf_r+0x92>
   856f4:	2b25      	cmp	r3, #37	; 0x25
   856f6:	d003      	beq.n	85700 <_svfprintf_r+0x68>
   856f8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   856fc:	2b00      	cmp	r3, #0
   856fe:	d1f9      	bne.n	856f4 <_svfprintf_r+0x5c>
   85700:	eba4 050a 	sub.w	r5, r4, sl
   85704:	b18d      	cbz	r5, 8572a <_svfprintf_r+0x92>
   85706:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85708:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8570a:	3301      	adds	r3, #1
   8570c:	442a      	add	r2, r5
   8570e:	2b07      	cmp	r3, #7
   85710:	f8c8 a000 	str.w	sl, [r8]
   85714:	f8c8 5004 	str.w	r5, [r8, #4]
   85718:	9227      	str	r2, [sp, #156]	; 0x9c
   8571a:	9326      	str	r3, [sp, #152]	; 0x98
   8571c:	f300 808a 	bgt.w	85834 <_svfprintf_r+0x19c>
   85720:	f108 0808 	add.w	r8, r8, #8
   85724:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85726:	442b      	add	r3, r5
   85728:	9309      	str	r3, [sp, #36]	; 0x24
   8572a:	7823      	ldrb	r3, [r4, #0]
   8572c:	2b00      	cmp	r3, #0
   8572e:	f000 8089 	beq.w	85844 <_svfprintf_r+0x1ac>
   85732:	2300      	movs	r3, #0
   85734:	f04f 30ff 	mov.w	r0, #4294967295
   85738:	461a      	mov	r2, r3
   8573a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8573e:	4619      	mov	r1, r3
   85740:	930d      	str	r3, [sp, #52]	; 0x34
   85742:	469b      	mov	fp, r3
   85744:	7863      	ldrb	r3, [r4, #1]
   85746:	f104 0a01 	add.w	sl, r4, #1
   8574a:	900a      	str	r0, [sp, #40]	; 0x28
   8574c:	f10a 0a01 	add.w	sl, sl, #1
   85750:	f1a3 0020 	sub.w	r0, r3, #32
   85754:	2858      	cmp	r0, #88	; 0x58
   85756:	f200 83b7 	bhi.w	85ec8 <_svfprintf_r+0x830>
   8575a:	e8df f010 	tbh	[pc, r0, lsl #1]
   8575e:	034c      	.short	0x034c
   85760:	03b503b5 	.word	0x03b503b5
   85764:	03b50354 	.word	0x03b50354
   85768:	03b503b5 	.word	0x03b503b5
   8576c:	03b503b5 	.word	0x03b503b5
   85770:	005903b5 	.word	0x005903b5
   85774:	03b50359 	.word	0x03b50359
   85778:	02140066 	.word	0x02140066
   8577c:	022f03b5 	.word	0x022f03b5
   85780:	03a503a5 	.word	0x03a503a5
   85784:	03a503a5 	.word	0x03a503a5
   85788:	03a503a5 	.word	0x03a503a5
   8578c:	03a503a5 	.word	0x03a503a5
   85790:	03b503a5 	.word	0x03b503a5
   85794:	03b503b5 	.word	0x03b503b5
   85798:	03b503b5 	.word	0x03b503b5
   8579c:	03b503b5 	.word	0x03b503b5
   857a0:	03b503b5 	.word	0x03b503b5
   857a4:	028b03b5 	.word	0x028b03b5
   857a8:	03b502d3 	.word	0x03b502d3
   857ac:	03b502d3 	.word	0x03b502d3
   857b0:	03b503b5 	.word	0x03b503b5
   857b4:	031b03b5 	.word	0x031b03b5
   857b8:	03b503b5 	.word	0x03b503b5
   857bc:	03b50320 	.word	0x03b50320
   857c0:	03b503b5 	.word	0x03b503b5
   857c4:	03b503b5 	.word	0x03b503b5
   857c8:	03b50234 	.word	0x03b50234
   857cc:	024b03b5 	.word	0x024b03b5
   857d0:	03b503b5 	.word	0x03b503b5
   857d4:	03b503b5 	.word	0x03b503b5
   857d8:	03b503b5 	.word	0x03b503b5
   857dc:	03b503b5 	.word	0x03b503b5
   857e0:	03b503b5 	.word	0x03b503b5
   857e4:	039e0276 	.word	0x039e0276
   857e8:	02d302d3 	.word	0x02d302d3
   857ec:	036302d3 	.word	0x036302d3
   857f0:	03b5039e 	.word	0x03b5039e
   857f4:	036803b5 	.word	0x036803b5
   857f8:	037503b5 	.word	0x037503b5
   857fc:	038c01dd 	.word	0x038c01dd
   85800:	03b5035e 	.word	0x03b5035e
   85804:	03b501f2 	.word	0x03b501f2
   85808:	03b50087 	.word	0x03b50087
   8580c:	033203b5 	.word	0x033203b5
   85810:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85812:	6823      	ldr	r3, [r4, #0]
   85814:	4618      	mov	r0, r3
   85816:	930d      	str	r3, [sp, #52]	; 0x34
   85818:	4623      	mov	r3, r4
   8581a:	2800      	cmp	r0, #0
   8581c:	f103 0304 	add.w	r3, r3, #4
   85820:	930f      	str	r3, [sp, #60]	; 0x3c
   85822:	da04      	bge.n	8582e <_svfprintf_r+0x196>
   85824:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85826:	425b      	negs	r3, r3
   85828:	930d      	str	r3, [sp, #52]	; 0x34
   8582a:	f04b 0b04 	orr.w	fp, fp, #4
   8582e:	f89a 3000 	ldrb.w	r3, [sl]
   85832:	e78b      	b.n	8574c <_svfprintf_r+0xb4>
   85834:	aa25      	add	r2, sp, #148	; 0x94
   85836:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85838:	980c      	ldr	r0, [sp, #48]	; 0x30
   8583a:	f003 f817 	bl	8886c <__ssprint_r>
   8583e:	b940      	cbnz	r0, 85852 <_svfprintf_r+0x1ba>
   85840:	46c8      	mov	r8, r9
   85842:	e76f      	b.n	85724 <_svfprintf_r+0x8c>
   85844:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   85846:	b123      	cbz	r3, 85852 <_svfprintf_r+0x1ba>
   85848:	980c      	ldr	r0, [sp, #48]	; 0x30
   8584a:	aa25      	add	r2, sp, #148	; 0x94
   8584c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8584e:	f003 f80d 	bl	8886c <__ssprint_r>
   85852:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85854:	899b      	ldrh	r3, [r3, #12]
   85856:	f013 0f40 	tst.w	r3, #64	; 0x40
   8585a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8585c:	bf18      	it	ne
   8585e:	f04f 33ff 	movne.w	r3, #4294967295
   85862:	9309      	str	r3, [sp, #36]	; 0x24
   85864:	9809      	ldr	r0, [sp, #36]	; 0x24
   85866:	b043      	add	sp, #268	; 0x10c
   85868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8586c:	f01b 0f20 	tst.w	fp, #32
   85870:	9311      	str	r3, [sp, #68]	; 0x44
   85872:	f040 81af 	bne.w	85bd4 <_svfprintf_r+0x53c>
   85876:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85878:	f01b 0f10 	tst.w	fp, #16
   8587c:	4613      	mov	r3, r2
   8587e:	f040 859a 	bne.w	863b6 <_svfprintf_r+0xd1e>
   85882:	f01b 0f40 	tst.w	fp, #64	; 0x40
   85886:	f000 8596 	beq.w	863b6 <_svfprintf_r+0xd1e>
   8588a:	2500      	movs	r5, #0
   8588c:	2301      	movs	r3, #1
   8588e:	8814      	ldrh	r4, [r2, #0]
   85890:	3204      	adds	r2, #4
   85892:	920f      	str	r2, [sp, #60]	; 0x3c
   85894:	2200      	movs	r2, #0
   85896:	4617      	mov	r7, r2
   85898:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   8589c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8589e:	1c4a      	adds	r2, r1, #1
   858a0:	f000 8210 	beq.w	85cc4 <_svfprintf_r+0x62c>
   858a4:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   858a8:	9207      	str	r2, [sp, #28]
   858aa:	ea54 0205 	orrs.w	r2, r4, r5
   858ae:	f040 820f 	bne.w	85cd0 <_svfprintf_r+0x638>
   858b2:	2900      	cmp	r1, #0
   858b4:	f040 8431 	bne.w	8611a <_svfprintf_r+0xa82>
   858b8:	2b00      	cmp	r3, #0
   858ba:	f040 8539 	bne.w	86330 <_svfprintf_r+0xc98>
   858be:	f01b 0301 	ands.w	r3, fp, #1
   858c2:	930e      	str	r3, [sp, #56]	; 0x38
   858c4:	f000 8662 	beq.w	8658c <_svfprintf_r+0xef4>
   858c8:	2330      	movs	r3, #48	; 0x30
   858ca:	ae42      	add	r6, sp, #264	; 0x108
   858cc:	f806 3d41 	strb.w	r3, [r6, #-65]!
   858d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   858d2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   858d4:	4293      	cmp	r3, r2
   858d6:	bfb8      	it	lt
   858d8:	4613      	movlt	r3, r2
   858da:	9308      	str	r3, [sp, #32]
   858dc:	2300      	movs	r3, #0
   858de:	9312      	str	r3, [sp, #72]	; 0x48
   858e0:	b117      	cbz	r7, 858e8 <_svfprintf_r+0x250>
   858e2:	9b08      	ldr	r3, [sp, #32]
   858e4:	3301      	adds	r3, #1
   858e6:	9308      	str	r3, [sp, #32]
   858e8:	9b07      	ldr	r3, [sp, #28]
   858ea:	f013 0302 	ands.w	r3, r3, #2
   858ee:	9310      	str	r3, [sp, #64]	; 0x40
   858f0:	d002      	beq.n	858f8 <_svfprintf_r+0x260>
   858f2:	9b08      	ldr	r3, [sp, #32]
   858f4:	3302      	adds	r3, #2
   858f6:	9308      	str	r3, [sp, #32]
   858f8:	9b07      	ldr	r3, [sp, #28]
   858fa:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   858fe:	f040 8310 	bne.w	85f22 <_svfprintf_r+0x88a>
   85902:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85904:	9a08      	ldr	r2, [sp, #32]
   85906:	eba3 0b02 	sub.w	fp, r3, r2
   8590a:	f1bb 0f00 	cmp.w	fp, #0
   8590e:	f340 8308 	ble.w	85f22 <_svfprintf_r+0x88a>
   85912:	f1bb 0f10 	cmp.w	fp, #16
   85916:	f340 87b2 	ble.w	8687e <_svfprintf_r+0x11e6>
   8591a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8591c:	4643      	mov	r3, r8
   8591e:	4621      	mov	r1, r4
   85920:	46a8      	mov	r8, r5
   85922:	2710      	movs	r7, #16
   85924:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85926:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   85928:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8592a:	e006      	b.n	8593a <_svfprintf_r+0x2a2>
   8592c:	f1ab 0b10 	sub.w	fp, fp, #16
   85930:	f1bb 0f10 	cmp.w	fp, #16
   85934:	f103 0308 	add.w	r3, r3, #8
   85938:	dd18      	ble.n	8596c <_svfprintf_r+0x2d4>
   8593a:	3201      	adds	r2, #1
   8593c:	48ab      	ldr	r0, [pc, #684]	; (85bec <_svfprintf_r+0x554>)
   8593e:	3110      	adds	r1, #16
   85940:	2a07      	cmp	r2, #7
   85942:	9127      	str	r1, [sp, #156]	; 0x9c
   85944:	9226      	str	r2, [sp, #152]	; 0x98
   85946:	e883 0081 	stmia.w	r3, {r0, r7}
   8594a:	ddef      	ble.n	8592c <_svfprintf_r+0x294>
   8594c:	aa25      	add	r2, sp, #148	; 0x94
   8594e:	4629      	mov	r1, r5
   85950:	4620      	mov	r0, r4
   85952:	f002 ff8b 	bl	8886c <__ssprint_r>
   85956:	2800      	cmp	r0, #0
   85958:	f47f af7b 	bne.w	85852 <_svfprintf_r+0x1ba>
   8595c:	f1ab 0b10 	sub.w	fp, fp, #16
   85960:	f1bb 0f10 	cmp.w	fp, #16
   85964:	464b      	mov	r3, r9
   85966:	9927      	ldr	r1, [sp, #156]	; 0x9c
   85968:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8596a:	dce6      	bgt.n	8593a <_svfprintf_r+0x2a2>
   8596c:	4645      	mov	r5, r8
   8596e:	460c      	mov	r4, r1
   85970:	4698      	mov	r8, r3
   85972:	3201      	adds	r2, #1
   85974:	4b9d      	ldr	r3, [pc, #628]	; (85bec <_svfprintf_r+0x554>)
   85976:	445c      	add	r4, fp
   85978:	2a07      	cmp	r2, #7
   8597a:	9427      	str	r4, [sp, #156]	; 0x9c
   8597c:	9226      	str	r2, [sp, #152]	; 0x98
   8597e:	e888 0808 	stmia.w	r8, {r3, fp}
   85982:	f300 82c3 	bgt.w	85f0c <_svfprintf_r+0x874>
   85986:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8598a:	f108 0808 	add.w	r8, r8, #8
   8598e:	b187      	cbz	r7, 859b2 <_svfprintf_r+0x31a>
   85990:	2101      	movs	r1, #1
   85992:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85994:	440c      	add	r4, r1
   85996:	440b      	add	r3, r1
   85998:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   8599c:	2b07      	cmp	r3, #7
   8599e:	9427      	str	r4, [sp, #156]	; 0x9c
   859a0:	9326      	str	r3, [sp, #152]	; 0x98
   859a2:	f8c8 1004 	str.w	r1, [r8, #4]
   859a6:	f8c8 2000 	str.w	r2, [r8]
   859aa:	f300 83cd 	bgt.w	86148 <_svfprintf_r+0xab0>
   859ae:	f108 0808 	add.w	r8, r8, #8
   859b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   859b4:	b17b      	cbz	r3, 859d6 <_svfprintf_r+0x33e>
   859b6:	2102      	movs	r1, #2
   859b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   859ba:	440c      	add	r4, r1
   859bc:	3301      	adds	r3, #1
   859be:	aa1e      	add	r2, sp, #120	; 0x78
   859c0:	2b07      	cmp	r3, #7
   859c2:	9427      	str	r4, [sp, #156]	; 0x9c
   859c4:	9326      	str	r3, [sp, #152]	; 0x98
   859c6:	f8c8 1004 	str.w	r1, [r8, #4]
   859ca:	f8c8 2000 	str.w	r2, [r8]
   859ce:	f300 8411 	bgt.w	861f4 <_svfprintf_r+0xb5c>
   859d2:	f108 0808 	add.w	r8, r8, #8
   859d6:	2d80      	cmp	r5, #128	; 0x80
   859d8:	f000 8304 	beq.w	85fe4 <_svfprintf_r+0x94c>
   859dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   859de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   859e0:	1a9f      	subs	r7, r3, r2
   859e2:	2f00      	cmp	r7, #0
   859e4:	dd37      	ble.n	85a56 <_svfprintf_r+0x3be>
   859e6:	2f10      	cmp	r7, #16
   859e8:	f340 8679 	ble.w	866de <_svfprintf_r+0x1046>
   859ec:	4d80      	ldr	r5, [pc, #512]	; (85bf0 <_svfprintf_r+0x558>)
   859ee:	4642      	mov	r2, r8
   859f0:	4621      	mov	r1, r4
   859f2:	46b0      	mov	r8, r6
   859f4:	f04f 0b10 	mov.w	fp, #16
   859f8:	462e      	mov	r6, r5
   859fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   859fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   859fe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   85a00:	e004      	b.n	85a0c <_svfprintf_r+0x374>
   85a02:	3f10      	subs	r7, #16
   85a04:	2f10      	cmp	r7, #16
   85a06:	f102 0208 	add.w	r2, r2, #8
   85a0a:	dd15      	ble.n	85a38 <_svfprintf_r+0x3a0>
   85a0c:	3301      	adds	r3, #1
   85a0e:	3110      	adds	r1, #16
   85a10:	2b07      	cmp	r3, #7
   85a12:	9127      	str	r1, [sp, #156]	; 0x9c
   85a14:	9326      	str	r3, [sp, #152]	; 0x98
   85a16:	e882 0840 	stmia.w	r2, {r6, fp}
   85a1a:	ddf2      	ble.n	85a02 <_svfprintf_r+0x36a>
   85a1c:	aa25      	add	r2, sp, #148	; 0x94
   85a1e:	4629      	mov	r1, r5
   85a20:	4620      	mov	r0, r4
   85a22:	f002 ff23 	bl	8886c <__ssprint_r>
   85a26:	2800      	cmp	r0, #0
   85a28:	f47f af13 	bne.w	85852 <_svfprintf_r+0x1ba>
   85a2c:	3f10      	subs	r7, #16
   85a2e:	2f10      	cmp	r7, #16
   85a30:	464a      	mov	r2, r9
   85a32:	9927      	ldr	r1, [sp, #156]	; 0x9c
   85a34:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85a36:	dce9      	bgt.n	85a0c <_svfprintf_r+0x374>
   85a38:	4635      	mov	r5, r6
   85a3a:	460c      	mov	r4, r1
   85a3c:	4646      	mov	r6, r8
   85a3e:	4690      	mov	r8, r2
   85a40:	3301      	adds	r3, #1
   85a42:	443c      	add	r4, r7
   85a44:	2b07      	cmp	r3, #7
   85a46:	9427      	str	r4, [sp, #156]	; 0x9c
   85a48:	9326      	str	r3, [sp, #152]	; 0x98
   85a4a:	e888 00a0 	stmia.w	r8, {r5, r7}
   85a4e:	f300 8370 	bgt.w	86132 <_svfprintf_r+0xa9a>
   85a52:	f108 0808 	add.w	r8, r8, #8
   85a56:	9b07      	ldr	r3, [sp, #28]
   85a58:	05df      	lsls	r7, r3, #23
   85a5a:	f100 8264 	bmi.w	85f26 <_svfprintf_r+0x88e>
   85a5e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85a60:	990e      	ldr	r1, [sp, #56]	; 0x38
   85a62:	3301      	adds	r3, #1
   85a64:	440c      	add	r4, r1
   85a66:	2b07      	cmp	r3, #7
   85a68:	9427      	str	r4, [sp, #156]	; 0x9c
   85a6a:	f8c8 6000 	str.w	r6, [r8]
   85a6e:	f8c8 1004 	str.w	r1, [r8, #4]
   85a72:	9326      	str	r3, [sp, #152]	; 0x98
   85a74:	f300 83b3 	bgt.w	861de <_svfprintf_r+0xb46>
   85a78:	f108 0808 	add.w	r8, r8, #8
   85a7c:	9b07      	ldr	r3, [sp, #28]
   85a7e:	075b      	lsls	r3, r3, #29
   85a80:	d53b      	bpl.n	85afa <_svfprintf_r+0x462>
   85a82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85a84:	9a08      	ldr	r2, [sp, #32]
   85a86:	1a9d      	subs	r5, r3, r2
   85a88:	2d00      	cmp	r5, #0
   85a8a:	dd36      	ble.n	85afa <_svfprintf_r+0x462>
   85a8c:	2d10      	cmp	r5, #16
   85a8e:	f340 8721 	ble.w	868d4 <_svfprintf_r+0x123c>
   85a92:	2610      	movs	r6, #16
   85a94:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85a96:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   85a98:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   85a9c:	e004      	b.n	85aa8 <_svfprintf_r+0x410>
   85a9e:	3d10      	subs	r5, #16
   85aa0:	2d10      	cmp	r5, #16
   85aa2:	f108 0808 	add.w	r8, r8, #8
   85aa6:	dd16      	ble.n	85ad6 <_svfprintf_r+0x43e>
   85aa8:	3301      	adds	r3, #1
   85aaa:	4a50      	ldr	r2, [pc, #320]	; (85bec <_svfprintf_r+0x554>)
   85aac:	3410      	adds	r4, #16
   85aae:	2b07      	cmp	r3, #7
   85ab0:	9427      	str	r4, [sp, #156]	; 0x9c
   85ab2:	9326      	str	r3, [sp, #152]	; 0x98
   85ab4:	e888 0044 	stmia.w	r8, {r2, r6}
   85ab8:	ddf1      	ble.n	85a9e <_svfprintf_r+0x406>
   85aba:	aa25      	add	r2, sp, #148	; 0x94
   85abc:	4659      	mov	r1, fp
   85abe:	4638      	mov	r0, r7
   85ac0:	f002 fed4 	bl	8886c <__ssprint_r>
   85ac4:	2800      	cmp	r0, #0
   85ac6:	f47f aec4 	bne.w	85852 <_svfprintf_r+0x1ba>
   85aca:	3d10      	subs	r5, #16
   85acc:	2d10      	cmp	r5, #16
   85ace:	46c8      	mov	r8, r9
   85ad0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85ad2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85ad4:	dce8      	bgt.n	85aa8 <_svfprintf_r+0x410>
   85ad6:	3301      	adds	r3, #1
   85ad8:	4a44      	ldr	r2, [pc, #272]	; (85bec <_svfprintf_r+0x554>)
   85ada:	442c      	add	r4, r5
   85adc:	2b07      	cmp	r3, #7
   85ade:	9427      	str	r4, [sp, #156]	; 0x9c
   85ae0:	9326      	str	r3, [sp, #152]	; 0x98
   85ae2:	e888 0024 	stmia.w	r8, {r2, r5}
   85ae6:	dd08      	ble.n	85afa <_svfprintf_r+0x462>
   85ae8:	aa25      	add	r2, sp, #148	; 0x94
   85aea:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85aec:	980c      	ldr	r0, [sp, #48]	; 0x30
   85aee:	f002 febd 	bl	8886c <__ssprint_r>
   85af2:	2800      	cmp	r0, #0
   85af4:	f47f aead 	bne.w	85852 <_svfprintf_r+0x1ba>
   85af8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85afa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85afc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   85afe:	9908      	ldr	r1, [sp, #32]
   85b00:	428a      	cmp	r2, r1
   85b02:	bfac      	ite	ge
   85b04:	189b      	addge	r3, r3, r2
   85b06:	185b      	addlt	r3, r3, r1
   85b08:	9309      	str	r3, [sp, #36]	; 0x24
   85b0a:	2c00      	cmp	r4, #0
   85b0c:	f040 82fb 	bne.w	86106 <_svfprintf_r+0xa6e>
   85b10:	2300      	movs	r3, #0
   85b12:	46c8      	mov	r8, r9
   85b14:	9326      	str	r3, [sp, #152]	; 0x98
   85b16:	e5e6      	b.n	856e6 <_svfprintf_r+0x4e>
   85b18:	9311      	str	r3, [sp, #68]	; 0x44
   85b1a:	f01b 0320 	ands.w	r3, fp, #32
   85b1e:	f040 8145 	bne.w	85dac <_svfprintf_r+0x714>
   85b22:	f01b 0210 	ands.w	r2, fp, #16
   85b26:	f040 8466 	bne.w	863f6 <_svfprintf_r+0xd5e>
   85b2a:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   85b2e:	f000 8462 	beq.w	863f6 <_svfprintf_r+0xd5e>
   85b32:	990f      	ldr	r1, [sp, #60]	; 0x3c
   85b34:	4613      	mov	r3, r2
   85b36:	460a      	mov	r2, r1
   85b38:	3204      	adds	r2, #4
   85b3a:	880c      	ldrh	r4, [r1, #0]
   85b3c:	2500      	movs	r5, #0
   85b3e:	920f      	str	r2, [sp, #60]	; 0x3c
   85b40:	e6a8      	b.n	85894 <_svfprintf_r+0x1fc>
   85b42:	2500      	movs	r5, #0
   85b44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85b46:	9311      	str	r3, [sp, #68]	; 0x44
   85b48:	6816      	ldr	r6, [r2, #0]
   85b4a:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   85b4e:	1d14      	adds	r4, r2, #4
   85b50:	2e00      	cmp	r6, #0
   85b52:	f000 86cd 	beq.w	868f0 <_svfprintf_r+0x1258>
   85b56:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85b58:	1c53      	adds	r3, r2, #1
   85b5a:	f000 861b 	beq.w	86794 <_svfprintf_r+0x10fc>
   85b5e:	4629      	mov	r1, r5
   85b60:	4630      	mov	r0, r6
   85b62:	f002 faad 	bl	880c0 <memchr>
   85b66:	2800      	cmp	r0, #0
   85b68:	f000 870d 	beq.w	86986 <_svfprintf_r+0x12ee>
   85b6c:	1b83      	subs	r3, r0, r6
   85b6e:	950a      	str	r5, [sp, #40]	; 0x28
   85b70:	930e      	str	r3, [sp, #56]	; 0x38
   85b72:	940f      	str	r4, [sp, #60]	; 0x3c
   85b74:	f8cd b01c 	str.w	fp, [sp, #28]
   85b78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   85b7c:	9308      	str	r3, [sp, #32]
   85b7e:	9512      	str	r5, [sp, #72]	; 0x48
   85b80:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   85b84:	e6ac      	b.n	858e0 <_svfprintf_r+0x248>
   85b86:	f89a 3000 	ldrb.w	r3, [sl]
   85b8a:	f10a 0401 	add.w	r4, sl, #1
   85b8e:	2b2a      	cmp	r3, #42	; 0x2a
   85b90:	f000 87c2 	beq.w	86b18 <_svfprintf_r+0x1480>
   85b94:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   85b98:	2809      	cmp	r0, #9
   85b9a:	46a2      	mov	sl, r4
   85b9c:	f200 8718 	bhi.w	869d0 <_svfprintf_r+0x1338>
   85ba0:	2300      	movs	r3, #0
   85ba2:	461c      	mov	r4, r3
   85ba4:	f81a 3b01 	ldrb.w	r3, [sl], #1
   85ba8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   85bac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   85bb0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   85bb4:	2809      	cmp	r0, #9
   85bb6:	d9f5      	bls.n	85ba4 <_svfprintf_r+0x50c>
   85bb8:	940a      	str	r4, [sp, #40]	; 0x28
   85bba:	e5c9      	b.n	85750 <_svfprintf_r+0xb8>
   85bbc:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   85bc0:	f89a 3000 	ldrb.w	r3, [sl]
   85bc4:	e5c2      	b.n	8574c <_svfprintf_r+0xb4>
   85bc6:	f04b 0b10 	orr.w	fp, fp, #16
   85bca:	f01b 0f20 	tst.w	fp, #32
   85bce:	9311      	str	r3, [sp, #68]	; 0x44
   85bd0:	f43f ae51 	beq.w	85876 <_svfprintf_r+0x1de>
   85bd4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85bd6:	3407      	adds	r4, #7
   85bd8:	f024 0307 	bic.w	r3, r4, #7
   85bdc:	f103 0208 	add.w	r2, r3, #8
   85be0:	e9d3 4500 	ldrd	r4, r5, [r3]
   85be4:	920f      	str	r2, [sp, #60]	; 0x3c
   85be6:	2301      	movs	r3, #1
   85be8:	e654      	b.n	85894 <_svfprintf_r+0x1fc>
   85bea:	bf00      	nop
   85bec:	000897a8 	.word	0x000897a8
   85bf0:	000897b8 	.word	0x000897b8
   85bf4:	9311      	str	r3, [sp, #68]	; 0x44
   85bf6:	2a00      	cmp	r2, #0
   85bf8:	f040 87ad 	bne.w	86b56 <_svfprintf_r+0x14be>
   85bfc:	4bbe      	ldr	r3, [pc, #760]	; (85ef8 <_svfprintf_r+0x860>)
   85bfe:	f01b 0f20 	tst.w	fp, #32
   85c02:	9318      	str	r3, [sp, #96]	; 0x60
   85c04:	f040 80e7 	bne.w	85dd6 <_svfprintf_r+0x73e>
   85c08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85c0a:	f01b 0f10 	tst.w	fp, #16
   85c0e:	4613      	mov	r3, r2
   85c10:	f040 83d8 	bne.w	863c4 <_svfprintf_r+0xd2c>
   85c14:	f01b 0f40 	tst.w	fp, #64	; 0x40
   85c18:	f000 83d4 	beq.w	863c4 <_svfprintf_r+0xd2c>
   85c1c:	2500      	movs	r5, #0
   85c1e:	3304      	adds	r3, #4
   85c20:	8814      	ldrh	r4, [r2, #0]
   85c22:	930f      	str	r3, [sp, #60]	; 0x3c
   85c24:	f01b 0f01 	tst.w	fp, #1
   85c28:	f000 80e3 	beq.w	85df2 <_svfprintf_r+0x75a>
   85c2c:	ea54 0305 	orrs.w	r3, r4, r5
   85c30:	f000 80df 	beq.w	85df2 <_svfprintf_r+0x75a>
   85c34:	2330      	movs	r3, #48	; 0x30
   85c36:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   85c3a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   85c3e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   85c42:	f04b 0b02 	orr.w	fp, fp, #2
   85c46:	2302      	movs	r3, #2
   85c48:	e624      	b.n	85894 <_svfprintf_r+0x1fc>
   85c4a:	2201      	movs	r2, #1
   85c4c:	9311      	str	r3, [sp, #68]	; 0x44
   85c4e:	2300      	movs	r3, #0
   85c50:	4611      	mov	r1, r2
   85c52:	980f      	ldr	r0, [sp, #60]	; 0x3c
   85c54:	9208      	str	r2, [sp, #32]
   85c56:	6802      	ldr	r2, [r0, #0]
   85c58:	461f      	mov	r7, r3
   85c5a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   85c5e:	930a      	str	r3, [sp, #40]	; 0x28
   85c60:	9312      	str	r3, [sp, #72]	; 0x48
   85c62:	1d03      	adds	r3, r0, #4
   85c64:	f8cd b01c 	str.w	fp, [sp, #28]
   85c68:	910e      	str	r1, [sp, #56]	; 0x38
   85c6a:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   85c6e:	930f      	str	r3, [sp, #60]	; 0x3c
   85c70:	ae28      	add	r6, sp, #160	; 0xa0
   85c72:	e639      	b.n	858e8 <_svfprintf_r+0x250>
   85c74:	9311      	str	r3, [sp, #68]	; 0x44
   85c76:	2a00      	cmp	r2, #0
   85c78:	f040 8784 	bne.w	86b84 <_svfprintf_r+0x14ec>
   85c7c:	f04b 0b10 	orr.w	fp, fp, #16
   85c80:	f01b 0f20 	tst.w	fp, #32
   85c84:	f040 8475 	bne.w	86572 <_svfprintf_r+0xeda>
   85c88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85c8a:	f01b 0f10 	tst.w	fp, #16
   85c8e:	4613      	mov	r3, r2
   85c90:	f040 839d 	bne.w	863ce <_svfprintf_r+0xd36>
   85c94:	f01b 0f40 	tst.w	fp, #64	; 0x40
   85c98:	f000 8399 	beq.w	863ce <_svfprintf_r+0xd36>
   85c9c:	f9b2 4000 	ldrsh.w	r4, [r2]
   85ca0:	3304      	adds	r3, #4
   85ca2:	17e5      	asrs	r5, r4, #31
   85ca4:	930f      	str	r3, [sp, #60]	; 0x3c
   85ca6:	4622      	mov	r2, r4
   85ca8:	462b      	mov	r3, r5
   85caa:	2a00      	cmp	r2, #0
   85cac:	f173 0300 	sbcs.w	r3, r3, #0
   85cb0:	f2c0 8398 	blt.w	863e4 <_svfprintf_r+0xd4c>
   85cb4:	990a      	ldr	r1, [sp, #40]	; 0x28
   85cb6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   85cba:	1c4a      	adds	r2, r1, #1
   85cbc:	f04f 0301 	mov.w	r3, #1
   85cc0:	f47f adf0 	bne.w	858a4 <_svfprintf_r+0x20c>
   85cc4:	ea54 0205 	orrs.w	r2, r4, r5
   85cc8:	f000 8229 	beq.w	8611e <_svfprintf_r+0xa86>
   85ccc:	f8cd b01c 	str.w	fp, [sp, #28]
   85cd0:	2b01      	cmp	r3, #1
   85cd2:	f000 830e 	beq.w	862f2 <_svfprintf_r+0xc5a>
   85cd6:	2b02      	cmp	r3, #2
   85cd8:	f040 829c 	bne.w	86214 <_svfprintf_r+0xb7c>
   85cdc:	464e      	mov	r6, r9
   85cde:	9818      	ldr	r0, [sp, #96]	; 0x60
   85ce0:	0923      	lsrs	r3, r4, #4
   85ce2:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   85ce6:	0929      	lsrs	r1, r5, #4
   85ce8:	f004 020f 	and.w	r2, r4, #15
   85cec:	460d      	mov	r5, r1
   85cee:	461c      	mov	r4, r3
   85cf0:	5c83      	ldrb	r3, [r0, r2]
   85cf2:	f806 3d01 	strb.w	r3, [r6, #-1]!
   85cf6:	ea54 0305 	orrs.w	r3, r4, r5
   85cfa:	d1f1      	bne.n	85ce0 <_svfprintf_r+0x648>
   85cfc:	eba9 0306 	sub.w	r3, r9, r6
   85d00:	930e      	str	r3, [sp, #56]	; 0x38
   85d02:	e5e5      	b.n	858d0 <_svfprintf_r+0x238>
   85d04:	9311      	str	r3, [sp, #68]	; 0x44
   85d06:	2a00      	cmp	r2, #0
   85d08:	f040 8738 	bne.w	86b7c <_svfprintf_r+0x14e4>
   85d0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85d0e:	f01b 0f08 	tst.w	fp, #8
   85d12:	f104 0407 	add.w	r4, r4, #7
   85d16:	f000 84cf 	beq.w	866b8 <_svfprintf_r+0x1020>
   85d1a:	f024 0307 	bic.w	r3, r4, #7
   85d1e:	f103 0208 	add.w	r2, r3, #8
   85d22:	920f      	str	r2, [sp, #60]	; 0x3c
   85d24:	681a      	ldr	r2, [r3, #0]
   85d26:	685b      	ldr	r3, [r3, #4]
   85d28:	9215      	str	r2, [sp, #84]	; 0x54
   85d2a:	9314      	str	r3, [sp, #80]	; 0x50
   85d2c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   85d2e:	9d15      	ldr	r5, [sp, #84]	; 0x54
   85d30:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   85d34:	4628      	mov	r0, r5
   85d36:	4621      	mov	r1, r4
   85d38:	f04f 32ff 	mov.w	r2, #4294967295
   85d3c:	4b6f      	ldr	r3, [pc, #444]	; (85efc <_svfprintf_r+0x864>)
   85d3e:	f003 fa9f 	bl	89280 <__aeabi_dcmpun>
   85d42:	2800      	cmp	r0, #0
   85d44:	f040 8434 	bne.w	865b0 <_svfprintf_r+0xf18>
   85d48:	4628      	mov	r0, r5
   85d4a:	4621      	mov	r1, r4
   85d4c:	f04f 32ff 	mov.w	r2, #4294967295
   85d50:	4b6a      	ldr	r3, [pc, #424]	; (85efc <_svfprintf_r+0x864>)
   85d52:	f003 fa77 	bl	89244 <__aeabi_dcmple>
   85d56:	2800      	cmp	r0, #0
   85d58:	f040 842a 	bne.w	865b0 <_svfprintf_r+0xf18>
   85d5c:	a815      	add	r0, sp, #84	; 0x54
   85d5e:	c80d      	ldmia	r0, {r0, r2, r3}
   85d60:	9914      	ldr	r1, [sp, #80]	; 0x50
   85d62:	f003 fa65 	bl	89230 <__aeabi_dcmplt>
   85d66:	2800      	cmp	r0, #0
   85d68:	f040 85d4 	bne.w	86914 <_svfprintf_r+0x127c>
   85d6c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   85d70:	2303      	movs	r3, #3
   85d72:	461a      	mov	r2, r3
   85d74:	9308      	str	r3, [sp, #32]
   85d76:	2300      	movs	r3, #0
   85d78:	4e61      	ldr	r6, [pc, #388]	; (85f00 <_svfprintf_r+0x868>)
   85d7a:	4619      	mov	r1, r3
   85d7c:	930a      	str	r3, [sp, #40]	; 0x28
   85d7e:	4b61      	ldr	r3, [pc, #388]	; (85f04 <_svfprintf_r+0x86c>)
   85d80:	920e      	str	r2, [sp, #56]	; 0x38
   85d82:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85d84:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   85d88:	9007      	str	r0, [sp, #28]
   85d8a:	9112      	str	r1, [sp, #72]	; 0x48
   85d8c:	2a47      	cmp	r2, #71	; 0x47
   85d8e:	bfd8      	it	le
   85d90:	461e      	movle	r6, r3
   85d92:	e5a5      	b.n	858e0 <_svfprintf_r+0x248>
   85d94:	f04b 0b08 	orr.w	fp, fp, #8
   85d98:	f89a 3000 	ldrb.w	r3, [sl]
   85d9c:	e4d6      	b.n	8574c <_svfprintf_r+0xb4>
   85d9e:	f04b 0b10 	orr.w	fp, fp, #16
   85da2:	9311      	str	r3, [sp, #68]	; 0x44
   85da4:	f01b 0320 	ands.w	r3, fp, #32
   85da8:	f43f aebb 	beq.w	85b22 <_svfprintf_r+0x48a>
   85dac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85dae:	3407      	adds	r4, #7
   85db0:	f024 0307 	bic.w	r3, r4, #7
   85db4:	f103 0208 	add.w	r2, r3, #8
   85db8:	e9d3 4500 	ldrd	r4, r5, [r3]
   85dbc:	920f      	str	r2, [sp, #60]	; 0x3c
   85dbe:	2300      	movs	r3, #0
   85dc0:	e568      	b.n	85894 <_svfprintf_r+0x1fc>
   85dc2:	9311      	str	r3, [sp, #68]	; 0x44
   85dc4:	2a00      	cmp	r2, #0
   85dc6:	f040 86c2 	bne.w	86b4e <_svfprintf_r+0x14b6>
   85dca:	4b4f      	ldr	r3, [pc, #316]	; (85f08 <_svfprintf_r+0x870>)
   85dcc:	f01b 0f20 	tst.w	fp, #32
   85dd0:	9318      	str	r3, [sp, #96]	; 0x60
   85dd2:	f43f af19 	beq.w	85c08 <_svfprintf_r+0x570>
   85dd6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85dd8:	f01b 0f01 	tst.w	fp, #1
   85ddc:	f104 0407 	add.w	r4, r4, #7
   85de0:	f024 0307 	bic.w	r3, r4, #7
   85de4:	f103 0208 	add.w	r2, r3, #8
   85de8:	920f      	str	r2, [sp, #60]	; 0x3c
   85dea:	e9d3 4500 	ldrd	r4, r5, [r3]
   85dee:	f47f af1d 	bne.w	85c2c <_svfprintf_r+0x594>
   85df2:	2302      	movs	r3, #2
   85df4:	e54e      	b.n	85894 <_svfprintf_r+0x1fc>
   85df6:	f89a 3000 	ldrb.w	r3, [sl]
   85dfa:	2900      	cmp	r1, #0
   85dfc:	f47f aca6 	bne.w	8574c <_svfprintf_r+0xb4>
   85e00:	2201      	movs	r2, #1
   85e02:	2120      	movs	r1, #32
   85e04:	e4a2      	b.n	8574c <_svfprintf_r+0xb4>
   85e06:	f04b 0b01 	orr.w	fp, fp, #1
   85e0a:	f89a 3000 	ldrb.w	r3, [sl]
   85e0e:	e49d      	b.n	8574c <_svfprintf_r+0xb4>
   85e10:	f89a 3000 	ldrb.w	r3, [sl]
   85e14:	2201      	movs	r2, #1
   85e16:	212b      	movs	r1, #43	; 0x2b
   85e18:	e498      	b.n	8574c <_svfprintf_r+0xb4>
   85e1a:	f04b 0b20 	orr.w	fp, fp, #32
   85e1e:	f89a 3000 	ldrb.w	r3, [sl]
   85e22:	e493      	b.n	8574c <_svfprintf_r+0xb4>
   85e24:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   85e28:	f89a 3000 	ldrb.w	r3, [sl]
   85e2c:	e48e      	b.n	8574c <_svfprintf_r+0xb4>
   85e2e:	f89a 3000 	ldrb.w	r3, [sl]
   85e32:	2b6c      	cmp	r3, #108	; 0x6c
   85e34:	bf03      	ittte	eq
   85e36:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   85e3a:	f04b 0b20 	orreq.w	fp, fp, #32
   85e3e:	f10a 0a01 	addeq.w	sl, sl, #1
   85e42:	f04b 0b10 	orrne.w	fp, fp, #16
   85e46:	e481      	b.n	8574c <_svfprintf_r+0xb4>
   85e48:	2a00      	cmp	r2, #0
   85e4a:	f040 867c 	bne.w	86b46 <_svfprintf_r+0x14ae>
   85e4e:	f01b 0f20 	tst.w	fp, #32
   85e52:	f040 8452 	bne.w	866fa <_svfprintf_r+0x1062>
   85e56:	f01b 0f10 	tst.w	fp, #16
   85e5a:	f040 8438 	bne.w	866ce <_svfprintf_r+0x1036>
   85e5e:	f01b 0f40 	tst.w	fp, #64	; 0x40
   85e62:	f000 8434 	beq.w	866ce <_svfprintf_r+0x1036>
   85e66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85e68:	6813      	ldr	r3, [r2, #0]
   85e6a:	3204      	adds	r2, #4
   85e6c:	920f      	str	r2, [sp, #60]	; 0x3c
   85e6e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   85e72:	801a      	strh	r2, [r3, #0]
   85e74:	e437      	b.n	856e6 <_svfprintf_r+0x4e>
   85e76:	2378      	movs	r3, #120	; 0x78
   85e78:	2230      	movs	r2, #48	; 0x30
   85e7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   85e7c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   85e80:	9311      	str	r3, [sp, #68]	; 0x44
   85e82:	1d03      	adds	r3, r0, #4
   85e84:	930f      	str	r3, [sp, #60]	; 0x3c
   85e86:	4b20      	ldr	r3, [pc, #128]	; (85f08 <_svfprintf_r+0x870>)
   85e88:	6804      	ldr	r4, [r0, #0]
   85e8a:	9318      	str	r3, [sp, #96]	; 0x60
   85e8c:	f04b 0b02 	orr.w	fp, fp, #2
   85e90:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   85e94:	2500      	movs	r5, #0
   85e96:	2302      	movs	r3, #2
   85e98:	e4fc      	b.n	85894 <_svfprintf_r+0x1fc>
   85e9a:	9311      	str	r3, [sp, #68]	; 0x44
   85e9c:	2a00      	cmp	r2, #0
   85e9e:	f43f aeef 	beq.w	85c80 <_svfprintf_r+0x5e8>
   85ea2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85ea6:	e6eb      	b.n	85c80 <_svfprintf_r+0x5e8>
   85ea8:	2000      	movs	r0, #0
   85eaa:	4604      	mov	r4, r0
   85eac:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   85eb0:	f81a 3b01 	ldrb.w	r3, [sl], #1
   85eb4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   85eb8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   85ebc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   85ec0:	2809      	cmp	r0, #9
   85ec2:	d9f5      	bls.n	85eb0 <_svfprintf_r+0x818>
   85ec4:	940d      	str	r4, [sp, #52]	; 0x34
   85ec6:	e443      	b.n	85750 <_svfprintf_r+0xb8>
   85ec8:	9311      	str	r3, [sp, #68]	; 0x44
   85eca:	2a00      	cmp	r2, #0
   85ecc:	f040 864a 	bne.w	86b64 <_svfprintf_r+0x14cc>
   85ed0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85ed2:	2a00      	cmp	r2, #0
   85ed4:	f43f acb6 	beq.w	85844 <_svfprintf_r+0x1ac>
   85ed8:	2300      	movs	r3, #0
   85eda:	2101      	movs	r1, #1
   85edc:	461f      	mov	r7, r3
   85ede:	9108      	str	r1, [sp, #32]
   85ee0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   85ee4:	f8cd b01c 	str.w	fp, [sp, #28]
   85ee8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   85eec:	930a      	str	r3, [sp, #40]	; 0x28
   85eee:	9312      	str	r3, [sp, #72]	; 0x48
   85ef0:	910e      	str	r1, [sp, #56]	; 0x38
   85ef2:	ae28      	add	r6, sp, #160	; 0xa0
   85ef4:	e4f8      	b.n	858e8 <_svfprintf_r+0x250>
   85ef6:	bf00      	nop
   85ef8:	00089774 	.word	0x00089774
   85efc:	7fefffff 	.word	0x7fefffff
   85f00:	00089768 	.word	0x00089768
   85f04:	00089764 	.word	0x00089764
   85f08:	00089788 	.word	0x00089788
   85f0c:	aa25      	add	r2, sp, #148	; 0x94
   85f0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85f10:	980c      	ldr	r0, [sp, #48]	; 0x30
   85f12:	f002 fcab 	bl	8886c <__ssprint_r>
   85f16:	2800      	cmp	r0, #0
   85f18:	f47f ac9b 	bne.w	85852 <_svfprintf_r+0x1ba>
   85f1c:	46c8      	mov	r8, r9
   85f1e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   85f22:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85f24:	e533      	b.n	8598e <_svfprintf_r+0x2f6>
   85f26:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85f28:	2b65      	cmp	r3, #101	; 0x65
   85f2a:	f340 809a 	ble.w	86062 <_svfprintf_r+0x9ca>
   85f2e:	a815      	add	r0, sp, #84	; 0x54
   85f30:	c80d      	ldmia	r0, {r0, r2, r3}
   85f32:	9914      	ldr	r1, [sp, #80]	; 0x50
   85f34:	f003 f972 	bl	8921c <__aeabi_dcmpeq>
   85f38:	2800      	cmp	r0, #0
   85f3a:	f000 8193 	beq.w	86264 <_svfprintf_r+0xbcc>
   85f3e:	2101      	movs	r1, #1
   85f40:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85f42:	4ab5      	ldr	r2, [pc, #724]	; (86218 <_svfprintf_r+0xb80>)
   85f44:	440b      	add	r3, r1
   85f46:	440c      	add	r4, r1
   85f48:	2b07      	cmp	r3, #7
   85f4a:	9427      	str	r4, [sp, #156]	; 0x9c
   85f4c:	9326      	str	r3, [sp, #152]	; 0x98
   85f4e:	f8c8 1004 	str.w	r1, [r8, #4]
   85f52:	f8c8 2000 	str.w	r2, [r8]
   85f56:	f300 83c6 	bgt.w	866e6 <_svfprintf_r+0x104e>
   85f5a:	f108 0808 	add.w	r8, r8, #8
   85f5e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   85f60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   85f62:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85f64:	4293      	cmp	r3, r2
   85f66:	db03      	blt.n	85f70 <_svfprintf_r+0x8d8>
   85f68:	9b07      	ldr	r3, [sp, #28]
   85f6a:	07dd      	lsls	r5, r3, #31
   85f6c:	f57f ad86 	bpl.w	85a7c <_svfprintf_r+0x3e4>
   85f70:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85f72:	9919      	ldr	r1, [sp, #100]	; 0x64
   85f74:	3301      	adds	r3, #1
   85f76:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   85f78:	440c      	add	r4, r1
   85f7a:	2b07      	cmp	r3, #7
   85f7c:	f8c8 2000 	str.w	r2, [r8]
   85f80:	f8c8 1004 	str.w	r1, [r8, #4]
   85f84:	9427      	str	r4, [sp, #156]	; 0x9c
   85f86:	9326      	str	r3, [sp, #152]	; 0x98
   85f88:	f300 83c4 	bgt.w	86714 <_svfprintf_r+0x107c>
   85f8c:	f108 0808 	add.w	r8, r8, #8
   85f90:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   85f92:	1e5e      	subs	r6, r3, #1
   85f94:	2e00      	cmp	r6, #0
   85f96:	f77f ad71 	ble.w	85a7c <_svfprintf_r+0x3e4>
   85f9a:	2e10      	cmp	r6, #16
   85f9c:	f340 8575 	ble.w	86a8a <_svfprintf_r+0x13f2>
   85fa0:	4622      	mov	r2, r4
   85fa2:	2710      	movs	r7, #16
   85fa4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85fa6:	4d9d      	ldr	r5, [pc, #628]	; (8621c <_svfprintf_r+0xb84>)
   85fa8:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   85fac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   85fae:	e005      	b.n	85fbc <_svfprintf_r+0x924>
   85fb0:	f108 0808 	add.w	r8, r8, #8
   85fb4:	3e10      	subs	r6, #16
   85fb6:	2e10      	cmp	r6, #16
   85fb8:	f340 8225 	ble.w	86406 <_svfprintf_r+0xd6e>
   85fbc:	3301      	adds	r3, #1
   85fbe:	3210      	adds	r2, #16
   85fc0:	2b07      	cmp	r3, #7
   85fc2:	9227      	str	r2, [sp, #156]	; 0x9c
   85fc4:	9326      	str	r3, [sp, #152]	; 0x98
   85fc6:	e888 00a0 	stmia.w	r8, {r5, r7}
   85fca:	ddf1      	ble.n	85fb0 <_svfprintf_r+0x918>
   85fcc:	aa25      	add	r2, sp, #148	; 0x94
   85fce:	4621      	mov	r1, r4
   85fd0:	4658      	mov	r0, fp
   85fd2:	f002 fc4b 	bl	8886c <__ssprint_r>
   85fd6:	2800      	cmp	r0, #0
   85fd8:	f47f ac3b 	bne.w	85852 <_svfprintf_r+0x1ba>
   85fdc:	46c8      	mov	r8, r9
   85fde:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   85fe0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85fe2:	e7e7      	b.n	85fb4 <_svfprintf_r+0x91c>
   85fe4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   85fe6:	9a08      	ldr	r2, [sp, #32]
   85fe8:	1a9f      	subs	r7, r3, r2
   85fea:	2f00      	cmp	r7, #0
   85fec:	f77f acf6 	ble.w	859dc <_svfprintf_r+0x344>
   85ff0:	2f10      	cmp	r7, #16
   85ff2:	f340 84a8 	ble.w	86946 <_svfprintf_r+0x12ae>
   85ff6:	4d89      	ldr	r5, [pc, #548]	; (8621c <_svfprintf_r+0xb84>)
   85ff8:	4642      	mov	r2, r8
   85ffa:	4621      	mov	r1, r4
   85ffc:	46b0      	mov	r8, r6
   85ffe:	f04f 0b10 	mov.w	fp, #16
   86002:	462e      	mov	r6, r5
   86004:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86006:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   86008:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8600a:	e004      	b.n	86016 <_svfprintf_r+0x97e>
   8600c:	3f10      	subs	r7, #16
   8600e:	2f10      	cmp	r7, #16
   86010:	f102 0208 	add.w	r2, r2, #8
   86014:	dd15      	ble.n	86042 <_svfprintf_r+0x9aa>
   86016:	3301      	adds	r3, #1
   86018:	3110      	adds	r1, #16
   8601a:	2b07      	cmp	r3, #7
   8601c:	9127      	str	r1, [sp, #156]	; 0x9c
   8601e:	9326      	str	r3, [sp, #152]	; 0x98
   86020:	e882 0840 	stmia.w	r2, {r6, fp}
   86024:	ddf2      	ble.n	8600c <_svfprintf_r+0x974>
   86026:	aa25      	add	r2, sp, #148	; 0x94
   86028:	4629      	mov	r1, r5
   8602a:	4620      	mov	r0, r4
   8602c:	f002 fc1e 	bl	8886c <__ssprint_r>
   86030:	2800      	cmp	r0, #0
   86032:	f47f ac0e 	bne.w	85852 <_svfprintf_r+0x1ba>
   86036:	3f10      	subs	r7, #16
   86038:	2f10      	cmp	r7, #16
   8603a:	464a      	mov	r2, r9
   8603c:	9927      	ldr	r1, [sp, #156]	; 0x9c
   8603e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86040:	dce9      	bgt.n	86016 <_svfprintf_r+0x97e>
   86042:	4635      	mov	r5, r6
   86044:	460c      	mov	r4, r1
   86046:	4646      	mov	r6, r8
   86048:	4690      	mov	r8, r2
   8604a:	3301      	adds	r3, #1
   8604c:	443c      	add	r4, r7
   8604e:	2b07      	cmp	r3, #7
   86050:	9427      	str	r4, [sp, #156]	; 0x9c
   86052:	9326      	str	r3, [sp, #152]	; 0x98
   86054:	e888 00a0 	stmia.w	r8, {r5, r7}
   86058:	f300 829e 	bgt.w	86598 <_svfprintf_r+0xf00>
   8605c:	f108 0808 	add.w	r8, r8, #8
   86060:	e4bc      	b.n	859dc <_svfprintf_r+0x344>
   86062:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   86064:	2b01      	cmp	r3, #1
   86066:	f340 824f 	ble.w	86508 <_svfprintf_r+0xe70>
   8606a:	2301      	movs	r3, #1
   8606c:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8606e:	441c      	add	r4, r3
   86070:	441f      	add	r7, r3
   86072:	2f07      	cmp	r7, #7
   86074:	9427      	str	r4, [sp, #156]	; 0x9c
   86076:	f8c8 6000 	str.w	r6, [r8]
   8607a:	9726      	str	r7, [sp, #152]	; 0x98
   8607c:	f8c8 3004 	str.w	r3, [r8, #4]
   86080:	f300 825f 	bgt.w	86542 <_svfprintf_r+0xeaa>
   86084:	f108 0808 	add.w	r8, r8, #8
   86088:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8608a:	3701      	adds	r7, #1
   8608c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   8608e:	4414      	add	r4, r2
   86090:	2f07      	cmp	r7, #7
   86092:	9427      	str	r4, [sp, #156]	; 0x9c
   86094:	9726      	str	r7, [sp, #152]	; 0x98
   86096:	f8c8 3000 	str.w	r3, [r8]
   8609a:	f8c8 2004 	str.w	r2, [r8, #4]
   8609e:	f300 825c 	bgt.w	8655a <_svfprintf_r+0xec2>
   860a2:	f108 0808 	add.w	r8, r8, #8
   860a6:	a815      	add	r0, sp, #84	; 0x54
   860a8:	c80d      	ldmia	r0, {r0, r2, r3}
   860aa:	9914      	ldr	r1, [sp, #80]	; 0x50
   860ac:	f003 f8b6 	bl	8921c <__aeabi_dcmpeq>
   860b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   860b2:	2800      	cmp	r0, #0
   860b4:	f040 8141 	bne.w	8633a <_svfprintf_r+0xca2>
   860b8:	3b01      	subs	r3, #1
   860ba:	3701      	adds	r7, #1
   860bc:	3601      	adds	r6, #1
   860be:	441c      	add	r4, r3
   860c0:	2f07      	cmp	r7, #7
   860c2:	f8c8 6000 	str.w	r6, [r8]
   860c6:	9726      	str	r7, [sp, #152]	; 0x98
   860c8:	9427      	str	r4, [sp, #156]	; 0x9c
   860ca:	f8c8 3004 	str.w	r3, [r8, #4]
   860ce:	f300 8166 	bgt.w	8639e <_svfprintf_r+0xd06>
   860d2:	f108 0808 	add.w	r8, r8, #8
   860d6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   860d8:	3701      	adds	r7, #1
   860da:	4414      	add	r4, r2
   860dc:	ab21      	add	r3, sp, #132	; 0x84
   860de:	2f07      	cmp	r7, #7
   860e0:	9427      	str	r4, [sp, #156]	; 0x9c
   860e2:	9726      	str	r7, [sp, #152]	; 0x98
   860e4:	f8c8 2004 	str.w	r2, [r8, #4]
   860e8:	f8c8 3000 	str.w	r3, [r8]
   860ec:	f77f acc4 	ble.w	85a78 <_svfprintf_r+0x3e0>
   860f0:	aa25      	add	r2, sp, #148	; 0x94
   860f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   860f4:	980c      	ldr	r0, [sp, #48]	; 0x30
   860f6:	f002 fbb9 	bl	8886c <__ssprint_r>
   860fa:	2800      	cmp	r0, #0
   860fc:	f47f aba9 	bne.w	85852 <_svfprintf_r+0x1ba>
   86100:	46c8      	mov	r8, r9
   86102:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86104:	e4ba      	b.n	85a7c <_svfprintf_r+0x3e4>
   86106:	aa25      	add	r2, sp, #148	; 0x94
   86108:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8610a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8610c:	f002 fbae 	bl	8886c <__ssprint_r>
   86110:	2800      	cmp	r0, #0
   86112:	f43f acfd 	beq.w	85b10 <_svfprintf_r+0x478>
   86116:	f7ff bb9c 	b.w	85852 <_svfprintf_r+0x1ba>
   8611a:	f8dd b01c 	ldr.w	fp, [sp, #28]
   8611e:	2b01      	cmp	r3, #1
   86120:	f000 817e 	beq.w	86420 <_svfprintf_r+0xd88>
   86124:	2b02      	cmp	r3, #2
   86126:	d171      	bne.n	8620c <_svfprintf_r+0xb74>
   86128:	f8cd b01c 	str.w	fp, [sp, #28]
   8612c:	2400      	movs	r4, #0
   8612e:	2500      	movs	r5, #0
   86130:	e5d4      	b.n	85cdc <_svfprintf_r+0x644>
   86132:	aa25      	add	r2, sp, #148	; 0x94
   86134:	990b      	ldr	r1, [sp, #44]	; 0x2c
   86136:	980c      	ldr	r0, [sp, #48]	; 0x30
   86138:	f002 fb98 	bl	8886c <__ssprint_r>
   8613c:	2800      	cmp	r0, #0
   8613e:	f47f ab88 	bne.w	85852 <_svfprintf_r+0x1ba>
   86142:	46c8      	mov	r8, r9
   86144:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86146:	e486      	b.n	85a56 <_svfprintf_r+0x3be>
   86148:	aa25      	add	r2, sp, #148	; 0x94
   8614a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8614c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8614e:	f002 fb8d 	bl	8886c <__ssprint_r>
   86152:	2800      	cmp	r0, #0
   86154:	f47f ab7d 	bne.w	85852 <_svfprintf_r+0x1ba>
   86158:	46c8      	mov	r8, r9
   8615a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8615c:	e429      	b.n	859b2 <_svfprintf_r+0x31a>
   8615e:	2001      	movs	r0, #1
   86160:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86162:	4a2d      	ldr	r2, [pc, #180]	; (86218 <_svfprintf_r+0xb80>)
   86164:	4403      	add	r3, r0
   86166:	4404      	add	r4, r0
   86168:	2b07      	cmp	r3, #7
   8616a:	9427      	str	r4, [sp, #156]	; 0x9c
   8616c:	9326      	str	r3, [sp, #152]	; 0x98
   8616e:	f8c8 0004 	str.w	r0, [r8, #4]
   86172:	f8c8 2000 	str.w	r2, [r8]
   86176:	f340 82d8 	ble.w	8672a <_svfprintf_r+0x1092>
   8617a:	aa25      	add	r2, sp, #148	; 0x94
   8617c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8617e:	980c      	ldr	r0, [sp, #48]	; 0x30
   86180:	f002 fb74 	bl	8886c <__ssprint_r>
   86184:	2800      	cmp	r0, #0
   86186:	f47f ab64 	bne.w	85852 <_svfprintf_r+0x1ba>
   8618a:	46c8      	mov	r8, r9
   8618c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8618e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86190:	b929      	cbnz	r1, 8619e <_svfprintf_r+0xb06>
   86192:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   86194:	b91b      	cbnz	r3, 8619e <_svfprintf_r+0xb06>
   86196:	9b07      	ldr	r3, [sp, #28]
   86198:	07d8      	lsls	r0, r3, #31
   8619a:	f57f ac6f 	bpl.w	85a7c <_svfprintf_r+0x3e4>
   8619e:	9819      	ldr	r0, [sp, #100]	; 0x64
   861a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   861a2:	4602      	mov	r2, r0
   861a4:	3301      	adds	r3, #1
   861a6:	4422      	add	r2, r4
   861a8:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   861aa:	2b07      	cmp	r3, #7
   861ac:	9227      	str	r2, [sp, #156]	; 0x9c
   861ae:	f8c8 4000 	str.w	r4, [r8]
   861b2:	f8c8 0004 	str.w	r0, [r8, #4]
   861b6:	9326      	str	r3, [sp, #152]	; 0x98
   861b8:	f300 8431 	bgt.w	86a1e <_svfprintf_r+0x1386>
   861bc:	f108 0808 	add.w	r8, r8, #8
   861c0:	2900      	cmp	r1, #0
   861c2:	f2c0 8409 	blt.w	869d8 <_svfprintf_r+0x1340>
   861c6:	9913      	ldr	r1, [sp, #76]	; 0x4c
   861c8:	3301      	adds	r3, #1
   861ca:	188c      	adds	r4, r1, r2
   861cc:	2b07      	cmp	r3, #7
   861ce:	9427      	str	r4, [sp, #156]	; 0x9c
   861d0:	9326      	str	r3, [sp, #152]	; 0x98
   861d2:	f8c8 6000 	str.w	r6, [r8]
   861d6:	f8c8 1004 	str.w	r1, [r8, #4]
   861da:	f77f ac4d 	ble.w	85a78 <_svfprintf_r+0x3e0>
   861de:	aa25      	add	r2, sp, #148	; 0x94
   861e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   861e2:	980c      	ldr	r0, [sp, #48]	; 0x30
   861e4:	f002 fb42 	bl	8886c <__ssprint_r>
   861e8:	2800      	cmp	r0, #0
   861ea:	f47f ab32 	bne.w	85852 <_svfprintf_r+0x1ba>
   861ee:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   861f0:	46c8      	mov	r8, r9
   861f2:	e443      	b.n	85a7c <_svfprintf_r+0x3e4>
   861f4:	aa25      	add	r2, sp, #148	; 0x94
   861f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   861f8:	980c      	ldr	r0, [sp, #48]	; 0x30
   861fa:	f002 fb37 	bl	8886c <__ssprint_r>
   861fe:	2800      	cmp	r0, #0
   86200:	f47f ab27 	bne.w	85852 <_svfprintf_r+0x1ba>
   86204:	46c8      	mov	r8, r9
   86206:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86208:	f7ff bbe5 	b.w	859d6 <_svfprintf_r+0x33e>
   8620c:	2400      	movs	r4, #0
   8620e:	2500      	movs	r5, #0
   86210:	f8cd b01c 	str.w	fp, [sp, #28]
   86214:	4649      	mov	r1, r9
   86216:	e004      	b.n	86222 <_svfprintf_r+0xb8a>
   86218:	000897a4 	.word	0x000897a4
   8621c:	000897b8 	.word	0x000897b8
   86220:	4631      	mov	r1, r6
   86222:	08e2      	lsrs	r2, r4, #3
   86224:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   86228:	08e8      	lsrs	r0, r5, #3
   8622a:	f004 0307 	and.w	r3, r4, #7
   8622e:	4605      	mov	r5, r0
   86230:	4614      	mov	r4, r2
   86232:	3330      	adds	r3, #48	; 0x30
   86234:	ea54 0205 	orrs.w	r2, r4, r5
   86238:	f801 3c01 	strb.w	r3, [r1, #-1]
   8623c:	f101 36ff 	add.w	r6, r1, #4294967295
   86240:	d1ee      	bne.n	86220 <_svfprintf_r+0xb88>
   86242:	9a07      	ldr	r2, [sp, #28]
   86244:	07d2      	lsls	r2, r2, #31
   86246:	f57f ad59 	bpl.w	85cfc <_svfprintf_r+0x664>
   8624a:	2b30      	cmp	r3, #48	; 0x30
   8624c:	f43f ad56 	beq.w	85cfc <_svfprintf_r+0x664>
   86250:	2330      	movs	r3, #48	; 0x30
   86252:	3902      	subs	r1, #2
   86254:	f806 3c01 	strb.w	r3, [r6, #-1]
   86258:	eba9 0301 	sub.w	r3, r9, r1
   8625c:	930e      	str	r3, [sp, #56]	; 0x38
   8625e:	460e      	mov	r6, r1
   86260:	f7ff bb36 	b.w	858d0 <_svfprintf_r+0x238>
   86264:	991f      	ldr	r1, [sp, #124]	; 0x7c
   86266:	2900      	cmp	r1, #0
   86268:	f77f af79 	ble.w	8615e <_svfprintf_r+0xac6>
   8626c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8626e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   86270:	4293      	cmp	r3, r2
   86272:	bfa8      	it	ge
   86274:	4613      	movge	r3, r2
   86276:	2b00      	cmp	r3, #0
   86278:	461f      	mov	r7, r3
   8627a:	dd0b      	ble.n	86294 <_svfprintf_r+0xbfc>
   8627c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8627e:	443c      	add	r4, r7
   86280:	3301      	adds	r3, #1
   86282:	2b07      	cmp	r3, #7
   86284:	9427      	str	r4, [sp, #156]	; 0x9c
   86286:	e888 00c0 	stmia.w	r8, {r6, r7}
   8628a:	9326      	str	r3, [sp, #152]	; 0x98
   8628c:	f300 82fb 	bgt.w	86886 <_svfprintf_r+0x11ee>
   86290:	f108 0808 	add.w	r8, r8, #8
   86294:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86296:	2f00      	cmp	r7, #0
   86298:	bfa8      	it	ge
   8629a:	1bdb      	subge	r3, r3, r7
   8629c:	2b00      	cmp	r3, #0
   8629e:	461f      	mov	r7, r3
   862a0:	f340 80d7 	ble.w	86452 <_svfprintf_r+0xdba>
   862a4:	2b10      	cmp	r3, #16
   862a6:	f340 8434 	ble.w	86b12 <_svfprintf_r+0x147a>
   862aa:	4dba      	ldr	r5, [pc, #744]	; (86594 <_svfprintf_r+0xefc>)
   862ac:	4642      	mov	r2, r8
   862ae:	4621      	mov	r1, r4
   862b0:	46b0      	mov	r8, r6
   862b2:	f04f 0b10 	mov.w	fp, #16
   862b6:	462e      	mov	r6, r5
   862b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   862ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   862bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   862be:	e004      	b.n	862ca <_svfprintf_r+0xc32>
   862c0:	3208      	adds	r2, #8
   862c2:	3f10      	subs	r7, #16
   862c4:	2f10      	cmp	r7, #16
   862c6:	f340 80b5 	ble.w	86434 <_svfprintf_r+0xd9c>
   862ca:	3301      	adds	r3, #1
   862cc:	3110      	adds	r1, #16
   862ce:	2b07      	cmp	r3, #7
   862d0:	9127      	str	r1, [sp, #156]	; 0x9c
   862d2:	9326      	str	r3, [sp, #152]	; 0x98
   862d4:	e882 0840 	stmia.w	r2, {r6, fp}
   862d8:	ddf2      	ble.n	862c0 <_svfprintf_r+0xc28>
   862da:	aa25      	add	r2, sp, #148	; 0x94
   862dc:	4629      	mov	r1, r5
   862de:	4620      	mov	r0, r4
   862e0:	f002 fac4 	bl	8886c <__ssprint_r>
   862e4:	2800      	cmp	r0, #0
   862e6:	f47f aab4 	bne.w	85852 <_svfprintf_r+0x1ba>
   862ea:	464a      	mov	r2, r9
   862ec:	9927      	ldr	r1, [sp, #156]	; 0x9c
   862ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   862f0:	e7e7      	b.n	862c2 <_svfprintf_r+0xc2a>
   862f2:	2d00      	cmp	r5, #0
   862f4:	bf08      	it	eq
   862f6:	2c0a      	cmpeq	r4, #10
   862f8:	f0c0 8090 	bcc.w	8641c <_svfprintf_r+0xd84>
   862fc:	464e      	mov	r6, r9
   862fe:	4620      	mov	r0, r4
   86300:	4629      	mov	r1, r5
   86302:	220a      	movs	r2, #10
   86304:	2300      	movs	r3, #0
   86306:	f002 fff9 	bl	892fc <__aeabi_uldivmod>
   8630a:	3230      	adds	r2, #48	; 0x30
   8630c:	f806 2d01 	strb.w	r2, [r6, #-1]!
   86310:	4620      	mov	r0, r4
   86312:	4629      	mov	r1, r5
   86314:	2300      	movs	r3, #0
   86316:	220a      	movs	r2, #10
   86318:	f002 fff0 	bl	892fc <__aeabi_uldivmod>
   8631c:	4604      	mov	r4, r0
   8631e:	460d      	mov	r5, r1
   86320:	ea54 0305 	orrs.w	r3, r4, r5
   86324:	d1eb      	bne.n	862fe <_svfprintf_r+0xc66>
   86326:	eba9 0306 	sub.w	r3, r9, r6
   8632a:	930e      	str	r3, [sp, #56]	; 0x38
   8632c:	f7ff bad0 	b.w	858d0 <_svfprintf_r+0x238>
   86330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86332:	464e      	mov	r6, r9
   86334:	930e      	str	r3, [sp, #56]	; 0x38
   86336:	f7ff bacb 	b.w	858d0 <_svfprintf_r+0x238>
   8633a:	1e5e      	subs	r6, r3, #1
   8633c:	2e00      	cmp	r6, #0
   8633e:	f77f aeca 	ble.w	860d6 <_svfprintf_r+0xa3e>
   86342:	2e10      	cmp	r6, #16
   86344:	f340 83e3 	ble.w	86b0e <_svfprintf_r+0x1476>
   86348:	4622      	mov	r2, r4
   8634a:	f04f 0b10 	mov.w	fp, #16
   8634e:	4d91      	ldr	r5, [pc, #580]	; (86594 <_svfprintf_r+0xefc>)
   86350:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   86352:	e004      	b.n	8635e <_svfprintf_r+0xcc6>
   86354:	3e10      	subs	r6, #16
   86356:	2e10      	cmp	r6, #16
   86358:	f108 0808 	add.w	r8, r8, #8
   8635c:	dd15      	ble.n	8638a <_svfprintf_r+0xcf2>
   8635e:	3701      	adds	r7, #1
   86360:	3210      	adds	r2, #16
   86362:	2f07      	cmp	r7, #7
   86364:	9227      	str	r2, [sp, #156]	; 0x9c
   86366:	9726      	str	r7, [sp, #152]	; 0x98
   86368:	e888 0820 	stmia.w	r8, {r5, fp}
   8636c:	ddf2      	ble.n	86354 <_svfprintf_r+0xcbc>
   8636e:	aa25      	add	r2, sp, #148	; 0x94
   86370:	990b      	ldr	r1, [sp, #44]	; 0x2c
   86372:	4620      	mov	r0, r4
   86374:	f002 fa7a 	bl	8886c <__ssprint_r>
   86378:	2800      	cmp	r0, #0
   8637a:	f47f aa6a 	bne.w	85852 <_svfprintf_r+0x1ba>
   8637e:	3e10      	subs	r6, #16
   86380:	2e10      	cmp	r6, #16
   86382:	46c8      	mov	r8, r9
   86384:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   86386:	9f26      	ldr	r7, [sp, #152]	; 0x98
   86388:	dce9      	bgt.n	8635e <_svfprintf_r+0xcc6>
   8638a:	4614      	mov	r4, r2
   8638c:	3701      	adds	r7, #1
   8638e:	4434      	add	r4, r6
   86390:	2f07      	cmp	r7, #7
   86392:	9427      	str	r4, [sp, #156]	; 0x9c
   86394:	9726      	str	r7, [sp, #152]	; 0x98
   86396:	e888 0060 	stmia.w	r8, {r5, r6}
   8639a:	f77f ae9a 	ble.w	860d2 <_svfprintf_r+0xa3a>
   8639e:	aa25      	add	r2, sp, #148	; 0x94
   863a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   863a2:	980c      	ldr	r0, [sp, #48]	; 0x30
   863a4:	f002 fa62 	bl	8886c <__ssprint_r>
   863a8:	2800      	cmp	r0, #0
   863aa:	f47f aa52 	bne.w	85852 <_svfprintf_r+0x1ba>
   863ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   863b0:	9f26      	ldr	r7, [sp, #152]	; 0x98
   863b2:	46c8      	mov	r8, r9
   863b4:	e68f      	b.n	860d6 <_svfprintf_r+0xa3e>
   863b6:	3204      	adds	r2, #4
   863b8:	681c      	ldr	r4, [r3, #0]
   863ba:	2500      	movs	r5, #0
   863bc:	2301      	movs	r3, #1
   863be:	920f      	str	r2, [sp, #60]	; 0x3c
   863c0:	f7ff ba68 	b.w	85894 <_svfprintf_r+0x1fc>
   863c4:	681c      	ldr	r4, [r3, #0]
   863c6:	3304      	adds	r3, #4
   863c8:	930f      	str	r3, [sp, #60]	; 0x3c
   863ca:	2500      	movs	r5, #0
   863cc:	e42a      	b.n	85c24 <_svfprintf_r+0x58c>
   863ce:	681c      	ldr	r4, [r3, #0]
   863d0:	3304      	adds	r3, #4
   863d2:	17e5      	asrs	r5, r4, #31
   863d4:	4622      	mov	r2, r4
   863d6:	930f      	str	r3, [sp, #60]	; 0x3c
   863d8:	462b      	mov	r3, r5
   863da:	2a00      	cmp	r2, #0
   863dc:	f173 0300 	sbcs.w	r3, r3, #0
   863e0:	f6bf ac68 	bge.w	85cb4 <_svfprintf_r+0x61c>
   863e4:	272d      	movs	r7, #45	; 0x2d
   863e6:	4264      	negs	r4, r4
   863e8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   863ec:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   863f0:	2301      	movs	r3, #1
   863f2:	f7ff ba53 	b.w	8589c <_svfprintf_r+0x204>
   863f6:	990f      	ldr	r1, [sp, #60]	; 0x3c
   863f8:	2500      	movs	r5, #0
   863fa:	460a      	mov	r2, r1
   863fc:	3204      	adds	r2, #4
   863fe:	680c      	ldr	r4, [r1, #0]
   86400:	920f      	str	r2, [sp, #60]	; 0x3c
   86402:	f7ff ba47 	b.w	85894 <_svfprintf_r+0x1fc>
   86406:	4614      	mov	r4, r2
   86408:	3301      	adds	r3, #1
   8640a:	4434      	add	r4, r6
   8640c:	2b07      	cmp	r3, #7
   8640e:	9427      	str	r4, [sp, #156]	; 0x9c
   86410:	9326      	str	r3, [sp, #152]	; 0x98
   86412:	e888 0060 	stmia.w	r8, {r5, r6}
   86416:	f77f ab2f 	ble.w	85a78 <_svfprintf_r+0x3e0>
   8641a:	e6e0      	b.n	861de <_svfprintf_r+0xb46>
   8641c:	f8dd b01c 	ldr.w	fp, [sp, #28]
   86420:	2301      	movs	r3, #1
   86422:	ae42      	add	r6, sp, #264	; 0x108
   86424:	3430      	adds	r4, #48	; 0x30
   86426:	f8cd b01c 	str.w	fp, [sp, #28]
   8642a:	f806 4d41 	strb.w	r4, [r6, #-65]!
   8642e:	930e      	str	r3, [sp, #56]	; 0x38
   86430:	f7ff ba4e 	b.w	858d0 <_svfprintf_r+0x238>
   86434:	4635      	mov	r5, r6
   86436:	460c      	mov	r4, r1
   86438:	4646      	mov	r6, r8
   8643a:	4690      	mov	r8, r2
   8643c:	3301      	adds	r3, #1
   8643e:	443c      	add	r4, r7
   86440:	2b07      	cmp	r3, #7
   86442:	9427      	str	r4, [sp, #156]	; 0x9c
   86444:	9326      	str	r3, [sp, #152]	; 0x98
   86446:	e888 00a0 	stmia.w	r8, {r5, r7}
   8644a:	f300 8246 	bgt.w	868da <_svfprintf_r+0x1242>
   8644e:	f108 0808 	add.w	r8, r8, #8
   86452:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   86454:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   86456:	429a      	cmp	r2, r3
   86458:	db45      	blt.n	864e6 <_svfprintf_r+0xe4e>
   8645a:	9b07      	ldr	r3, [sp, #28]
   8645c:	07d9      	lsls	r1, r3, #31
   8645e:	d442      	bmi.n	864e6 <_svfprintf_r+0xe4e>
   86460:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   86462:	9812      	ldr	r0, [sp, #72]	; 0x48
   86464:	1a9a      	subs	r2, r3, r2
   86466:	1a1d      	subs	r5, r3, r0
   86468:	4295      	cmp	r5, r2
   8646a:	bfa8      	it	ge
   8646c:	4615      	movge	r5, r2
   8646e:	2d00      	cmp	r5, #0
   86470:	dd0e      	ble.n	86490 <_svfprintf_r+0xdf8>
   86472:	9926      	ldr	r1, [sp, #152]	; 0x98
   86474:	4406      	add	r6, r0
   86476:	3101      	adds	r1, #1
   86478:	442c      	add	r4, r5
   8647a:	2907      	cmp	r1, #7
   8647c:	f8c8 6000 	str.w	r6, [r8]
   86480:	9427      	str	r4, [sp, #156]	; 0x9c
   86482:	f8c8 5004 	str.w	r5, [r8, #4]
   86486:	9126      	str	r1, [sp, #152]	; 0x98
   86488:	f300 8216 	bgt.w	868b8 <_svfprintf_r+0x1220>
   8648c:	f108 0808 	add.w	r8, r8, #8
   86490:	2d00      	cmp	r5, #0
   86492:	bfb4      	ite	lt
   86494:	4616      	movlt	r6, r2
   86496:	1b56      	subge	r6, r2, r5
   86498:	2e00      	cmp	r6, #0
   8649a:	f77f aaef 	ble.w	85a7c <_svfprintf_r+0x3e4>
   8649e:	2e10      	cmp	r6, #16
   864a0:	f340 82f3 	ble.w	86a8a <_svfprintf_r+0x13f2>
   864a4:	4622      	mov	r2, r4
   864a6:	2710      	movs	r7, #16
   864a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   864aa:	4d3a      	ldr	r5, [pc, #232]	; (86594 <_svfprintf_r+0xefc>)
   864ac:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   864b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   864b2:	e004      	b.n	864be <_svfprintf_r+0xe26>
   864b4:	f108 0808 	add.w	r8, r8, #8
   864b8:	3e10      	subs	r6, #16
   864ba:	2e10      	cmp	r6, #16
   864bc:	dda3      	ble.n	86406 <_svfprintf_r+0xd6e>
   864be:	3301      	adds	r3, #1
   864c0:	3210      	adds	r2, #16
   864c2:	2b07      	cmp	r3, #7
   864c4:	9227      	str	r2, [sp, #156]	; 0x9c
   864c6:	9326      	str	r3, [sp, #152]	; 0x98
   864c8:	e888 00a0 	stmia.w	r8, {r5, r7}
   864cc:	ddf2      	ble.n	864b4 <_svfprintf_r+0xe1c>
   864ce:	aa25      	add	r2, sp, #148	; 0x94
   864d0:	4621      	mov	r1, r4
   864d2:	4658      	mov	r0, fp
   864d4:	f002 f9ca 	bl	8886c <__ssprint_r>
   864d8:	2800      	cmp	r0, #0
   864da:	f47f a9ba 	bne.w	85852 <_svfprintf_r+0x1ba>
   864de:	46c8      	mov	r8, r9
   864e0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   864e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   864e4:	e7e8      	b.n	864b8 <_svfprintf_r+0xe20>
   864e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   864e8:	9819      	ldr	r0, [sp, #100]	; 0x64
   864ea:	3301      	adds	r3, #1
   864ec:	991a      	ldr	r1, [sp, #104]	; 0x68
   864ee:	4404      	add	r4, r0
   864f0:	2b07      	cmp	r3, #7
   864f2:	9427      	str	r4, [sp, #156]	; 0x9c
   864f4:	f8c8 1000 	str.w	r1, [r8]
   864f8:	f8c8 0004 	str.w	r0, [r8, #4]
   864fc:	9326      	str	r3, [sp, #152]	; 0x98
   864fe:	f300 81cf 	bgt.w	868a0 <_svfprintf_r+0x1208>
   86502:	f108 0808 	add.w	r8, r8, #8
   86506:	e7ab      	b.n	86460 <_svfprintf_r+0xdc8>
   86508:	9b07      	ldr	r3, [sp, #28]
   8650a:	07da      	lsls	r2, r3, #31
   8650c:	f53f adad 	bmi.w	8606a <_svfprintf_r+0x9d2>
   86510:	2301      	movs	r3, #1
   86512:	9f26      	ldr	r7, [sp, #152]	; 0x98
   86514:	441c      	add	r4, r3
   86516:	441f      	add	r7, r3
   86518:	2f07      	cmp	r7, #7
   8651a:	9427      	str	r4, [sp, #156]	; 0x9c
   8651c:	f8c8 6000 	str.w	r6, [r8]
   86520:	9726      	str	r7, [sp, #152]	; 0x98
   86522:	f8c8 3004 	str.w	r3, [r8, #4]
   86526:	f77f add4 	ble.w	860d2 <_svfprintf_r+0xa3a>
   8652a:	aa25      	add	r2, sp, #148	; 0x94
   8652c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8652e:	980c      	ldr	r0, [sp, #48]	; 0x30
   86530:	f002 f99c 	bl	8886c <__ssprint_r>
   86534:	2800      	cmp	r0, #0
   86536:	f47f a98c 	bne.w	85852 <_svfprintf_r+0x1ba>
   8653a:	46c8      	mov	r8, r9
   8653c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8653e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   86540:	e5c9      	b.n	860d6 <_svfprintf_r+0xa3e>
   86542:	aa25      	add	r2, sp, #148	; 0x94
   86544:	990b      	ldr	r1, [sp, #44]	; 0x2c
   86546:	980c      	ldr	r0, [sp, #48]	; 0x30
   86548:	f002 f990 	bl	8886c <__ssprint_r>
   8654c:	2800      	cmp	r0, #0
   8654e:	f47f a980 	bne.w	85852 <_svfprintf_r+0x1ba>
   86552:	46c8      	mov	r8, r9
   86554:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86556:	9f26      	ldr	r7, [sp, #152]	; 0x98
   86558:	e596      	b.n	86088 <_svfprintf_r+0x9f0>
   8655a:	aa25      	add	r2, sp, #148	; 0x94
   8655c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8655e:	980c      	ldr	r0, [sp, #48]	; 0x30
   86560:	f002 f984 	bl	8886c <__ssprint_r>
   86564:	2800      	cmp	r0, #0
   86566:	f47f a974 	bne.w	85852 <_svfprintf_r+0x1ba>
   8656a:	46c8      	mov	r8, r9
   8656c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8656e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   86570:	e599      	b.n	860a6 <_svfprintf_r+0xa0e>
   86572:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   86574:	3407      	adds	r4, #7
   86576:	f024 0407 	bic.w	r4, r4, #7
   8657a:	f104 0108 	add.w	r1, r4, #8
   8657e:	e9d4 2300 	ldrd	r2, r3, [r4]
   86582:	910f      	str	r1, [sp, #60]	; 0x3c
   86584:	4614      	mov	r4, r2
   86586:	461d      	mov	r5, r3
   86588:	f7ff bb8f 	b.w	85caa <_svfprintf_r+0x612>
   8658c:	464e      	mov	r6, r9
   8658e:	f7ff b99f 	b.w	858d0 <_svfprintf_r+0x238>
   86592:	bf00      	nop
   86594:	000897b8 	.word	0x000897b8
   86598:	aa25      	add	r2, sp, #148	; 0x94
   8659a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8659c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8659e:	f002 f965 	bl	8886c <__ssprint_r>
   865a2:	2800      	cmp	r0, #0
   865a4:	f47f a955 	bne.w	85852 <_svfprintf_r+0x1ba>
   865a8:	46c8      	mov	r8, r9
   865aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   865ac:	f7ff ba16 	b.w	859dc <_svfprintf_r+0x344>
   865b0:	9c15      	ldr	r4, [sp, #84]	; 0x54
   865b2:	4622      	mov	r2, r4
   865b4:	4620      	mov	r0, r4
   865b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
   865b8:	4623      	mov	r3, r4
   865ba:	4621      	mov	r1, r4
   865bc:	f002 fe60 	bl	89280 <__aeabi_dcmpun>
   865c0:	2800      	cmp	r0, #0
   865c2:	f040 8273 	bne.w	86aac <_svfprintf_r+0x1414>
   865c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   865c8:	3301      	adds	r3, #1
   865ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
   865cc:	f023 0320 	bic.w	r3, r3, #32
   865d0:	930e      	str	r3, [sp, #56]	; 0x38
   865d2:	f000 819c 	beq.w	8690e <_svfprintf_r+0x1276>
   865d6:	2b47      	cmp	r3, #71	; 0x47
   865d8:	f000 80d6 	beq.w	86788 <_svfprintf_r+0x10f0>
   865dc:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   865e0:	9307      	str	r3, [sp, #28]
   865e2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   865e4:	1e1f      	subs	r7, r3, #0
   865e6:	9b15      	ldr	r3, [sp, #84]	; 0x54
   865e8:	9308      	str	r3, [sp, #32]
   865ea:	bfb7      	itett	lt
   865ec:	463b      	movlt	r3, r7
   865ee:	2300      	movge	r3, #0
   865f0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   865f4:	232d      	movlt	r3, #45	; 0x2d
   865f6:	9310      	str	r3, [sp, #64]	; 0x40
   865f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   865fa:	2b66      	cmp	r3, #102	; 0x66
   865fc:	f000 8190 	beq.w	86920 <_svfprintf_r+0x1288>
   86600:	2b46      	cmp	r3, #70	; 0x46
   86602:	f000 80a4 	beq.w	8674e <_svfprintf_r+0x10b6>
   86606:	2002      	movs	r0, #2
   86608:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8660a:	a923      	add	r1, sp, #140	; 0x8c
   8660c:	2b45      	cmp	r3, #69	; 0x45
   8660e:	bf0a      	itet	eq
   86610:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   86612:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   86614:	1c5d      	addeq	r5, r3, #1
   86616:	e88d 0021 	stmia.w	sp, {r0, r5}
   8661a:	9104      	str	r1, [sp, #16]
   8661c:	a820      	add	r0, sp, #128	; 0x80
   8661e:	a91f      	add	r1, sp, #124	; 0x7c
   86620:	463b      	mov	r3, r7
   86622:	9003      	str	r0, [sp, #12]
   86624:	9a08      	ldr	r2, [sp, #32]
   86626:	9102      	str	r1, [sp, #8]
   86628:	980c      	ldr	r0, [sp, #48]	; 0x30
   8662a:	f000 fb59 	bl	86ce0 <_dtoa_r>
   8662e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   86630:	4606      	mov	r6, r0
   86632:	2b67      	cmp	r3, #103	; 0x67
   86634:	f040 81ba 	bne.w	869ac <_svfprintf_r+0x1314>
   86638:	f01b 0f01 	tst.w	fp, #1
   8663c:	f000 8223 	beq.w	86a86 <_svfprintf_r+0x13ee>
   86640:	1974      	adds	r4, r6, r5
   86642:	9a16      	ldr	r2, [sp, #88]	; 0x58
   86644:	9808      	ldr	r0, [sp, #32]
   86646:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   86648:	4639      	mov	r1, r7
   8664a:	f002 fde7 	bl	8921c <__aeabi_dcmpeq>
   8664e:	2800      	cmp	r0, #0
   86650:	f040 8124 	bne.w	8689c <_svfprintf_r+0x1204>
   86654:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86656:	42a3      	cmp	r3, r4
   86658:	d206      	bcs.n	86668 <_svfprintf_r+0xfd0>
   8665a:	2130      	movs	r1, #48	; 0x30
   8665c:	1c5a      	adds	r2, r3, #1
   8665e:	9223      	str	r2, [sp, #140]	; 0x8c
   86660:	7019      	strb	r1, [r3, #0]
   86662:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86664:	429c      	cmp	r4, r3
   86666:	d8f9      	bhi.n	8665c <_svfprintf_r+0xfc4>
   86668:	1b9b      	subs	r3, r3, r6
   8666a:	9313      	str	r3, [sp, #76]	; 0x4c
   8666c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8666e:	2b47      	cmp	r3, #71	; 0x47
   86670:	f000 80a2 	beq.w	867b8 <_svfprintf_r+0x1120>
   86674:	9b11      	ldr	r3, [sp, #68]	; 0x44
   86676:	2b65      	cmp	r3, #101	; 0x65
   86678:	f340 81a7 	ble.w	869ca <_svfprintf_r+0x1332>
   8667c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8667e:	2b66      	cmp	r3, #102	; 0x66
   86680:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   86682:	9312      	str	r3, [sp, #72]	; 0x48
   86684:	f000 8171 	beq.w	8696a <_svfprintf_r+0x12d2>
   86688:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8668a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8668c:	4619      	mov	r1, r3
   8668e:	4291      	cmp	r1, r2
   86690:	f300 815d 	bgt.w	8694e <_svfprintf_r+0x12b6>
   86694:	f01b 0f01 	tst.w	fp, #1
   86698:	f040 81f0 	bne.w	86a7c <_svfprintf_r+0x13e4>
   8669c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   866a0:	9308      	str	r3, [sp, #32]
   866a2:	2367      	movs	r3, #103	; 0x67
   866a4:	920e      	str	r2, [sp, #56]	; 0x38
   866a6:	9311      	str	r3, [sp, #68]	; 0x44
   866a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
   866aa:	2b00      	cmp	r3, #0
   866ac:	d17d      	bne.n	867aa <_svfprintf_r+0x1112>
   866ae:	930a      	str	r3, [sp, #40]	; 0x28
   866b0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   866b4:	f7ff b914 	b.w	858e0 <_svfprintf_r+0x248>
   866b8:	f024 0407 	bic.w	r4, r4, #7
   866bc:	6823      	ldr	r3, [r4, #0]
   866be:	9315      	str	r3, [sp, #84]	; 0x54
   866c0:	6863      	ldr	r3, [r4, #4]
   866c2:	9314      	str	r3, [sp, #80]	; 0x50
   866c4:	f104 0308 	add.w	r3, r4, #8
   866c8:	930f      	str	r3, [sp, #60]	; 0x3c
   866ca:	f7ff bb2f 	b.w	85d2c <_svfprintf_r+0x694>
   866ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   866d0:	6813      	ldr	r3, [r2, #0]
   866d2:	3204      	adds	r2, #4
   866d4:	920f      	str	r2, [sp, #60]	; 0x3c
   866d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   866d8:	601a      	str	r2, [r3, #0]
   866da:	f7ff b804 	b.w	856e6 <_svfprintf_r+0x4e>
   866de:	9b26      	ldr	r3, [sp, #152]	; 0x98
   866e0:	4daf      	ldr	r5, [pc, #700]	; (869a0 <_svfprintf_r+0x1308>)
   866e2:	f7ff b9ad 	b.w	85a40 <_svfprintf_r+0x3a8>
   866e6:	aa25      	add	r2, sp, #148	; 0x94
   866e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   866ea:	980c      	ldr	r0, [sp, #48]	; 0x30
   866ec:	f002 f8be 	bl	8886c <__ssprint_r>
   866f0:	2800      	cmp	r0, #0
   866f2:	f47f a8ae 	bne.w	85852 <_svfprintf_r+0x1ba>
   866f6:	46c8      	mov	r8, r9
   866f8:	e431      	b.n	85f5e <_svfprintf_r+0x8c6>
   866fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   866fc:	4613      	mov	r3, r2
   866fe:	3304      	adds	r3, #4
   86700:	930f      	str	r3, [sp, #60]	; 0x3c
   86702:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86704:	6811      	ldr	r1, [r2, #0]
   86706:	17dd      	asrs	r5, r3, #31
   86708:	461a      	mov	r2, r3
   8670a:	462b      	mov	r3, r5
   8670c:	e9c1 2300 	strd	r2, r3, [r1]
   86710:	f7fe bfe9 	b.w	856e6 <_svfprintf_r+0x4e>
   86714:	aa25      	add	r2, sp, #148	; 0x94
   86716:	990b      	ldr	r1, [sp, #44]	; 0x2c
   86718:	980c      	ldr	r0, [sp, #48]	; 0x30
   8671a:	f002 f8a7 	bl	8886c <__ssprint_r>
   8671e:	2800      	cmp	r0, #0
   86720:	f47f a897 	bne.w	85852 <_svfprintf_r+0x1ba>
   86724:	46c8      	mov	r8, r9
   86726:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86728:	e432      	b.n	85f90 <_svfprintf_r+0x8f8>
   8672a:	f108 0808 	add.w	r8, r8, #8
   8672e:	e52f      	b.n	86190 <_svfprintf_r+0xaf8>
   86730:	2140      	movs	r1, #64	; 0x40
   86732:	980c      	ldr	r0, [sp, #48]	; 0x30
   86734:	f001 fa22 	bl	87b7c <_malloc_r>
   86738:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8673a:	6010      	str	r0, [r2, #0]
   8673c:	6110      	str	r0, [r2, #16]
   8673e:	2800      	cmp	r0, #0
   86740:	f000 8214 	beq.w	86b6c <_svfprintf_r+0x14d4>
   86744:	2340      	movs	r3, #64	; 0x40
   86746:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   86748:	6153      	str	r3, [r2, #20]
   8674a:	f7fe bfbc 	b.w	856c6 <_svfprintf_r+0x2e>
   8674e:	2003      	movs	r0, #3
   86750:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   86752:	a923      	add	r1, sp, #140	; 0x8c
   86754:	e88d 0011 	stmia.w	sp, {r0, r4}
   86758:	9104      	str	r1, [sp, #16]
   8675a:	a820      	add	r0, sp, #128	; 0x80
   8675c:	a91f      	add	r1, sp, #124	; 0x7c
   8675e:	9003      	str	r0, [sp, #12]
   86760:	9a08      	ldr	r2, [sp, #32]
   86762:	463b      	mov	r3, r7
   86764:	9102      	str	r1, [sp, #8]
   86766:	980c      	ldr	r0, [sp, #48]	; 0x30
   86768:	f000 faba 	bl	86ce0 <_dtoa_r>
   8676c:	4625      	mov	r5, r4
   8676e:	4606      	mov	r6, r0
   86770:	9b11      	ldr	r3, [sp, #68]	; 0x44
   86772:	1974      	adds	r4, r6, r5
   86774:	2b46      	cmp	r3, #70	; 0x46
   86776:	f47f af64 	bne.w	86642 <_svfprintf_r+0xfaa>
   8677a:	7833      	ldrb	r3, [r6, #0]
   8677c:	2b30      	cmp	r3, #48	; 0x30
   8677e:	f000 8187 	beq.w	86a90 <_svfprintf_r+0x13f8>
   86782:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   86784:	442c      	add	r4, r5
   86786:	e75c      	b.n	86642 <_svfprintf_r+0xfaa>
   86788:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8678a:	2b00      	cmp	r3, #0
   8678c:	bf08      	it	eq
   8678e:	2301      	moveq	r3, #1
   86790:	930a      	str	r3, [sp, #40]	; 0x28
   86792:	e723      	b.n	865dc <_svfprintf_r+0xf44>
   86794:	4630      	mov	r0, r6
   86796:	950a      	str	r5, [sp, #40]	; 0x28
   86798:	f7fe ff50 	bl	8563c <strlen>
   8679c:	940f      	str	r4, [sp, #60]	; 0x3c
   8679e:	900e      	str	r0, [sp, #56]	; 0x38
   867a0:	f8cd b01c 	str.w	fp, [sp, #28]
   867a4:	4603      	mov	r3, r0
   867a6:	f7ff b9e7 	b.w	85b78 <_svfprintf_r+0x4e0>
   867aa:	272d      	movs	r7, #45	; 0x2d
   867ac:	2300      	movs	r3, #0
   867ae:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   867b2:	930a      	str	r3, [sp, #40]	; 0x28
   867b4:	f7ff b895 	b.w	858e2 <_svfprintf_r+0x24a>
   867b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   867ba:	461a      	mov	r2, r3
   867bc:	9312      	str	r3, [sp, #72]	; 0x48
   867be:	3303      	adds	r3, #3
   867c0:	db04      	blt.n	867cc <_svfprintf_r+0x1134>
   867c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   867c4:	4619      	mov	r1, r3
   867c6:	4291      	cmp	r1, r2
   867c8:	f6bf af5e 	bge.w	86688 <_svfprintf_r+0xff0>
   867cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   867ce:	3b02      	subs	r3, #2
   867d0:	9311      	str	r3, [sp, #68]	; 0x44
   867d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   867d4:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   867d8:	3b01      	subs	r3, #1
   867da:	2b00      	cmp	r3, #0
   867dc:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   867e0:	bfb4      	ite	lt
   867e2:	222d      	movlt	r2, #45	; 0x2d
   867e4:	222b      	movge	r2, #43	; 0x2b
   867e6:	931f      	str	r3, [sp, #124]	; 0x7c
   867e8:	bfb8      	it	lt
   867ea:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   867ec:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   867f0:	bfb8      	it	lt
   867f2:	f1c3 0301 	rsblt	r3, r3, #1
   867f6:	2b09      	cmp	r3, #9
   867f8:	f340 811f 	ble.w	86a3a <_svfprintf_r+0x13a2>
   867fc:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   86800:	4601      	mov	r1, r0
   86802:	4c68      	ldr	r4, [pc, #416]	; (869a4 <_svfprintf_r+0x130c>)
   86804:	e000      	b.n	86808 <_svfprintf_r+0x1170>
   86806:	4611      	mov	r1, r2
   86808:	fb84 5203 	smull	r5, r2, r4, r3
   8680c:	17dd      	asrs	r5, r3, #31
   8680e:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   86812:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   86816:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   8681a:	3230      	adds	r2, #48	; 0x30
   8681c:	2d09      	cmp	r5, #9
   8681e:	f801 2c01 	strb.w	r2, [r1, #-1]
   86822:	462b      	mov	r3, r5
   86824:	f101 32ff 	add.w	r2, r1, #4294967295
   86828:	dced      	bgt.n	86806 <_svfprintf_r+0x116e>
   8682a:	3330      	adds	r3, #48	; 0x30
   8682c:	3902      	subs	r1, #2
   8682e:	b2dc      	uxtb	r4, r3
   86830:	4288      	cmp	r0, r1
   86832:	f802 4c01 	strb.w	r4, [r2, #-1]
   86836:	f240 8192 	bls.w	86b5e <_svfprintf_r+0x14c6>
   8683a:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   8683e:	4613      	mov	r3, r2
   86840:	e001      	b.n	86846 <_svfprintf_r+0x11ae>
   86842:	f813 4b01 	ldrb.w	r4, [r3], #1
   86846:	4283      	cmp	r3, r0
   86848:	f801 4b01 	strb.w	r4, [r1], #1
   8684c:	d1f9      	bne.n	86842 <_svfprintf_r+0x11aa>
   8684e:	3301      	adds	r3, #1
   86850:	1a9b      	subs	r3, r3, r2
   86852:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   86856:	4413      	add	r3, r2
   86858:	aa21      	add	r2, sp, #132	; 0x84
   8685a:	1a9b      	subs	r3, r3, r2
   8685c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8685e:	931b      	str	r3, [sp, #108]	; 0x6c
   86860:	2a01      	cmp	r2, #1
   86862:	4413      	add	r3, r2
   86864:	930e      	str	r3, [sp, #56]	; 0x38
   86866:	f340 8148 	ble.w	86afa <_svfprintf_r+0x1462>
   8686a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8686c:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8686e:	4413      	add	r3, r2
   86870:	930e      	str	r3, [sp, #56]	; 0x38
   86872:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   86876:	9308      	str	r3, [sp, #32]
   86878:	2300      	movs	r3, #0
   8687a:	9312      	str	r3, [sp, #72]	; 0x48
   8687c:	e714      	b.n	866a8 <_svfprintf_r+0x1010>
   8687e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86880:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86882:	f7ff b876 	b.w	85972 <_svfprintf_r+0x2da>
   86886:	aa25      	add	r2, sp, #148	; 0x94
   86888:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8688a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8688c:	f001 ffee 	bl	8886c <__ssprint_r>
   86890:	2800      	cmp	r0, #0
   86892:	f47e afde 	bne.w	85852 <_svfprintf_r+0x1ba>
   86896:	46c8      	mov	r8, r9
   86898:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8689a:	e4fb      	b.n	86294 <_svfprintf_r+0xbfc>
   8689c:	4623      	mov	r3, r4
   8689e:	e6e3      	b.n	86668 <_svfprintf_r+0xfd0>
   868a0:	aa25      	add	r2, sp, #148	; 0x94
   868a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   868a4:	980c      	ldr	r0, [sp, #48]	; 0x30
   868a6:	f001 ffe1 	bl	8886c <__ssprint_r>
   868aa:	2800      	cmp	r0, #0
   868ac:	f47e afd1 	bne.w	85852 <_svfprintf_r+0x1ba>
   868b0:	46c8      	mov	r8, r9
   868b2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   868b4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   868b6:	e5d3      	b.n	86460 <_svfprintf_r+0xdc8>
   868b8:	aa25      	add	r2, sp, #148	; 0x94
   868ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
   868bc:	980c      	ldr	r0, [sp, #48]	; 0x30
   868be:	f001 ffd5 	bl	8886c <__ssprint_r>
   868c2:	2800      	cmp	r0, #0
   868c4:	f47e afc5 	bne.w	85852 <_svfprintf_r+0x1ba>
   868c8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   868ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   868cc:	46c8      	mov	r8, r9
   868ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   868d0:	1a9a      	subs	r2, r3, r2
   868d2:	e5dd      	b.n	86490 <_svfprintf_r+0xdf8>
   868d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   868d6:	f7ff b8fe 	b.w	85ad6 <_svfprintf_r+0x43e>
   868da:	aa25      	add	r2, sp, #148	; 0x94
   868dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   868de:	980c      	ldr	r0, [sp, #48]	; 0x30
   868e0:	f001 ffc4 	bl	8886c <__ssprint_r>
   868e4:	2800      	cmp	r0, #0
   868e6:	f47e afb4 	bne.w	85852 <_svfprintf_r+0x1ba>
   868ea:	46c8      	mov	r8, r9
   868ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   868ee:	e5b0      	b.n	86452 <_svfprintf_r+0xdba>
   868f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   868f2:	4637      	mov	r7, r6
   868f4:	2b06      	cmp	r3, #6
   868f6:	bf28      	it	cs
   868f8:	2306      	movcs	r3, #6
   868fa:	960a      	str	r6, [sp, #40]	; 0x28
   868fc:	9612      	str	r6, [sp, #72]	; 0x48
   868fe:	9308      	str	r3, [sp, #32]
   86900:	940f      	str	r4, [sp, #60]	; 0x3c
   86902:	f8cd b01c 	str.w	fp, [sp, #28]
   86906:	930e      	str	r3, [sp, #56]	; 0x38
   86908:	4e27      	ldr	r6, [pc, #156]	; (869a8 <_svfprintf_r+0x1310>)
   8690a:	f7fe bfe9 	b.w	858e0 <_svfprintf_r+0x248>
   8690e:	2306      	movs	r3, #6
   86910:	930a      	str	r3, [sp, #40]	; 0x28
   86912:	e663      	b.n	865dc <_svfprintf_r+0xf44>
   86914:	232d      	movs	r3, #45	; 0x2d
   86916:	461f      	mov	r7, r3
   86918:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8691c:	f7ff ba28 	b.w	85d70 <_svfprintf_r+0x6d8>
   86920:	2003      	movs	r0, #3
   86922:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   86924:	a923      	add	r1, sp, #140	; 0x8c
   86926:	e88d 0011 	stmia.w	sp, {r0, r4}
   8692a:	9104      	str	r1, [sp, #16]
   8692c:	a820      	add	r0, sp, #128	; 0x80
   8692e:	a91f      	add	r1, sp, #124	; 0x7c
   86930:	9003      	str	r0, [sp, #12]
   86932:	9a08      	ldr	r2, [sp, #32]
   86934:	463b      	mov	r3, r7
   86936:	9102      	str	r1, [sp, #8]
   86938:	980c      	ldr	r0, [sp, #48]	; 0x30
   8693a:	f000 f9d1 	bl	86ce0 <_dtoa_r>
   8693e:	4625      	mov	r5, r4
   86940:	4606      	mov	r6, r0
   86942:	1904      	adds	r4, r0, r4
   86944:	e719      	b.n	8677a <_svfprintf_r+0x10e2>
   86946:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86948:	4d15      	ldr	r5, [pc, #84]	; (869a0 <_svfprintf_r+0x1308>)
   8694a:	f7ff bb7e 	b.w	8604a <_svfprintf_r+0x9b2>
   8694e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   86950:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   86952:	4413      	add	r3, r2
   86954:	9a12      	ldr	r2, [sp, #72]	; 0x48
   86956:	930e      	str	r3, [sp, #56]	; 0x38
   86958:	2a00      	cmp	r2, #0
   8695a:	f340 80c7 	ble.w	86aec <_svfprintf_r+0x1454>
   8695e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   86962:	9308      	str	r3, [sp, #32]
   86964:	2367      	movs	r3, #103	; 0x67
   86966:	9311      	str	r3, [sp, #68]	; 0x44
   86968:	e69e      	b.n	866a8 <_svfprintf_r+0x1010>
   8696a:	2b00      	cmp	r3, #0
   8696c:	f340 80e1 	ble.w	86b32 <_svfprintf_r+0x149a>
   86970:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   86972:	2a00      	cmp	r2, #0
   86974:	f040 80b0 	bne.w	86ad8 <_svfprintf_r+0x1440>
   86978:	f01b 0f01 	tst.w	fp, #1
   8697c:	f040 80ac 	bne.w	86ad8 <_svfprintf_r+0x1440>
   86980:	9308      	str	r3, [sp, #32]
   86982:	930e      	str	r3, [sp, #56]	; 0x38
   86984:	e690      	b.n	866a8 <_svfprintf_r+0x1010>
   86986:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86988:	940f      	str	r4, [sp, #60]	; 0x3c
   8698a:	9308      	str	r3, [sp, #32]
   8698c:	930e      	str	r3, [sp, #56]	; 0x38
   8698e:	900a      	str	r0, [sp, #40]	; 0x28
   86990:	f8cd b01c 	str.w	fp, [sp, #28]
   86994:	9012      	str	r0, [sp, #72]	; 0x48
   86996:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8699a:	f7fe bfa1 	b.w	858e0 <_svfprintf_r+0x248>
   8699e:	bf00      	nop
   869a0:	000897b8 	.word	0x000897b8
   869a4:	66666667 	.word	0x66666667
   869a8:	0008979c 	.word	0x0008979c
   869ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
   869ae:	2b47      	cmp	r3, #71	; 0x47
   869b0:	f47f ae46 	bne.w	86640 <_svfprintf_r+0xfa8>
   869b4:	f01b 0f01 	tst.w	fp, #1
   869b8:	f47f aeda 	bne.w	86770 <_svfprintf_r+0x10d8>
   869bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   869be:	1b9b      	subs	r3, r3, r6
   869c0:	9313      	str	r3, [sp, #76]	; 0x4c
   869c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   869c4:	2b47      	cmp	r3, #71	; 0x47
   869c6:	f43f aef7 	beq.w	867b8 <_svfprintf_r+0x1120>
   869ca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   869cc:	9312      	str	r3, [sp, #72]	; 0x48
   869ce:	e700      	b.n	867d2 <_svfprintf_r+0x113a>
   869d0:	2000      	movs	r0, #0
   869d2:	900a      	str	r0, [sp, #40]	; 0x28
   869d4:	f7fe bebc 	b.w	85750 <_svfprintf_r+0xb8>
   869d8:	424f      	negs	r7, r1
   869da:	3110      	adds	r1, #16
   869dc:	da35      	bge.n	86a4a <_svfprintf_r+0x13b2>
   869de:	2410      	movs	r4, #16
   869e0:	4d6a      	ldr	r5, [pc, #424]	; (86b8c <_svfprintf_r+0x14f4>)
   869e2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   869e6:	e004      	b.n	869f2 <_svfprintf_r+0x135a>
   869e8:	f108 0808 	add.w	r8, r8, #8
   869ec:	3f10      	subs	r7, #16
   869ee:	2f10      	cmp	r7, #16
   869f0:	dd2c      	ble.n	86a4c <_svfprintf_r+0x13b4>
   869f2:	3301      	adds	r3, #1
   869f4:	3210      	adds	r2, #16
   869f6:	2b07      	cmp	r3, #7
   869f8:	9227      	str	r2, [sp, #156]	; 0x9c
   869fa:	9326      	str	r3, [sp, #152]	; 0x98
   869fc:	f8c8 5000 	str.w	r5, [r8]
   86a00:	f8c8 4004 	str.w	r4, [r8, #4]
   86a04:	ddf0      	ble.n	869e8 <_svfprintf_r+0x1350>
   86a06:	aa25      	add	r2, sp, #148	; 0x94
   86a08:	990b      	ldr	r1, [sp, #44]	; 0x2c
   86a0a:	4658      	mov	r0, fp
   86a0c:	f001 ff2e 	bl	8886c <__ssprint_r>
   86a10:	2800      	cmp	r0, #0
   86a12:	f47e af1e 	bne.w	85852 <_svfprintf_r+0x1ba>
   86a16:	46c8      	mov	r8, r9
   86a18:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   86a1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86a1c:	e7e6      	b.n	869ec <_svfprintf_r+0x1354>
   86a1e:	aa25      	add	r2, sp, #148	; 0x94
   86a20:	990b      	ldr	r1, [sp, #44]	; 0x2c
   86a22:	980c      	ldr	r0, [sp, #48]	; 0x30
   86a24:	f001 ff22 	bl	8886c <__ssprint_r>
   86a28:	2800      	cmp	r0, #0
   86a2a:	f47e af12 	bne.w	85852 <_svfprintf_r+0x1ba>
   86a2e:	46c8      	mov	r8, r9
   86a30:	991f      	ldr	r1, [sp, #124]	; 0x7c
   86a32:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   86a34:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86a36:	f7ff bbc3 	b.w	861c0 <_svfprintf_r+0xb28>
   86a3a:	2230      	movs	r2, #48	; 0x30
   86a3c:	4413      	add	r3, r2
   86a3e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   86a42:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   86a46:	ab22      	add	r3, sp, #136	; 0x88
   86a48:	e706      	b.n	86858 <_svfprintf_r+0x11c0>
   86a4a:	4d50      	ldr	r5, [pc, #320]	; (86b8c <_svfprintf_r+0x14f4>)
   86a4c:	3301      	adds	r3, #1
   86a4e:	443a      	add	r2, r7
   86a50:	2b07      	cmp	r3, #7
   86a52:	e888 00a0 	stmia.w	r8, {r5, r7}
   86a56:	9227      	str	r2, [sp, #156]	; 0x9c
   86a58:	9326      	str	r3, [sp, #152]	; 0x98
   86a5a:	f108 0808 	add.w	r8, r8, #8
   86a5e:	f77f abb2 	ble.w	861c6 <_svfprintf_r+0xb2e>
   86a62:	aa25      	add	r2, sp, #148	; 0x94
   86a64:	990b      	ldr	r1, [sp, #44]	; 0x2c
   86a66:	980c      	ldr	r0, [sp, #48]	; 0x30
   86a68:	f001 ff00 	bl	8886c <__ssprint_r>
   86a6c:	2800      	cmp	r0, #0
   86a6e:	f47e aef0 	bne.w	85852 <_svfprintf_r+0x1ba>
   86a72:	46c8      	mov	r8, r9
   86a74:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   86a76:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86a78:	f7ff bba5 	b.w	861c6 <_svfprintf_r+0xb2e>
   86a7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86a7e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   86a80:	4413      	add	r3, r2
   86a82:	930e      	str	r3, [sp, #56]	; 0x38
   86a84:	e76b      	b.n	8695e <_svfprintf_r+0x12c6>
   86a86:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86a88:	e5ee      	b.n	86668 <_svfprintf_r+0xfd0>
   86a8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86a8c:	4d3f      	ldr	r5, [pc, #252]	; (86b8c <_svfprintf_r+0x14f4>)
   86a8e:	e4bb      	b.n	86408 <_svfprintf_r+0xd70>
   86a90:	9a16      	ldr	r2, [sp, #88]	; 0x58
   86a92:	9808      	ldr	r0, [sp, #32]
   86a94:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   86a96:	4639      	mov	r1, r7
   86a98:	f002 fbc0 	bl	8921c <__aeabi_dcmpeq>
   86a9c:	2800      	cmp	r0, #0
   86a9e:	f47f ae70 	bne.w	86782 <_svfprintf_r+0x10ea>
   86aa2:	f1c5 0501 	rsb	r5, r5, #1
   86aa6:	951f      	str	r5, [sp, #124]	; 0x7c
   86aa8:	442c      	add	r4, r5
   86aaa:	e5ca      	b.n	86642 <_svfprintf_r+0xfaa>
   86aac:	9b14      	ldr	r3, [sp, #80]	; 0x50
   86aae:	4e38      	ldr	r6, [pc, #224]	; (86b90 <_svfprintf_r+0x14f8>)
   86ab0:	2b00      	cmp	r3, #0
   86ab2:	bfbe      	ittt	lt
   86ab4:	232d      	movlt	r3, #45	; 0x2d
   86ab6:	461f      	movlt	r7, r3
   86ab8:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   86abc:	f04f 0303 	mov.w	r3, #3
   86ac0:	461a      	mov	r2, r3
   86ac2:	9308      	str	r3, [sp, #32]
   86ac4:	f04f 0300 	mov.w	r3, #0
   86ac8:	bfa8      	it	ge
   86aca:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   86ace:	4619      	mov	r1, r3
   86ad0:	930a      	str	r3, [sp, #40]	; 0x28
   86ad2:	4b30      	ldr	r3, [pc, #192]	; (86b94 <_svfprintf_r+0x14fc>)
   86ad4:	f7ff b954 	b.w	85d80 <_svfprintf_r+0x6e8>
   86ad8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86ada:	9a19      	ldr	r2, [sp, #100]	; 0x64
   86adc:	4413      	add	r3, r2
   86ade:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   86ae0:	441a      	add	r2, r3
   86ae2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   86ae6:	920e      	str	r2, [sp, #56]	; 0x38
   86ae8:	9308      	str	r3, [sp, #32]
   86aea:	e5dd      	b.n	866a8 <_svfprintf_r+0x1010>
   86aec:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86aee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   86af0:	f1c3 0301 	rsb	r3, r3, #1
   86af4:	441a      	add	r2, r3
   86af6:	4613      	mov	r3, r2
   86af8:	e7c3      	b.n	86a82 <_svfprintf_r+0x13ea>
   86afa:	f01b 0301 	ands.w	r3, fp, #1
   86afe:	9312      	str	r3, [sp, #72]	; 0x48
   86b00:	f47f aeb3 	bne.w	8686a <_svfprintf_r+0x11d2>
   86b04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86b06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   86b0a:	9308      	str	r3, [sp, #32]
   86b0c:	e5cc      	b.n	866a8 <_svfprintf_r+0x1010>
   86b0e:	4d1f      	ldr	r5, [pc, #124]	; (86b8c <_svfprintf_r+0x14f4>)
   86b10:	e43c      	b.n	8638c <_svfprintf_r+0xcf4>
   86b12:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86b14:	4d1d      	ldr	r5, [pc, #116]	; (86b8c <_svfprintf_r+0x14f4>)
   86b16:	e491      	b.n	8643c <_svfprintf_r+0xda4>
   86b18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   86b1a:	f89a 3001 	ldrb.w	r3, [sl, #1]
   86b1e:	6828      	ldr	r0, [r5, #0]
   86b20:	46a2      	mov	sl, r4
   86b22:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   86b26:	900a      	str	r0, [sp, #40]	; 0x28
   86b28:	4628      	mov	r0, r5
   86b2a:	3004      	adds	r0, #4
   86b2c:	900f      	str	r0, [sp, #60]	; 0x3c
   86b2e:	f7fe be0d 	b.w	8574c <_svfprintf_r+0xb4>
   86b32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86b34:	b913      	cbnz	r3, 86b3c <_svfprintf_r+0x14a4>
   86b36:	f01b 0f01 	tst.w	fp, #1
   86b3a:	d002      	beq.n	86b42 <_svfprintf_r+0x14aa>
   86b3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   86b3e:	3301      	adds	r3, #1
   86b40:	e7cd      	b.n	86ade <_svfprintf_r+0x1446>
   86b42:	2301      	movs	r3, #1
   86b44:	e71c      	b.n	86980 <_svfprintf_r+0x12e8>
   86b46:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86b4a:	f7ff b980 	b.w	85e4e <_svfprintf_r+0x7b6>
   86b4e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86b52:	f7ff b93a 	b.w	85dca <_svfprintf_r+0x732>
   86b56:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86b5a:	f7ff b84f 	b.w	85bfc <_svfprintf_r+0x564>
   86b5e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   86b62:	e679      	b.n	86858 <_svfprintf_r+0x11c0>
   86b64:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86b68:	f7ff b9b2 	b.w	85ed0 <_svfprintf_r+0x838>
   86b6c:	f04f 32ff 	mov.w	r2, #4294967295
   86b70:	230c      	movs	r3, #12
   86b72:	9209      	str	r2, [sp, #36]	; 0x24
   86b74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   86b76:	6013      	str	r3, [r2, #0]
   86b78:	f7fe be74 	b.w	85864 <_svfprintf_r+0x1cc>
   86b7c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86b80:	f7ff b8c4 	b.w	85d0c <_svfprintf_r+0x674>
   86b84:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86b88:	f7ff b878 	b.w	85c7c <_svfprintf_r+0x5e4>
   86b8c:	000897b8 	.word	0x000897b8
   86b90:	00089770 	.word	0x00089770
   86b94:	0008976c 	.word	0x0008976c

00086b98 <register_fini>:
   86b98:	4b02      	ldr	r3, [pc, #8]	; (86ba4 <register_fini+0xc>)
   86b9a:	b113      	cbz	r3, 86ba2 <register_fini+0xa>
   86b9c:	4802      	ldr	r0, [pc, #8]	; (86ba8 <register_fini+0x10>)
   86b9e:	f000 b805 	b.w	86bac <atexit>
   86ba2:	4770      	bx	lr
   86ba4:	00000000 	.word	0x00000000
   86ba8:	00087b25 	.word	0x00087b25

00086bac <atexit>:
   86bac:	2300      	movs	r3, #0
   86bae:	4601      	mov	r1, r0
   86bb0:	461a      	mov	r2, r3
   86bb2:	4618      	mov	r0, r3
   86bb4:	f001 bed8 	b.w	88968 <__register_exitproc>

00086bb8 <quorem>:
   86bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86bbc:	6903      	ldr	r3, [r0, #16]
   86bbe:	690f      	ldr	r7, [r1, #16]
   86bc0:	b083      	sub	sp, #12
   86bc2:	429f      	cmp	r7, r3
   86bc4:	f300 8088 	bgt.w	86cd8 <quorem+0x120>
   86bc8:	3f01      	subs	r7, #1
   86bca:	f101 0614 	add.w	r6, r1, #20
   86bce:	f100 0a14 	add.w	sl, r0, #20
   86bd2:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   86bd6:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   86bda:	3301      	adds	r3, #1
   86bdc:	fbb2 f8f3 	udiv	r8, r2, r3
   86be0:	00bb      	lsls	r3, r7, #2
   86be2:	9300      	str	r3, [sp, #0]
   86be4:	eb06 0903 	add.w	r9, r6, r3
   86be8:	4453      	add	r3, sl
   86bea:	9301      	str	r3, [sp, #4]
   86bec:	f1b8 0f00 	cmp.w	r8, #0
   86bf0:	d03b      	beq.n	86c6a <quorem+0xb2>
   86bf2:	2300      	movs	r3, #0
   86bf4:	46b4      	mov	ip, r6
   86bf6:	461c      	mov	r4, r3
   86bf8:	46d6      	mov	lr, sl
   86bfa:	f85c 2b04 	ldr.w	r2, [ip], #4
   86bfe:	f8de 5000 	ldr.w	r5, [lr]
   86c02:	fa1f fb82 	uxth.w	fp, r2
   86c06:	fb08 330b 	mla	r3, r8, fp, r3
   86c0a:	0c12      	lsrs	r2, r2, #16
   86c0c:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   86c10:	fb08 bb02 	mla	fp, r8, r2, fp
   86c14:	b29a      	uxth	r2, r3
   86c16:	1aa2      	subs	r2, r4, r2
   86c18:	b2ab      	uxth	r3, r5
   86c1a:	fa1f f48b 	uxth.w	r4, fp
   86c1e:	441a      	add	r2, r3
   86c20:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   86c24:	eb04 4422 	add.w	r4, r4, r2, asr #16
   86c28:	b292      	uxth	r2, r2
   86c2a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   86c2e:	45e1      	cmp	r9, ip
   86c30:	f84e 2b04 	str.w	r2, [lr], #4
   86c34:	ea4f 4424 	mov.w	r4, r4, asr #16
   86c38:	ea4f 431b 	mov.w	r3, fp, lsr #16
   86c3c:	d2dd      	bcs.n	86bfa <quorem+0x42>
   86c3e:	9b00      	ldr	r3, [sp, #0]
   86c40:	f85a 3003 	ldr.w	r3, [sl, r3]
   86c44:	b98b      	cbnz	r3, 86c6a <quorem+0xb2>
   86c46:	9c01      	ldr	r4, [sp, #4]
   86c48:	1f23      	subs	r3, r4, #4
   86c4a:	459a      	cmp	sl, r3
   86c4c:	d20c      	bcs.n	86c68 <quorem+0xb0>
   86c4e:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86c52:	b94b      	cbnz	r3, 86c68 <quorem+0xb0>
   86c54:	f1a4 0308 	sub.w	r3, r4, #8
   86c58:	e002      	b.n	86c60 <quorem+0xa8>
   86c5a:	681a      	ldr	r2, [r3, #0]
   86c5c:	3b04      	subs	r3, #4
   86c5e:	b91a      	cbnz	r2, 86c68 <quorem+0xb0>
   86c60:	459a      	cmp	sl, r3
   86c62:	f107 37ff 	add.w	r7, r7, #4294967295
   86c66:	d3f8      	bcc.n	86c5a <quorem+0xa2>
   86c68:	6107      	str	r7, [r0, #16]
   86c6a:	4604      	mov	r4, r0
   86c6c:	f001 fcee 	bl	8864c <__mcmp>
   86c70:	2800      	cmp	r0, #0
   86c72:	db2d      	blt.n	86cd0 <quorem+0x118>
   86c74:	4655      	mov	r5, sl
   86c76:	2300      	movs	r3, #0
   86c78:	f108 0801 	add.w	r8, r8, #1
   86c7c:	f856 1b04 	ldr.w	r1, [r6], #4
   86c80:	6828      	ldr	r0, [r5, #0]
   86c82:	b28a      	uxth	r2, r1
   86c84:	1a9a      	subs	r2, r3, r2
   86c86:	0c0b      	lsrs	r3, r1, #16
   86c88:	b281      	uxth	r1, r0
   86c8a:	440a      	add	r2, r1
   86c8c:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   86c90:	eb03 4322 	add.w	r3, r3, r2, asr #16
   86c94:	b292      	uxth	r2, r2
   86c96:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   86c9a:	45b1      	cmp	r9, r6
   86c9c:	f845 2b04 	str.w	r2, [r5], #4
   86ca0:	ea4f 4323 	mov.w	r3, r3, asr #16
   86ca4:	d2ea      	bcs.n	86c7c <quorem+0xc4>
   86ca6:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   86caa:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   86cae:	b97a      	cbnz	r2, 86cd0 <quorem+0x118>
   86cb0:	1f1a      	subs	r2, r3, #4
   86cb2:	4592      	cmp	sl, r2
   86cb4:	d20b      	bcs.n	86cce <quorem+0x116>
   86cb6:	f853 2c04 	ldr.w	r2, [r3, #-4]
   86cba:	b942      	cbnz	r2, 86cce <quorem+0x116>
   86cbc:	3b08      	subs	r3, #8
   86cbe:	e002      	b.n	86cc6 <quorem+0x10e>
   86cc0:	681a      	ldr	r2, [r3, #0]
   86cc2:	3b04      	subs	r3, #4
   86cc4:	b91a      	cbnz	r2, 86cce <quorem+0x116>
   86cc6:	459a      	cmp	sl, r3
   86cc8:	f107 37ff 	add.w	r7, r7, #4294967295
   86ccc:	d3f8      	bcc.n	86cc0 <quorem+0x108>
   86cce:	6127      	str	r7, [r4, #16]
   86cd0:	4640      	mov	r0, r8
   86cd2:	b003      	add	sp, #12
   86cd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86cd8:	2000      	movs	r0, #0
   86cda:	b003      	add	sp, #12
   86cdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00086ce0 <_dtoa_r>:
   86ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86ce4:	6c05      	ldr	r5, [r0, #64]	; 0x40
   86ce6:	b09b      	sub	sp, #108	; 0x6c
   86ce8:	4604      	mov	r4, r0
   86cea:	4692      	mov	sl, r2
   86cec:	469b      	mov	fp, r3
   86cee:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   86cf0:	b14d      	cbz	r5, 86d06 <_dtoa_r+0x26>
   86cf2:	2301      	movs	r3, #1
   86cf4:	6c42      	ldr	r2, [r0, #68]	; 0x44
   86cf6:	4629      	mov	r1, r5
   86cf8:	4093      	lsls	r3, r2
   86cfa:	60ab      	str	r3, [r5, #8]
   86cfc:	606a      	str	r2, [r5, #4]
   86cfe:	f001 facd 	bl	8829c <_Bfree>
   86d02:	2300      	movs	r3, #0
   86d04:	6423      	str	r3, [r4, #64]	; 0x40
   86d06:	f1bb 0f00 	cmp.w	fp, #0
   86d0a:	465d      	mov	r5, fp
   86d0c:	db35      	blt.n	86d7a <_dtoa_r+0x9a>
   86d0e:	2300      	movs	r3, #0
   86d10:	6033      	str	r3, [r6, #0]
   86d12:	4b9d      	ldr	r3, [pc, #628]	; (86f88 <_dtoa_r+0x2a8>)
   86d14:	43ab      	bics	r3, r5
   86d16:	d015      	beq.n	86d44 <_dtoa_r+0x64>
   86d18:	2200      	movs	r2, #0
   86d1a:	2300      	movs	r3, #0
   86d1c:	4650      	mov	r0, sl
   86d1e:	4659      	mov	r1, fp
   86d20:	f002 fa7c 	bl	8921c <__aeabi_dcmpeq>
   86d24:	4680      	mov	r8, r0
   86d26:	2800      	cmp	r0, #0
   86d28:	d02d      	beq.n	86d86 <_dtoa_r+0xa6>
   86d2a:	2301      	movs	r3, #1
   86d2c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86d2e:	6013      	str	r3, [r2, #0]
   86d30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   86d32:	2b00      	cmp	r3, #0
   86d34:	f000 80bd 	beq.w	86eb2 <_dtoa_r+0x1d2>
   86d38:	4894      	ldr	r0, [pc, #592]	; (86f8c <_dtoa_r+0x2ac>)
   86d3a:	6018      	str	r0, [r3, #0]
   86d3c:	3801      	subs	r0, #1
   86d3e:	b01b      	add	sp, #108	; 0x6c
   86d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86d44:	f242 730f 	movw	r3, #9999	; 0x270f
   86d48:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86d4a:	6013      	str	r3, [r2, #0]
   86d4c:	f1ba 0f00 	cmp.w	sl, #0
   86d50:	d10d      	bne.n	86d6e <_dtoa_r+0x8e>
   86d52:	f3c5 0513 	ubfx	r5, r5, #0, #20
   86d56:	b955      	cbnz	r5, 86d6e <_dtoa_r+0x8e>
   86d58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   86d5a:	488d      	ldr	r0, [pc, #564]	; (86f90 <_dtoa_r+0x2b0>)
   86d5c:	2b00      	cmp	r3, #0
   86d5e:	d0ee      	beq.n	86d3e <_dtoa_r+0x5e>
   86d60:	f100 0308 	add.w	r3, r0, #8
   86d64:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   86d66:	6013      	str	r3, [r2, #0]
   86d68:	b01b      	add	sp, #108	; 0x6c
   86d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86d6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   86d70:	4888      	ldr	r0, [pc, #544]	; (86f94 <_dtoa_r+0x2b4>)
   86d72:	2b00      	cmp	r3, #0
   86d74:	d0e3      	beq.n	86d3e <_dtoa_r+0x5e>
   86d76:	1cc3      	adds	r3, r0, #3
   86d78:	e7f4      	b.n	86d64 <_dtoa_r+0x84>
   86d7a:	2301      	movs	r3, #1
   86d7c:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   86d80:	6033      	str	r3, [r6, #0]
   86d82:	46ab      	mov	fp, r5
   86d84:	e7c5      	b.n	86d12 <_dtoa_r+0x32>
   86d86:	aa18      	add	r2, sp, #96	; 0x60
   86d88:	ab19      	add	r3, sp, #100	; 0x64
   86d8a:	9201      	str	r2, [sp, #4]
   86d8c:	9300      	str	r3, [sp, #0]
   86d8e:	4652      	mov	r2, sl
   86d90:	465b      	mov	r3, fp
   86d92:	4620      	mov	r0, r4
   86d94:	f001 fd04 	bl	887a0 <__d2b>
   86d98:	0d2b      	lsrs	r3, r5, #20
   86d9a:	4681      	mov	r9, r0
   86d9c:	d071      	beq.n	86e82 <_dtoa_r+0x1a2>
   86d9e:	4650      	mov	r0, sl
   86da0:	f3cb 0213 	ubfx	r2, fp, #0, #20
   86da4:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   86da8:	9f18      	ldr	r7, [sp, #96]	; 0x60
   86daa:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   86dae:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   86db2:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   86db6:	2200      	movs	r2, #0
   86db8:	4b77      	ldr	r3, [pc, #476]	; (86f98 <_dtoa_r+0x2b8>)
   86dba:	f7fd fce3 	bl	84784 <__aeabi_dsub>
   86dbe:	a36c      	add	r3, pc, #432	; (adr r3, 86f70 <_dtoa_r+0x290>)
   86dc0:	e9d3 2300 	ldrd	r2, r3, [r3]
   86dc4:	f7fd fe92 	bl	84aec <__aeabi_dmul>
   86dc8:	a36b      	add	r3, pc, #428	; (adr r3, 86f78 <_dtoa_r+0x298>)
   86dca:	e9d3 2300 	ldrd	r2, r3, [r3]
   86dce:	f7fd fcdb 	bl	84788 <__adddf3>
   86dd2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   86dd6:	4630      	mov	r0, r6
   86dd8:	f7fd fe22 	bl	84a20 <__aeabi_i2d>
   86ddc:	a368      	add	r3, pc, #416	; (adr r3, 86f80 <_dtoa_r+0x2a0>)
   86dde:	e9d3 2300 	ldrd	r2, r3, [r3]
   86de2:	f7fd fe83 	bl	84aec <__aeabi_dmul>
   86de6:	4602      	mov	r2, r0
   86de8:	460b      	mov	r3, r1
   86dea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   86dee:	f7fd fccb 	bl	84788 <__adddf3>
   86df2:	e9cd 0104 	strd	r0, r1, [sp, #16]
   86df6:	f002 fa59 	bl	892ac <__aeabi_d2iz>
   86dfa:	2200      	movs	r2, #0
   86dfc:	9002      	str	r0, [sp, #8]
   86dfe:	2300      	movs	r3, #0
   86e00:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   86e04:	f002 fa14 	bl	89230 <__aeabi_dcmplt>
   86e08:	2800      	cmp	r0, #0
   86e0a:	f040 816d 	bne.w	870e8 <_dtoa_r+0x408>
   86e0e:	9d02      	ldr	r5, [sp, #8]
   86e10:	2d16      	cmp	r5, #22
   86e12:	f200 8157 	bhi.w	870c4 <_dtoa_r+0x3e4>
   86e16:	4961      	ldr	r1, [pc, #388]	; (86f9c <_dtoa_r+0x2bc>)
   86e18:	4652      	mov	r2, sl
   86e1a:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   86e1e:	465b      	mov	r3, fp
   86e20:	e9d1 0100 	ldrd	r0, r1, [r1]
   86e24:	f002 fa22 	bl	8926c <__aeabi_dcmpgt>
   86e28:	2800      	cmp	r0, #0
   86e2a:	f000 81be 	beq.w	871aa <_dtoa_r+0x4ca>
   86e2e:	1e6b      	subs	r3, r5, #1
   86e30:	9302      	str	r3, [sp, #8]
   86e32:	2300      	movs	r3, #0
   86e34:	930e      	str	r3, [sp, #56]	; 0x38
   86e36:	1bbf      	subs	r7, r7, r6
   86e38:	1e7b      	subs	r3, r7, #1
   86e3a:	9308      	str	r3, [sp, #32]
   86e3c:	f100 814e 	bmi.w	870dc <_dtoa_r+0x3fc>
   86e40:	2300      	movs	r3, #0
   86e42:	930a      	str	r3, [sp, #40]	; 0x28
   86e44:	9b02      	ldr	r3, [sp, #8]
   86e46:	2b00      	cmp	r3, #0
   86e48:	f2c0 813f 	blt.w	870ca <_dtoa_r+0x3ea>
   86e4c:	9a08      	ldr	r2, [sp, #32]
   86e4e:	930d      	str	r3, [sp, #52]	; 0x34
   86e50:	4611      	mov	r1, r2
   86e52:	4419      	add	r1, r3
   86e54:	2300      	movs	r3, #0
   86e56:	9108      	str	r1, [sp, #32]
   86e58:	930c      	str	r3, [sp, #48]	; 0x30
   86e5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86e5c:	2b09      	cmp	r3, #9
   86e5e:	d82a      	bhi.n	86eb6 <_dtoa_r+0x1d6>
   86e60:	2b05      	cmp	r3, #5
   86e62:	f340 8658 	ble.w	87b16 <_dtoa_r+0xe36>
   86e66:	2500      	movs	r5, #0
   86e68:	3b04      	subs	r3, #4
   86e6a:	9324      	str	r3, [sp, #144]	; 0x90
   86e6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86e6e:	3b02      	subs	r3, #2
   86e70:	2b03      	cmp	r3, #3
   86e72:	f200 863f 	bhi.w	87af4 <_dtoa_r+0xe14>
   86e76:	e8df f013 	tbh	[pc, r3, lsl #1]
   86e7a:	03ce      	.short	0x03ce
   86e7c:	03d902c3 	.word	0x03d902c3
   86e80:	045b      	.short	0x045b
   86e82:	9f18      	ldr	r7, [sp, #96]	; 0x60
   86e84:	9e19      	ldr	r6, [sp, #100]	; 0x64
   86e86:	443e      	add	r6, r7
   86e88:	f206 4332 	addw	r3, r6, #1074	; 0x432
   86e8c:	2b20      	cmp	r3, #32
   86e8e:	f340 8187 	ble.w	871a0 <_dtoa_r+0x4c0>
   86e92:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   86e96:	f206 4012 	addw	r0, r6, #1042	; 0x412
   86e9a:	409d      	lsls	r5, r3
   86e9c:	fa2a f000 	lsr.w	r0, sl, r0
   86ea0:	4328      	orrs	r0, r5
   86ea2:	f7fd fdad 	bl	84a00 <__aeabi_ui2d>
   86ea6:	2301      	movs	r3, #1
   86ea8:	3e01      	subs	r6, #1
   86eaa:	9314      	str	r3, [sp, #80]	; 0x50
   86eac:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   86eb0:	e781      	b.n	86db6 <_dtoa_r+0xd6>
   86eb2:	483b      	ldr	r0, [pc, #236]	; (86fa0 <_dtoa_r+0x2c0>)
   86eb4:	e743      	b.n	86d3e <_dtoa_r+0x5e>
   86eb6:	2100      	movs	r1, #0
   86eb8:	4620      	mov	r0, r4
   86eba:	6461      	str	r1, [r4, #68]	; 0x44
   86ebc:	9125      	str	r1, [sp, #148]	; 0x94
   86ebe:	f001 f9c7 	bl	88250 <_Balloc>
   86ec2:	f04f 33ff 	mov.w	r3, #4294967295
   86ec6:	9307      	str	r3, [sp, #28]
   86ec8:	930f      	str	r3, [sp, #60]	; 0x3c
   86eca:	2301      	movs	r3, #1
   86ecc:	9a25      	ldr	r2, [sp, #148]	; 0x94
   86ece:	9004      	str	r0, [sp, #16]
   86ed0:	6420      	str	r0, [r4, #64]	; 0x40
   86ed2:	9224      	str	r2, [sp, #144]	; 0x90
   86ed4:	930b      	str	r3, [sp, #44]	; 0x2c
   86ed6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   86ed8:	2b00      	cmp	r3, #0
   86eda:	f2c0 80d3 	blt.w	87084 <_dtoa_r+0x3a4>
   86ede:	9a02      	ldr	r2, [sp, #8]
   86ee0:	2a0e      	cmp	r2, #14
   86ee2:	f300 80cf 	bgt.w	87084 <_dtoa_r+0x3a4>
   86ee6:	4b2d      	ldr	r3, [pc, #180]	; (86f9c <_dtoa_r+0x2bc>)
   86ee8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86eec:	e9d3 2300 	ldrd	r2, r3, [r3]
   86ef0:	e9cd 2308 	strd	r2, r3, [sp, #32]
   86ef4:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86ef6:	2b00      	cmp	r3, #0
   86ef8:	f2c0 83b4 	blt.w	87664 <_dtoa_r+0x984>
   86efc:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   86f00:	4650      	mov	r0, sl
   86f02:	462a      	mov	r2, r5
   86f04:	4633      	mov	r3, r6
   86f06:	4659      	mov	r1, fp
   86f08:	f7fd ff1a 	bl	84d40 <__aeabi_ddiv>
   86f0c:	f002 f9ce 	bl	892ac <__aeabi_d2iz>
   86f10:	4680      	mov	r8, r0
   86f12:	f7fd fd85 	bl	84a20 <__aeabi_i2d>
   86f16:	462a      	mov	r2, r5
   86f18:	4633      	mov	r3, r6
   86f1a:	f7fd fde7 	bl	84aec <__aeabi_dmul>
   86f1e:	4602      	mov	r2, r0
   86f20:	460b      	mov	r3, r1
   86f22:	4650      	mov	r0, sl
   86f24:	4659      	mov	r1, fp
   86f26:	f7fd fc2d 	bl	84784 <__aeabi_dsub>
   86f2a:	9e07      	ldr	r6, [sp, #28]
   86f2c:	9f04      	ldr	r7, [sp, #16]
   86f2e:	f108 0530 	add.w	r5, r8, #48	; 0x30
   86f32:	2e01      	cmp	r6, #1
   86f34:	703d      	strb	r5, [r7, #0]
   86f36:	4602      	mov	r2, r0
   86f38:	460b      	mov	r3, r1
   86f3a:	f107 0501 	add.w	r5, r7, #1
   86f3e:	d064      	beq.n	8700a <_dtoa_r+0x32a>
   86f40:	2200      	movs	r2, #0
   86f42:	4b18      	ldr	r3, [pc, #96]	; (86fa4 <_dtoa_r+0x2c4>)
   86f44:	f7fd fdd2 	bl	84aec <__aeabi_dmul>
   86f48:	2200      	movs	r2, #0
   86f4a:	2300      	movs	r3, #0
   86f4c:	4606      	mov	r6, r0
   86f4e:	460f      	mov	r7, r1
   86f50:	f002 f964 	bl	8921c <__aeabi_dcmpeq>
   86f54:	2800      	cmp	r0, #0
   86f56:	f040 8082 	bne.w	8705e <_dtoa_r+0x37e>
   86f5a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   86f5e:	f04f 0a00 	mov.w	sl, #0
   86f62:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   86f66:	f04f 0b00 	mov.w	fp, #0
   86f6a:	940b      	str	r4, [sp, #44]	; 0x2c
   86f6c:	e029      	b.n	86fc2 <_dtoa_r+0x2e2>
   86f6e:	bf00      	nop
   86f70:	636f4361 	.word	0x636f4361
   86f74:	3fd287a7 	.word	0x3fd287a7
   86f78:	8b60c8b3 	.word	0x8b60c8b3
   86f7c:	3fc68a28 	.word	0x3fc68a28
   86f80:	509f79fb 	.word	0x509f79fb
   86f84:	3fd34413 	.word	0x3fd34413
   86f88:	7ff00000 	.word	0x7ff00000
   86f8c:	000897a5 	.word	0x000897a5
   86f90:	000897c8 	.word	0x000897c8
   86f94:	000897d4 	.word	0x000897d4
   86f98:	3ff80000 	.word	0x3ff80000
   86f9c:	00089800 	.word	0x00089800
   86fa0:	000897a4 	.word	0x000897a4
   86fa4:	40240000 	.word	0x40240000
   86fa8:	2200      	movs	r2, #0
   86faa:	4b81      	ldr	r3, [pc, #516]	; (871b0 <_dtoa_r+0x4d0>)
   86fac:	f7fd fd9e 	bl	84aec <__aeabi_dmul>
   86fb0:	4652      	mov	r2, sl
   86fb2:	465b      	mov	r3, fp
   86fb4:	4606      	mov	r6, r0
   86fb6:	460f      	mov	r7, r1
   86fb8:	f002 f930 	bl	8921c <__aeabi_dcmpeq>
   86fbc:	2800      	cmp	r0, #0
   86fbe:	f040 83ba 	bne.w	87736 <_dtoa_r+0xa56>
   86fc2:	4642      	mov	r2, r8
   86fc4:	464b      	mov	r3, r9
   86fc6:	4630      	mov	r0, r6
   86fc8:	4639      	mov	r1, r7
   86fca:	f7fd feb9 	bl	84d40 <__aeabi_ddiv>
   86fce:	f002 f96d 	bl	892ac <__aeabi_d2iz>
   86fd2:	4604      	mov	r4, r0
   86fd4:	f7fd fd24 	bl	84a20 <__aeabi_i2d>
   86fd8:	4642      	mov	r2, r8
   86fda:	464b      	mov	r3, r9
   86fdc:	f7fd fd86 	bl	84aec <__aeabi_dmul>
   86fe0:	4602      	mov	r2, r0
   86fe2:	460b      	mov	r3, r1
   86fe4:	4630      	mov	r0, r6
   86fe6:	4639      	mov	r1, r7
   86fe8:	f7fd fbcc 	bl	84784 <__aeabi_dsub>
   86fec:	f104 0630 	add.w	r6, r4, #48	; 0x30
   86ff0:	f805 6b01 	strb.w	r6, [r5], #1
   86ff4:	9e04      	ldr	r6, [sp, #16]
   86ff6:	9f07      	ldr	r7, [sp, #28]
   86ff8:	1bae      	subs	r6, r5, r6
   86ffa:	42be      	cmp	r6, r7
   86ffc:	4602      	mov	r2, r0
   86ffe:	460b      	mov	r3, r1
   87000:	d1d2      	bne.n	86fa8 <_dtoa_r+0x2c8>
   87002:	46a0      	mov	r8, r4
   87004:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   87008:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8700a:	4610      	mov	r0, r2
   8700c:	4619      	mov	r1, r3
   8700e:	f7fd fbbb 	bl	84788 <__adddf3>
   87012:	4606      	mov	r6, r0
   87014:	460f      	mov	r7, r1
   87016:	4602      	mov	r2, r0
   87018:	460b      	mov	r3, r1
   8701a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   8701e:	f002 f907 	bl	89230 <__aeabi_dcmplt>
   87022:	b948      	cbnz	r0, 87038 <_dtoa_r+0x358>
   87024:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   87028:	4632      	mov	r2, r6
   8702a:	463b      	mov	r3, r7
   8702c:	f002 f8f6 	bl	8921c <__aeabi_dcmpeq>
   87030:	b1a8      	cbz	r0, 8705e <_dtoa_r+0x37e>
   87032:	f018 0f01 	tst.w	r8, #1
   87036:	d012      	beq.n	8705e <_dtoa_r+0x37e>
   87038:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   8703c:	1e6b      	subs	r3, r5, #1
   8703e:	9a04      	ldr	r2, [sp, #16]
   87040:	e004      	b.n	8704c <_dtoa_r+0x36c>
   87042:	429a      	cmp	r2, r3
   87044:	f000 8402 	beq.w	8784c <_dtoa_r+0xb6c>
   87048:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   8704c:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   87050:	f103 0501 	add.w	r5, r3, #1
   87054:	d0f5      	beq.n	87042 <_dtoa_r+0x362>
   87056:	f108 0801 	add.w	r8, r8, #1
   8705a:	f883 8000 	strb.w	r8, [r3]
   8705e:	4649      	mov	r1, r9
   87060:	4620      	mov	r0, r4
   87062:	f001 f91b 	bl	8829c <_Bfree>
   87066:	2200      	movs	r2, #0
   87068:	9b02      	ldr	r3, [sp, #8]
   8706a:	702a      	strb	r2, [r5, #0]
   8706c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8706e:	3301      	adds	r3, #1
   87070:	6013      	str	r3, [r2, #0]
   87072:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   87074:	2b00      	cmp	r3, #0
   87076:	f000 839f 	beq.w	877b8 <_dtoa_r+0xad8>
   8707a:	9804      	ldr	r0, [sp, #16]
   8707c:	601d      	str	r5, [r3, #0]
   8707e:	b01b      	add	sp, #108	; 0x6c
   87080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87084:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   87086:	2a00      	cmp	r2, #0
   87088:	d03e      	beq.n	87108 <_dtoa_r+0x428>
   8708a:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8708c:	2a01      	cmp	r2, #1
   8708e:	f340 8311 	ble.w	876b4 <_dtoa_r+0x9d4>
   87092:	9b07      	ldr	r3, [sp, #28]
   87094:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   87096:	1e5f      	subs	r7, r3, #1
   87098:	42ba      	cmp	r2, r7
   8709a:	f2c0 8390 	blt.w	877be <_dtoa_r+0xade>
   8709e:	1bd7      	subs	r7, r2, r7
   870a0:	9b07      	ldr	r3, [sp, #28]
   870a2:	2b00      	cmp	r3, #0
   870a4:	f2c0 848c 	blt.w	879c0 <_dtoa_r+0xce0>
   870a8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   870aa:	9b07      	ldr	r3, [sp, #28]
   870ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   870ae:	2101      	movs	r1, #1
   870b0:	441a      	add	r2, r3
   870b2:	920a      	str	r2, [sp, #40]	; 0x28
   870b4:	9a08      	ldr	r2, [sp, #32]
   870b6:	4620      	mov	r0, r4
   870b8:	441a      	add	r2, r3
   870ba:	9208      	str	r2, [sp, #32]
   870bc:	f001 f98a 	bl	883d4 <__i2b>
   870c0:	4606      	mov	r6, r0
   870c2:	e023      	b.n	8710c <_dtoa_r+0x42c>
   870c4:	2301      	movs	r3, #1
   870c6:	930e      	str	r3, [sp, #56]	; 0x38
   870c8:	e6b5      	b.n	86e36 <_dtoa_r+0x156>
   870ca:	2300      	movs	r3, #0
   870cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   870ce:	930d      	str	r3, [sp, #52]	; 0x34
   870d0:	9b02      	ldr	r3, [sp, #8]
   870d2:	1ad2      	subs	r2, r2, r3
   870d4:	425b      	negs	r3, r3
   870d6:	920a      	str	r2, [sp, #40]	; 0x28
   870d8:	930c      	str	r3, [sp, #48]	; 0x30
   870da:	e6be      	b.n	86e5a <_dtoa_r+0x17a>
   870dc:	f1c7 0301 	rsb	r3, r7, #1
   870e0:	930a      	str	r3, [sp, #40]	; 0x28
   870e2:	2300      	movs	r3, #0
   870e4:	9308      	str	r3, [sp, #32]
   870e6:	e6ad      	b.n	86e44 <_dtoa_r+0x164>
   870e8:	9d02      	ldr	r5, [sp, #8]
   870ea:	4628      	mov	r0, r5
   870ec:	f7fd fc98 	bl	84a20 <__aeabi_i2d>
   870f0:	4602      	mov	r2, r0
   870f2:	460b      	mov	r3, r1
   870f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   870f8:	f002 f890 	bl	8921c <__aeabi_dcmpeq>
   870fc:	2800      	cmp	r0, #0
   870fe:	f47f ae86 	bne.w	86e0e <_dtoa_r+0x12e>
   87102:	1e6b      	subs	r3, r5, #1
   87104:	9302      	str	r3, [sp, #8]
   87106:	e682      	b.n	86e0e <_dtoa_r+0x12e>
   87108:	ad0a      	add	r5, sp, #40	; 0x28
   8710a:	cde0      	ldmia	r5, {r5, r6, r7}
   8710c:	2d00      	cmp	r5, #0
   8710e:	dd0c      	ble.n	8712a <_dtoa_r+0x44a>
   87110:	9908      	ldr	r1, [sp, #32]
   87112:	2900      	cmp	r1, #0
   87114:	460b      	mov	r3, r1
   87116:	dd08      	ble.n	8712a <_dtoa_r+0x44a>
   87118:	42a9      	cmp	r1, r5
   8711a:	bfa8      	it	ge
   8711c:	462b      	movge	r3, r5
   8711e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   87120:	1aed      	subs	r5, r5, r3
   87122:	1ad2      	subs	r2, r2, r3
   87124:	1acb      	subs	r3, r1, r3
   87126:	920a      	str	r2, [sp, #40]	; 0x28
   87128:	9308      	str	r3, [sp, #32]
   8712a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8712c:	b1d3      	cbz	r3, 87164 <_dtoa_r+0x484>
   8712e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   87130:	2b00      	cmp	r3, #0
   87132:	f000 82b8 	beq.w	876a6 <_dtoa_r+0x9c6>
   87136:	2f00      	cmp	r7, #0
   87138:	dd10      	ble.n	8715c <_dtoa_r+0x47c>
   8713a:	4631      	mov	r1, r6
   8713c:	463a      	mov	r2, r7
   8713e:	4620      	mov	r0, r4
   87140:	f001 f9e4 	bl	8850c <__pow5mult>
   87144:	464a      	mov	r2, r9
   87146:	4601      	mov	r1, r0
   87148:	4606      	mov	r6, r0
   8714a:	4620      	mov	r0, r4
   8714c:	f001 f94c 	bl	883e8 <__multiply>
   87150:	4603      	mov	r3, r0
   87152:	4649      	mov	r1, r9
   87154:	4620      	mov	r0, r4
   87156:	4699      	mov	r9, r3
   87158:	f001 f8a0 	bl	8829c <_Bfree>
   8715c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8715e:	1bda      	subs	r2, r3, r7
   87160:	f040 82a2 	bne.w	876a8 <_dtoa_r+0x9c8>
   87164:	2101      	movs	r1, #1
   87166:	4620      	mov	r0, r4
   87168:	f001 f934 	bl	883d4 <__i2b>
   8716c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8716e:	4680      	mov	r8, r0
   87170:	2b00      	cmp	r3, #0
   87172:	dd1f      	ble.n	871b4 <_dtoa_r+0x4d4>
   87174:	4601      	mov	r1, r0
   87176:	461a      	mov	r2, r3
   87178:	4620      	mov	r0, r4
   8717a:	f001 f9c7 	bl	8850c <__pow5mult>
   8717e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   87180:	4680      	mov	r8, r0
   87182:	2b01      	cmp	r3, #1
   87184:	f340 8255 	ble.w	87632 <_dtoa_r+0x952>
   87188:	2300      	movs	r3, #0
   8718a:	930c      	str	r3, [sp, #48]	; 0x30
   8718c:	f8d8 3010 	ldr.w	r3, [r8, #16]
   87190:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   87194:	6918      	ldr	r0, [r3, #16]
   87196:	f001 f8cd 	bl	88334 <__hi0bits>
   8719a:	f1c0 0020 	rsb	r0, r0, #32
   8719e:	e013      	b.n	871c8 <_dtoa_r+0x4e8>
   871a0:	f1c3 0520 	rsb	r5, r3, #32
   871a4:	fa0a f005 	lsl.w	r0, sl, r5
   871a8:	e67b      	b.n	86ea2 <_dtoa_r+0x1c2>
   871aa:	900e      	str	r0, [sp, #56]	; 0x38
   871ac:	e643      	b.n	86e36 <_dtoa_r+0x156>
   871ae:	bf00      	nop
   871b0:	40240000 	.word	0x40240000
   871b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   871b6:	2b01      	cmp	r3, #1
   871b8:	f340 8285 	ble.w	876c6 <_dtoa_r+0x9e6>
   871bc:	2300      	movs	r3, #0
   871be:	930c      	str	r3, [sp, #48]	; 0x30
   871c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   871c2:	2001      	movs	r0, #1
   871c4:	2b00      	cmp	r3, #0
   871c6:	d1e1      	bne.n	8718c <_dtoa_r+0x4ac>
   871c8:	9a08      	ldr	r2, [sp, #32]
   871ca:	4410      	add	r0, r2
   871cc:	f010 001f 	ands.w	r0, r0, #31
   871d0:	f000 80a1 	beq.w	87316 <_dtoa_r+0x636>
   871d4:	f1c0 0320 	rsb	r3, r0, #32
   871d8:	2b04      	cmp	r3, #4
   871da:	f340 8486 	ble.w	87aea <_dtoa_r+0xe0a>
   871de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   871e0:	f1c0 001c 	rsb	r0, r0, #28
   871e4:	4403      	add	r3, r0
   871e6:	930a      	str	r3, [sp, #40]	; 0x28
   871e8:	4613      	mov	r3, r2
   871ea:	4403      	add	r3, r0
   871ec:	4405      	add	r5, r0
   871ee:	9308      	str	r3, [sp, #32]
   871f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   871f2:	2b00      	cmp	r3, #0
   871f4:	dd05      	ble.n	87202 <_dtoa_r+0x522>
   871f6:	4649      	mov	r1, r9
   871f8:	461a      	mov	r2, r3
   871fa:	4620      	mov	r0, r4
   871fc:	f001 f9d6 	bl	885ac <__lshift>
   87200:	4681      	mov	r9, r0
   87202:	9b08      	ldr	r3, [sp, #32]
   87204:	2b00      	cmp	r3, #0
   87206:	dd05      	ble.n	87214 <_dtoa_r+0x534>
   87208:	4641      	mov	r1, r8
   8720a:	461a      	mov	r2, r3
   8720c:	4620      	mov	r0, r4
   8720e:	f001 f9cd 	bl	885ac <__lshift>
   87212:	4680      	mov	r8, r0
   87214:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   87216:	2b00      	cmp	r3, #0
   87218:	f040 8086 	bne.w	87328 <_dtoa_r+0x648>
   8721c:	9b07      	ldr	r3, [sp, #28]
   8721e:	2b00      	cmp	r3, #0
   87220:	f340 8264 	ble.w	876ec <_dtoa_r+0xa0c>
   87224:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   87226:	2b00      	cmp	r3, #0
   87228:	f000 8098 	beq.w	8735c <_dtoa_r+0x67c>
   8722c:	2d00      	cmp	r5, #0
   8722e:	dd05      	ble.n	8723c <_dtoa_r+0x55c>
   87230:	4631      	mov	r1, r6
   87232:	462a      	mov	r2, r5
   87234:	4620      	mov	r0, r4
   87236:	f001 f9b9 	bl	885ac <__lshift>
   8723a:	4606      	mov	r6, r0
   8723c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8723e:	2b00      	cmp	r3, #0
   87240:	f040 8336 	bne.w	878b0 <_dtoa_r+0xbd0>
   87244:	9608      	str	r6, [sp, #32]
   87246:	9b07      	ldr	r3, [sp, #28]
   87248:	9a04      	ldr	r2, [sp, #16]
   8724a:	3b01      	subs	r3, #1
   8724c:	18d3      	adds	r3, r2, r3
   8724e:	930b      	str	r3, [sp, #44]	; 0x2c
   87250:	4617      	mov	r7, r2
   87252:	f00a 0301 	and.w	r3, sl, #1
   87256:	46c2      	mov	sl, r8
   87258:	f8dd b020 	ldr.w	fp, [sp, #32]
   8725c:	930c      	str	r3, [sp, #48]	; 0x30
   8725e:	4651      	mov	r1, sl
   87260:	4648      	mov	r0, r9
   87262:	f7ff fca9 	bl	86bb8 <quorem>
   87266:	4631      	mov	r1, r6
   87268:	4605      	mov	r5, r0
   8726a:	4648      	mov	r0, r9
   8726c:	f001 f9ee 	bl	8864c <__mcmp>
   87270:	465a      	mov	r2, fp
   87272:	9007      	str	r0, [sp, #28]
   87274:	4651      	mov	r1, sl
   87276:	4620      	mov	r0, r4
   87278:	f001 fa04 	bl	88684 <__mdiff>
   8727c:	68c2      	ldr	r2, [r0, #12]
   8727e:	4680      	mov	r8, r0
   87280:	f105 0330 	add.w	r3, r5, #48	; 0x30
   87284:	2a00      	cmp	r2, #0
   87286:	f040 8229 	bne.w	876dc <_dtoa_r+0x9fc>
   8728a:	4601      	mov	r1, r0
   8728c:	4648      	mov	r0, r9
   8728e:	930a      	str	r3, [sp, #40]	; 0x28
   87290:	f001 f9dc 	bl	8864c <__mcmp>
   87294:	4641      	mov	r1, r8
   87296:	9008      	str	r0, [sp, #32]
   87298:	4620      	mov	r0, r4
   8729a:	f000 ffff 	bl	8829c <_Bfree>
   8729e:	9a08      	ldr	r2, [sp, #32]
   872a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   872a2:	b932      	cbnz	r2, 872b2 <_dtoa_r+0x5d2>
   872a4:	9924      	ldr	r1, [sp, #144]	; 0x90
   872a6:	b921      	cbnz	r1, 872b2 <_dtoa_r+0x5d2>
   872a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   872aa:	2a00      	cmp	r2, #0
   872ac:	f000 83ee 	beq.w	87a8c <_dtoa_r+0xdac>
   872b0:	9a24      	ldr	r2, [sp, #144]	; 0x90
   872b2:	9907      	ldr	r1, [sp, #28]
   872b4:	2900      	cmp	r1, #0
   872b6:	f2c0 829f 	blt.w	877f8 <_dtoa_r+0xb18>
   872ba:	d105      	bne.n	872c8 <_dtoa_r+0x5e8>
   872bc:	9924      	ldr	r1, [sp, #144]	; 0x90
   872be:	b919      	cbnz	r1, 872c8 <_dtoa_r+0x5e8>
   872c0:	990c      	ldr	r1, [sp, #48]	; 0x30
   872c2:	2900      	cmp	r1, #0
   872c4:	f000 8298 	beq.w	877f8 <_dtoa_r+0xb18>
   872c8:	2a00      	cmp	r2, #0
   872ca:	f300 8305 	bgt.w	878d8 <_dtoa_r+0xbf8>
   872ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   872d0:	f107 0801 	add.w	r8, r7, #1
   872d4:	4297      	cmp	r7, r2
   872d6:	703b      	strb	r3, [r7, #0]
   872d8:	4645      	mov	r5, r8
   872da:	f000 830b 	beq.w	878f4 <_dtoa_r+0xc14>
   872de:	4649      	mov	r1, r9
   872e0:	2300      	movs	r3, #0
   872e2:	220a      	movs	r2, #10
   872e4:	4620      	mov	r0, r4
   872e6:	f000 ffe3 	bl	882b0 <__multadd>
   872ea:	455e      	cmp	r6, fp
   872ec:	4681      	mov	r9, r0
   872ee:	4631      	mov	r1, r6
   872f0:	f04f 0300 	mov.w	r3, #0
   872f4:	f04f 020a 	mov.w	r2, #10
   872f8:	4620      	mov	r0, r4
   872fa:	f000 81e9 	beq.w	876d0 <_dtoa_r+0x9f0>
   872fe:	f000 ffd7 	bl	882b0 <__multadd>
   87302:	4659      	mov	r1, fp
   87304:	4606      	mov	r6, r0
   87306:	2300      	movs	r3, #0
   87308:	220a      	movs	r2, #10
   8730a:	4620      	mov	r0, r4
   8730c:	f000 ffd0 	bl	882b0 <__multadd>
   87310:	4647      	mov	r7, r8
   87312:	4683      	mov	fp, r0
   87314:	e7a3      	b.n	8725e <_dtoa_r+0x57e>
   87316:	201c      	movs	r0, #28
   87318:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8731a:	4405      	add	r5, r0
   8731c:	4403      	add	r3, r0
   8731e:	930a      	str	r3, [sp, #40]	; 0x28
   87320:	9b08      	ldr	r3, [sp, #32]
   87322:	4403      	add	r3, r0
   87324:	9308      	str	r3, [sp, #32]
   87326:	e763      	b.n	871f0 <_dtoa_r+0x510>
   87328:	4641      	mov	r1, r8
   8732a:	4648      	mov	r0, r9
   8732c:	f001 f98e 	bl	8864c <__mcmp>
   87330:	2800      	cmp	r0, #0
   87332:	f6bf af73 	bge.w	8721c <_dtoa_r+0x53c>
   87336:	9f02      	ldr	r7, [sp, #8]
   87338:	4649      	mov	r1, r9
   8733a:	2300      	movs	r3, #0
   8733c:	220a      	movs	r2, #10
   8733e:	4620      	mov	r0, r4
   87340:	3f01      	subs	r7, #1
   87342:	9702      	str	r7, [sp, #8]
   87344:	f000 ffb4 	bl	882b0 <__multadd>
   87348:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8734a:	4681      	mov	r9, r0
   8734c:	2b00      	cmp	r3, #0
   8734e:	f040 83b5 	bne.w	87abc <_dtoa_r+0xddc>
   87352:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   87354:	2b00      	cmp	r3, #0
   87356:	f340 83be 	ble.w	87ad6 <_dtoa_r+0xdf6>
   8735a:	9307      	str	r3, [sp, #28]
   8735c:	f8dd a010 	ldr.w	sl, [sp, #16]
   87360:	9f07      	ldr	r7, [sp, #28]
   87362:	4655      	mov	r5, sl
   87364:	e006      	b.n	87374 <_dtoa_r+0x694>
   87366:	4649      	mov	r1, r9
   87368:	2300      	movs	r3, #0
   8736a:	220a      	movs	r2, #10
   8736c:	4620      	mov	r0, r4
   8736e:	f000 ff9f 	bl	882b0 <__multadd>
   87372:	4681      	mov	r9, r0
   87374:	4641      	mov	r1, r8
   87376:	4648      	mov	r0, r9
   87378:	f7ff fc1e 	bl	86bb8 <quorem>
   8737c:	3030      	adds	r0, #48	; 0x30
   8737e:	f805 0b01 	strb.w	r0, [r5], #1
   87382:	eba5 030a 	sub.w	r3, r5, sl
   87386:	42bb      	cmp	r3, r7
   87388:	dbed      	blt.n	87366 <_dtoa_r+0x686>
   8738a:	9b04      	ldr	r3, [sp, #16]
   8738c:	9a07      	ldr	r2, [sp, #28]
   8738e:	4682      	mov	sl, r0
   87390:	2a01      	cmp	r2, #1
   87392:	bfac      	ite	ge
   87394:	189b      	addge	r3, r3, r2
   87396:	3301      	addlt	r3, #1
   87398:	f04f 0b00 	mov.w	fp, #0
   8739c:	461d      	mov	r5, r3
   8739e:	4649      	mov	r1, r9
   873a0:	2201      	movs	r2, #1
   873a2:	4620      	mov	r0, r4
   873a4:	f001 f902 	bl	885ac <__lshift>
   873a8:	4641      	mov	r1, r8
   873aa:	4681      	mov	r9, r0
   873ac:	f001 f94e 	bl	8864c <__mcmp>
   873b0:	2800      	cmp	r0, #0
   873b2:	f340 823f 	ble.w	87834 <_dtoa_r+0xb54>
   873b6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   873ba:	1e6b      	subs	r3, r5, #1
   873bc:	9904      	ldr	r1, [sp, #16]
   873be:	e004      	b.n	873ca <_dtoa_r+0x6ea>
   873c0:	428b      	cmp	r3, r1
   873c2:	f000 81ae 	beq.w	87722 <_dtoa_r+0xa42>
   873c6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   873ca:	2a39      	cmp	r2, #57	; 0x39
   873cc:	f103 0501 	add.w	r5, r3, #1
   873d0:	d0f6      	beq.n	873c0 <_dtoa_r+0x6e0>
   873d2:	3201      	adds	r2, #1
   873d4:	701a      	strb	r2, [r3, #0]
   873d6:	4641      	mov	r1, r8
   873d8:	4620      	mov	r0, r4
   873da:	f000 ff5f 	bl	8829c <_Bfree>
   873de:	2e00      	cmp	r6, #0
   873e0:	f43f ae3d 	beq.w	8705e <_dtoa_r+0x37e>
   873e4:	f1bb 0f00 	cmp.w	fp, #0
   873e8:	d005      	beq.n	873f6 <_dtoa_r+0x716>
   873ea:	45b3      	cmp	fp, r6
   873ec:	d003      	beq.n	873f6 <_dtoa_r+0x716>
   873ee:	4659      	mov	r1, fp
   873f0:	4620      	mov	r0, r4
   873f2:	f000 ff53 	bl	8829c <_Bfree>
   873f6:	4631      	mov	r1, r6
   873f8:	4620      	mov	r0, r4
   873fa:	f000 ff4f 	bl	8829c <_Bfree>
   873fe:	e62e      	b.n	8705e <_dtoa_r+0x37e>
   87400:	2300      	movs	r3, #0
   87402:	930b      	str	r3, [sp, #44]	; 0x2c
   87404:	9b02      	ldr	r3, [sp, #8]
   87406:	9a25      	ldr	r2, [sp, #148]	; 0x94
   87408:	4413      	add	r3, r2
   8740a:	930f      	str	r3, [sp, #60]	; 0x3c
   8740c:	3301      	adds	r3, #1
   8740e:	2b01      	cmp	r3, #1
   87410:	461f      	mov	r7, r3
   87412:	461e      	mov	r6, r3
   87414:	bfb8      	it	lt
   87416:	2701      	movlt	r7, #1
   87418:	9307      	str	r3, [sp, #28]
   8741a:	2100      	movs	r1, #0
   8741c:	2f17      	cmp	r7, #23
   8741e:	6461      	str	r1, [r4, #68]	; 0x44
   87420:	d90a      	bls.n	87438 <_dtoa_r+0x758>
   87422:	2201      	movs	r2, #1
   87424:	2304      	movs	r3, #4
   87426:	005b      	lsls	r3, r3, #1
   87428:	f103 0014 	add.w	r0, r3, #20
   8742c:	4287      	cmp	r7, r0
   8742e:	4611      	mov	r1, r2
   87430:	f102 0201 	add.w	r2, r2, #1
   87434:	d2f7      	bcs.n	87426 <_dtoa_r+0x746>
   87436:	6461      	str	r1, [r4, #68]	; 0x44
   87438:	4620      	mov	r0, r4
   8743a:	f000 ff09 	bl	88250 <_Balloc>
   8743e:	2e0e      	cmp	r6, #14
   87440:	9004      	str	r0, [sp, #16]
   87442:	6420      	str	r0, [r4, #64]	; 0x40
   87444:	f63f ad47 	bhi.w	86ed6 <_dtoa_r+0x1f6>
   87448:	2d00      	cmp	r5, #0
   8744a:	f43f ad44 	beq.w	86ed6 <_dtoa_r+0x1f6>
   8744e:	9902      	ldr	r1, [sp, #8]
   87450:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   87454:	2900      	cmp	r1, #0
   87456:	f340 8203 	ble.w	87860 <_dtoa_r+0xb80>
   8745a:	4bb9      	ldr	r3, [pc, #740]	; (87740 <_dtoa_r+0xa60>)
   8745c:	f001 020f 	and.w	r2, r1, #15
   87460:	110d      	asrs	r5, r1, #4
   87462:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   87466:	06e9      	lsls	r1, r5, #27
   87468:	e9d3 6700 	ldrd	r6, r7, [r3]
   8746c:	f140 81af 	bpl.w	877ce <_dtoa_r+0xaee>
   87470:	4bb4      	ldr	r3, [pc, #720]	; (87744 <_dtoa_r+0xa64>)
   87472:	4650      	mov	r0, sl
   87474:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   87478:	4659      	mov	r1, fp
   8747a:	f7fd fc61 	bl	84d40 <__aeabi_ddiv>
   8747e:	f04f 0a03 	mov.w	sl, #3
   87482:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   87486:	f005 050f 	and.w	r5, r5, #15
   8748a:	b18d      	cbz	r5, 874b0 <_dtoa_r+0x7d0>
   8748c:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 87744 <_dtoa_r+0xa64>
   87490:	07ea      	lsls	r2, r5, #31
   87492:	d509      	bpl.n	874a8 <_dtoa_r+0x7c8>
   87494:	e9d8 2300 	ldrd	r2, r3, [r8]
   87498:	4630      	mov	r0, r6
   8749a:	4639      	mov	r1, r7
   8749c:	f7fd fb26 	bl	84aec <__aeabi_dmul>
   874a0:	4606      	mov	r6, r0
   874a2:	460f      	mov	r7, r1
   874a4:	f10a 0a01 	add.w	sl, sl, #1
   874a8:	106d      	asrs	r5, r5, #1
   874aa:	f108 0808 	add.w	r8, r8, #8
   874ae:	d1ef      	bne.n	87490 <_dtoa_r+0x7b0>
   874b0:	463b      	mov	r3, r7
   874b2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   874b6:	4632      	mov	r2, r6
   874b8:	f7fd fc42 	bl	84d40 <__aeabi_ddiv>
   874bc:	4607      	mov	r7, r0
   874be:	4688      	mov	r8, r1
   874c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   874c2:	b143      	cbz	r3, 874d6 <_dtoa_r+0x7f6>
   874c4:	2200      	movs	r2, #0
   874c6:	4ba0      	ldr	r3, [pc, #640]	; (87748 <_dtoa_r+0xa68>)
   874c8:	4638      	mov	r0, r7
   874ca:	4641      	mov	r1, r8
   874cc:	f001 feb0 	bl	89230 <__aeabi_dcmplt>
   874d0:	2800      	cmp	r0, #0
   874d2:	f040 8287 	bne.w	879e4 <_dtoa_r+0xd04>
   874d6:	4650      	mov	r0, sl
   874d8:	f7fd faa2 	bl	84a20 <__aeabi_i2d>
   874dc:	463a      	mov	r2, r7
   874de:	4643      	mov	r3, r8
   874e0:	f7fd fb04 	bl	84aec <__aeabi_dmul>
   874e4:	4b99      	ldr	r3, [pc, #612]	; (8774c <_dtoa_r+0xa6c>)
   874e6:	2200      	movs	r2, #0
   874e8:	f7fd f94e 	bl	84788 <__adddf3>
   874ec:	9b07      	ldr	r3, [sp, #28]
   874ee:	4605      	mov	r5, r0
   874f0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   874f4:	2b00      	cmp	r3, #0
   874f6:	f000 813f 	beq.w	87778 <_dtoa_r+0xa98>
   874fa:	9b02      	ldr	r3, [sp, #8]
   874fc:	9315      	str	r3, [sp, #84]	; 0x54
   874fe:	9b07      	ldr	r3, [sp, #28]
   87500:	9312      	str	r3, [sp, #72]	; 0x48
   87502:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   87504:	2b00      	cmp	r3, #0
   87506:	f000 81fb 	beq.w	87900 <_dtoa_r+0xc20>
   8750a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8750c:	4b8c      	ldr	r3, [pc, #560]	; (87740 <_dtoa_r+0xa60>)
   8750e:	2000      	movs	r0, #0
   87510:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   87514:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   87518:	498d      	ldr	r1, [pc, #564]	; (87750 <_dtoa_r+0xa70>)
   8751a:	f7fd fc11 	bl	84d40 <__aeabi_ddiv>
   8751e:	462a      	mov	r2, r5
   87520:	4633      	mov	r3, r6
   87522:	f7fd f92f 	bl	84784 <__aeabi_dsub>
   87526:	4682      	mov	sl, r0
   87528:	468b      	mov	fp, r1
   8752a:	4638      	mov	r0, r7
   8752c:	4641      	mov	r1, r8
   8752e:	f001 febd 	bl	892ac <__aeabi_d2iz>
   87532:	4605      	mov	r5, r0
   87534:	f7fd fa74 	bl	84a20 <__aeabi_i2d>
   87538:	4602      	mov	r2, r0
   8753a:	460b      	mov	r3, r1
   8753c:	4638      	mov	r0, r7
   8753e:	4641      	mov	r1, r8
   87540:	f7fd f920 	bl	84784 <__aeabi_dsub>
   87544:	3530      	adds	r5, #48	; 0x30
   87546:	fa5f f885 	uxtb.w	r8, r5
   8754a:	9d04      	ldr	r5, [sp, #16]
   8754c:	4606      	mov	r6, r0
   8754e:	460f      	mov	r7, r1
   87550:	f885 8000 	strb.w	r8, [r5]
   87554:	4602      	mov	r2, r0
   87556:	460b      	mov	r3, r1
   87558:	4650      	mov	r0, sl
   8755a:	4659      	mov	r1, fp
   8755c:	3501      	adds	r5, #1
   8755e:	f001 fe85 	bl	8926c <__aeabi_dcmpgt>
   87562:	2800      	cmp	r0, #0
   87564:	d154      	bne.n	87610 <_dtoa_r+0x930>
   87566:	4632      	mov	r2, r6
   87568:	463b      	mov	r3, r7
   8756a:	2000      	movs	r0, #0
   8756c:	4976      	ldr	r1, [pc, #472]	; (87748 <_dtoa_r+0xa68>)
   8756e:	f7fd f909 	bl	84784 <__aeabi_dsub>
   87572:	4602      	mov	r2, r0
   87574:	460b      	mov	r3, r1
   87576:	4650      	mov	r0, sl
   87578:	4659      	mov	r1, fp
   8757a:	f001 fe77 	bl	8926c <__aeabi_dcmpgt>
   8757e:	2800      	cmp	r0, #0
   87580:	f040 8270 	bne.w	87a64 <_dtoa_r+0xd84>
   87584:	9a12      	ldr	r2, [sp, #72]	; 0x48
   87586:	2a01      	cmp	r2, #1
   87588:	f000 8112 	beq.w	877b0 <_dtoa_r+0xad0>
   8758c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8758e:	9a04      	ldr	r2, [sp, #16]
   87590:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   87594:	4413      	add	r3, r2
   87596:	4699      	mov	r9, r3
   87598:	e00f      	b.n	875ba <_dtoa_r+0x8da>
   8759a:	4632      	mov	r2, r6
   8759c:	463b      	mov	r3, r7
   8759e:	2000      	movs	r0, #0
   875a0:	4969      	ldr	r1, [pc, #420]	; (87748 <_dtoa_r+0xa68>)
   875a2:	f7fd f8ef 	bl	84784 <__aeabi_dsub>
   875a6:	4652      	mov	r2, sl
   875a8:	465b      	mov	r3, fp
   875aa:	f001 fe41 	bl	89230 <__aeabi_dcmplt>
   875ae:	2800      	cmp	r0, #0
   875b0:	f040 8256 	bne.w	87a60 <_dtoa_r+0xd80>
   875b4:	454d      	cmp	r5, r9
   875b6:	f000 80f9 	beq.w	877ac <_dtoa_r+0xacc>
   875ba:	4650      	mov	r0, sl
   875bc:	4659      	mov	r1, fp
   875be:	2200      	movs	r2, #0
   875c0:	4b64      	ldr	r3, [pc, #400]	; (87754 <_dtoa_r+0xa74>)
   875c2:	f7fd fa93 	bl	84aec <__aeabi_dmul>
   875c6:	2200      	movs	r2, #0
   875c8:	4b62      	ldr	r3, [pc, #392]	; (87754 <_dtoa_r+0xa74>)
   875ca:	4682      	mov	sl, r0
   875cc:	468b      	mov	fp, r1
   875ce:	4630      	mov	r0, r6
   875d0:	4639      	mov	r1, r7
   875d2:	f7fd fa8b 	bl	84aec <__aeabi_dmul>
   875d6:	460f      	mov	r7, r1
   875d8:	4606      	mov	r6, r0
   875da:	f001 fe67 	bl	892ac <__aeabi_d2iz>
   875de:	4680      	mov	r8, r0
   875e0:	f7fd fa1e 	bl	84a20 <__aeabi_i2d>
   875e4:	4602      	mov	r2, r0
   875e6:	460b      	mov	r3, r1
   875e8:	4630      	mov	r0, r6
   875ea:	4639      	mov	r1, r7
   875ec:	f7fd f8ca 	bl	84784 <__aeabi_dsub>
   875f0:	f108 0830 	add.w	r8, r8, #48	; 0x30
   875f4:	fa5f f888 	uxtb.w	r8, r8
   875f8:	f805 8b01 	strb.w	r8, [r5], #1
   875fc:	4652      	mov	r2, sl
   875fe:	465b      	mov	r3, fp
   87600:	4606      	mov	r6, r0
   87602:	460f      	mov	r7, r1
   87604:	f001 fe14 	bl	89230 <__aeabi_dcmplt>
   87608:	2800      	cmp	r0, #0
   8760a:	d0c6      	beq.n	8759a <_dtoa_r+0x8ba>
   8760c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   87610:	9b15      	ldr	r3, [sp, #84]	; 0x54
   87612:	9302      	str	r3, [sp, #8]
   87614:	e523      	b.n	8705e <_dtoa_r+0x37e>
   87616:	2300      	movs	r3, #0
   87618:	930b      	str	r3, [sp, #44]	; 0x2c
   8761a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8761c:	2b00      	cmp	r3, #0
   8761e:	f340 80dd 	ble.w	877dc <_dtoa_r+0xafc>
   87622:	461f      	mov	r7, r3
   87624:	461e      	mov	r6, r3
   87626:	930f      	str	r3, [sp, #60]	; 0x3c
   87628:	9307      	str	r3, [sp, #28]
   8762a:	e6f6      	b.n	8741a <_dtoa_r+0x73a>
   8762c:	2301      	movs	r3, #1
   8762e:	930b      	str	r3, [sp, #44]	; 0x2c
   87630:	e7f3      	b.n	8761a <_dtoa_r+0x93a>
   87632:	f1ba 0f00 	cmp.w	sl, #0
   87636:	f47f ada7 	bne.w	87188 <_dtoa_r+0x4a8>
   8763a:	f3cb 0313 	ubfx	r3, fp, #0, #20
   8763e:	2b00      	cmp	r3, #0
   87640:	f47f adbc 	bne.w	871bc <_dtoa_r+0x4dc>
   87644:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   87648:	0d3f      	lsrs	r7, r7, #20
   8764a:	053f      	lsls	r7, r7, #20
   8764c:	2f00      	cmp	r7, #0
   8764e:	f000 820d 	beq.w	87a6c <_dtoa_r+0xd8c>
   87652:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   87654:	3301      	adds	r3, #1
   87656:	930a      	str	r3, [sp, #40]	; 0x28
   87658:	9b08      	ldr	r3, [sp, #32]
   8765a:	3301      	adds	r3, #1
   8765c:	9308      	str	r3, [sp, #32]
   8765e:	2301      	movs	r3, #1
   87660:	930c      	str	r3, [sp, #48]	; 0x30
   87662:	e5ad      	b.n	871c0 <_dtoa_r+0x4e0>
   87664:	9b07      	ldr	r3, [sp, #28]
   87666:	2b00      	cmp	r3, #0
   87668:	f73f ac48 	bgt.w	86efc <_dtoa_r+0x21c>
   8766c:	f040 8222 	bne.w	87ab4 <_dtoa_r+0xdd4>
   87670:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   87674:	2200      	movs	r2, #0
   87676:	4b38      	ldr	r3, [pc, #224]	; (87758 <_dtoa_r+0xa78>)
   87678:	f7fd fa38 	bl	84aec <__aeabi_dmul>
   8767c:	4652      	mov	r2, sl
   8767e:	465b      	mov	r3, fp
   87680:	f001 fdea 	bl	89258 <__aeabi_dcmpge>
   87684:	f8dd 801c 	ldr.w	r8, [sp, #28]
   87688:	4646      	mov	r6, r8
   8768a:	2800      	cmp	r0, #0
   8768c:	d041      	beq.n	87712 <_dtoa_r+0xa32>
   8768e:	9b25      	ldr	r3, [sp, #148]	; 0x94
   87690:	9d04      	ldr	r5, [sp, #16]
   87692:	43db      	mvns	r3, r3
   87694:	9302      	str	r3, [sp, #8]
   87696:	4641      	mov	r1, r8
   87698:	4620      	mov	r0, r4
   8769a:	f000 fdff 	bl	8829c <_Bfree>
   8769e:	2e00      	cmp	r6, #0
   876a0:	f43f acdd 	beq.w	8705e <_dtoa_r+0x37e>
   876a4:	e6a7      	b.n	873f6 <_dtoa_r+0x716>
   876a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   876a8:	4649      	mov	r1, r9
   876aa:	4620      	mov	r0, r4
   876ac:	f000 ff2e 	bl	8850c <__pow5mult>
   876b0:	4681      	mov	r9, r0
   876b2:	e557      	b.n	87164 <_dtoa_r+0x484>
   876b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
   876b6:	2a00      	cmp	r2, #0
   876b8:	f000 8188 	beq.w	879cc <_dtoa_r+0xcec>
   876bc:	f203 4333 	addw	r3, r3, #1075	; 0x433
   876c0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   876c2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   876c4:	e4f2      	b.n	870ac <_dtoa_r+0x3cc>
   876c6:	f1ba 0f00 	cmp.w	sl, #0
   876ca:	f47f ad77 	bne.w	871bc <_dtoa_r+0x4dc>
   876ce:	e7b4      	b.n	8763a <_dtoa_r+0x95a>
   876d0:	f000 fdee 	bl	882b0 <__multadd>
   876d4:	4647      	mov	r7, r8
   876d6:	4606      	mov	r6, r0
   876d8:	4683      	mov	fp, r0
   876da:	e5c0      	b.n	8725e <_dtoa_r+0x57e>
   876dc:	4601      	mov	r1, r0
   876de:	4620      	mov	r0, r4
   876e0:	9308      	str	r3, [sp, #32]
   876e2:	f000 fddb 	bl	8829c <_Bfree>
   876e6:	2201      	movs	r2, #1
   876e8:	9b08      	ldr	r3, [sp, #32]
   876ea:	e5e2      	b.n	872b2 <_dtoa_r+0x5d2>
   876ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
   876ee:	2b02      	cmp	r3, #2
   876f0:	f77f ad98 	ble.w	87224 <_dtoa_r+0x544>
   876f4:	9b07      	ldr	r3, [sp, #28]
   876f6:	2b00      	cmp	r3, #0
   876f8:	d1c9      	bne.n	8768e <_dtoa_r+0x9ae>
   876fa:	4641      	mov	r1, r8
   876fc:	2205      	movs	r2, #5
   876fe:	4620      	mov	r0, r4
   87700:	f000 fdd6 	bl	882b0 <__multadd>
   87704:	4601      	mov	r1, r0
   87706:	4680      	mov	r8, r0
   87708:	4648      	mov	r0, r9
   8770a:	f000 ff9f 	bl	8864c <__mcmp>
   8770e:	2800      	cmp	r0, #0
   87710:	ddbd      	ble.n	8768e <_dtoa_r+0x9ae>
   87712:	2331      	movs	r3, #49	; 0x31
   87714:	9a02      	ldr	r2, [sp, #8]
   87716:	9904      	ldr	r1, [sp, #16]
   87718:	3201      	adds	r2, #1
   8771a:	9202      	str	r2, [sp, #8]
   8771c:	700b      	strb	r3, [r1, #0]
   8771e:	1c4d      	adds	r5, r1, #1
   87720:	e7b9      	b.n	87696 <_dtoa_r+0x9b6>
   87722:	2331      	movs	r3, #49	; 0x31
   87724:	9a02      	ldr	r2, [sp, #8]
   87726:	3201      	adds	r2, #1
   87728:	9202      	str	r2, [sp, #8]
   8772a:	9a04      	ldr	r2, [sp, #16]
   8772c:	7013      	strb	r3, [r2, #0]
   8772e:	e652      	b.n	873d6 <_dtoa_r+0x6f6>
   87730:	2301      	movs	r3, #1
   87732:	930b      	str	r3, [sp, #44]	; 0x2c
   87734:	e666      	b.n	87404 <_dtoa_r+0x724>
   87736:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   8773a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8773c:	e48f      	b.n	8705e <_dtoa_r+0x37e>
   8773e:	bf00      	nop
   87740:	00089800 	.word	0x00089800
   87744:	000897d8 	.word	0x000897d8
   87748:	3ff00000 	.word	0x3ff00000
   8774c:	401c0000 	.word	0x401c0000
   87750:	3fe00000 	.word	0x3fe00000
   87754:	40240000 	.word	0x40240000
   87758:	40140000 	.word	0x40140000
   8775c:	4650      	mov	r0, sl
   8775e:	f7fd f95f 	bl	84a20 <__aeabi_i2d>
   87762:	463a      	mov	r2, r7
   87764:	4643      	mov	r3, r8
   87766:	f7fd f9c1 	bl	84aec <__aeabi_dmul>
   8776a:	2200      	movs	r2, #0
   8776c:	4bc1      	ldr	r3, [pc, #772]	; (87a74 <_dtoa_r+0xd94>)
   8776e:	f7fd f80b 	bl	84788 <__adddf3>
   87772:	4605      	mov	r5, r0
   87774:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   87778:	4641      	mov	r1, r8
   8777a:	2200      	movs	r2, #0
   8777c:	4bbe      	ldr	r3, [pc, #760]	; (87a78 <_dtoa_r+0xd98>)
   8777e:	4638      	mov	r0, r7
   87780:	f7fd f800 	bl	84784 <__aeabi_dsub>
   87784:	462a      	mov	r2, r5
   87786:	4633      	mov	r3, r6
   87788:	4682      	mov	sl, r0
   8778a:	468b      	mov	fp, r1
   8778c:	f001 fd6e 	bl	8926c <__aeabi_dcmpgt>
   87790:	4680      	mov	r8, r0
   87792:	2800      	cmp	r0, #0
   87794:	f040 8110 	bne.w	879b8 <_dtoa_r+0xcd8>
   87798:	462a      	mov	r2, r5
   8779a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   8779e:	4650      	mov	r0, sl
   877a0:	4659      	mov	r1, fp
   877a2:	f001 fd45 	bl	89230 <__aeabi_dcmplt>
   877a6:	b118      	cbz	r0, 877b0 <_dtoa_r+0xad0>
   877a8:	4646      	mov	r6, r8
   877aa:	e770      	b.n	8768e <_dtoa_r+0x9ae>
   877ac:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   877b0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   877b4:	f7ff bb8f 	b.w	86ed6 <_dtoa_r+0x1f6>
   877b8:	9804      	ldr	r0, [sp, #16]
   877ba:	f7ff bac0 	b.w	86d3e <_dtoa_r+0x5e>
   877be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   877c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   877c2:	1afb      	subs	r3, r7, r3
   877c4:	441a      	add	r2, r3
   877c6:	970c      	str	r7, [sp, #48]	; 0x30
   877c8:	920d      	str	r2, [sp, #52]	; 0x34
   877ca:	2700      	movs	r7, #0
   877cc:	e468      	b.n	870a0 <_dtoa_r+0x3c0>
   877ce:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   877d2:	f04f 0a02 	mov.w	sl, #2
   877d6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   877da:	e656      	b.n	8748a <_dtoa_r+0x7aa>
   877dc:	2100      	movs	r1, #0
   877de:	2301      	movs	r3, #1
   877e0:	4620      	mov	r0, r4
   877e2:	6461      	str	r1, [r4, #68]	; 0x44
   877e4:	9325      	str	r3, [sp, #148]	; 0x94
   877e6:	f000 fd33 	bl	88250 <_Balloc>
   877ea:	9b25      	ldr	r3, [sp, #148]	; 0x94
   877ec:	9004      	str	r0, [sp, #16]
   877ee:	9307      	str	r3, [sp, #28]
   877f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
   877f2:	6420      	str	r0, [r4, #64]	; 0x40
   877f4:	930f      	str	r3, [sp, #60]	; 0x3c
   877f6:	e627      	b.n	87448 <_dtoa_r+0x768>
   877f8:	2a00      	cmp	r2, #0
   877fa:	46d0      	mov	r8, sl
   877fc:	f8cd b020 	str.w	fp, [sp, #32]
   87800:	469a      	mov	sl, r3
   87802:	dd11      	ble.n	87828 <_dtoa_r+0xb48>
   87804:	4649      	mov	r1, r9
   87806:	2201      	movs	r2, #1
   87808:	4620      	mov	r0, r4
   8780a:	f000 fecf 	bl	885ac <__lshift>
   8780e:	4641      	mov	r1, r8
   87810:	4681      	mov	r9, r0
   87812:	f000 ff1b 	bl	8864c <__mcmp>
   87816:	2800      	cmp	r0, #0
   87818:	f340 8145 	ble.w	87aa6 <_dtoa_r+0xdc6>
   8781c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   87820:	f000 8105 	beq.w	87a2e <_dtoa_r+0xd4e>
   87824:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   87828:	46b3      	mov	fp, r6
   8782a:	f887 a000 	strb.w	sl, [r7]
   8782e:	1c7d      	adds	r5, r7, #1
   87830:	9e08      	ldr	r6, [sp, #32]
   87832:	e5d0      	b.n	873d6 <_dtoa_r+0x6f6>
   87834:	d104      	bne.n	87840 <_dtoa_r+0xb60>
   87836:	f01a 0f01 	tst.w	sl, #1
   8783a:	d001      	beq.n	87840 <_dtoa_r+0xb60>
   8783c:	e5bb      	b.n	873b6 <_dtoa_r+0x6d6>
   8783e:	4615      	mov	r5, r2
   87840:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   87844:	1e6a      	subs	r2, r5, #1
   87846:	2b30      	cmp	r3, #48	; 0x30
   87848:	d0f9      	beq.n	8783e <_dtoa_r+0xb5e>
   8784a:	e5c4      	b.n	873d6 <_dtoa_r+0x6f6>
   8784c:	2230      	movs	r2, #48	; 0x30
   8784e:	9904      	ldr	r1, [sp, #16]
   87850:	700a      	strb	r2, [r1, #0]
   87852:	9a02      	ldr	r2, [sp, #8]
   87854:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   87858:	3201      	adds	r2, #1
   8785a:	9202      	str	r2, [sp, #8]
   8785c:	f7ff bbfb 	b.w	87056 <_dtoa_r+0x376>
   87860:	f000 80bb 	beq.w	879da <_dtoa_r+0xcfa>
   87864:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   87868:	9b02      	ldr	r3, [sp, #8]
   8786a:	f04f 0a02 	mov.w	sl, #2
   8786e:	425d      	negs	r5, r3
   87870:	4b82      	ldr	r3, [pc, #520]	; (87a7c <_dtoa_r+0xd9c>)
   87872:	f005 020f 	and.w	r2, r5, #15
   87876:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8787a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8787e:	f7fd f935 	bl	84aec <__aeabi_dmul>
   87882:	112d      	asrs	r5, r5, #4
   87884:	4607      	mov	r7, r0
   87886:	4688      	mov	r8, r1
   87888:	f43f ae1a 	beq.w	874c0 <_dtoa_r+0x7e0>
   8788c:	4e7c      	ldr	r6, [pc, #496]	; (87a80 <_dtoa_r+0xda0>)
   8788e:	07eb      	lsls	r3, r5, #31
   87890:	d509      	bpl.n	878a6 <_dtoa_r+0xbc6>
   87892:	e9d6 2300 	ldrd	r2, r3, [r6]
   87896:	4638      	mov	r0, r7
   87898:	4641      	mov	r1, r8
   8789a:	f7fd f927 	bl	84aec <__aeabi_dmul>
   8789e:	4607      	mov	r7, r0
   878a0:	4688      	mov	r8, r1
   878a2:	f10a 0a01 	add.w	sl, sl, #1
   878a6:	106d      	asrs	r5, r5, #1
   878a8:	f106 0608 	add.w	r6, r6, #8
   878ac:	d1ef      	bne.n	8788e <_dtoa_r+0xbae>
   878ae:	e607      	b.n	874c0 <_dtoa_r+0x7e0>
   878b0:	6871      	ldr	r1, [r6, #4]
   878b2:	4620      	mov	r0, r4
   878b4:	f000 fccc 	bl	88250 <_Balloc>
   878b8:	4605      	mov	r5, r0
   878ba:	6933      	ldr	r3, [r6, #16]
   878bc:	f106 010c 	add.w	r1, r6, #12
   878c0:	3302      	adds	r3, #2
   878c2:	009a      	lsls	r2, r3, #2
   878c4:	300c      	adds	r0, #12
   878c6:	f000 fc41 	bl	8814c <memcpy>
   878ca:	4629      	mov	r1, r5
   878cc:	2201      	movs	r2, #1
   878ce:	4620      	mov	r0, r4
   878d0:	f000 fe6c 	bl	885ac <__lshift>
   878d4:	9008      	str	r0, [sp, #32]
   878d6:	e4b6      	b.n	87246 <_dtoa_r+0x566>
   878d8:	2b39      	cmp	r3, #57	; 0x39
   878da:	f8cd b020 	str.w	fp, [sp, #32]
   878de:	46d0      	mov	r8, sl
   878e0:	f000 80a5 	beq.w	87a2e <_dtoa_r+0xd4e>
   878e4:	f103 0a01 	add.w	sl, r3, #1
   878e8:	46b3      	mov	fp, r6
   878ea:	f887 a000 	strb.w	sl, [r7]
   878ee:	1c7d      	adds	r5, r7, #1
   878f0:	9e08      	ldr	r6, [sp, #32]
   878f2:	e570      	b.n	873d6 <_dtoa_r+0x6f6>
   878f4:	465a      	mov	r2, fp
   878f6:	46d0      	mov	r8, sl
   878f8:	46b3      	mov	fp, r6
   878fa:	469a      	mov	sl, r3
   878fc:	4616      	mov	r6, r2
   878fe:	e54e      	b.n	8739e <_dtoa_r+0x6be>
   87900:	9812      	ldr	r0, [sp, #72]	; 0x48
   87902:	495e      	ldr	r1, [pc, #376]	; (87a7c <_dtoa_r+0xd9c>)
   87904:	462a      	mov	r2, r5
   87906:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   8790a:	4633      	mov	r3, r6
   8790c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   87910:	f7fd f8ec 	bl	84aec <__aeabi_dmul>
   87914:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   87918:	4638      	mov	r0, r7
   8791a:	4641      	mov	r1, r8
   8791c:	f001 fcc6 	bl	892ac <__aeabi_d2iz>
   87920:	4605      	mov	r5, r0
   87922:	f7fd f87d 	bl	84a20 <__aeabi_i2d>
   87926:	4602      	mov	r2, r0
   87928:	460b      	mov	r3, r1
   8792a:	4638      	mov	r0, r7
   8792c:	4641      	mov	r1, r8
   8792e:	f7fc ff29 	bl	84784 <__aeabi_dsub>
   87932:	4606      	mov	r6, r0
   87934:	9812      	ldr	r0, [sp, #72]	; 0x48
   87936:	9a04      	ldr	r2, [sp, #16]
   87938:	3530      	adds	r5, #48	; 0x30
   8793a:	2801      	cmp	r0, #1
   8793c:	7015      	strb	r5, [r2, #0]
   8793e:	460f      	mov	r7, r1
   87940:	f102 0501 	add.w	r5, r2, #1
   87944:	d026      	beq.n	87994 <_dtoa_r+0xcb4>
   87946:	9b12      	ldr	r3, [sp, #72]	; 0x48
   87948:	9a04      	ldr	r2, [sp, #16]
   8794a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   8794e:	4413      	add	r3, r2
   87950:	f04f 0a00 	mov.w	sl, #0
   87954:	4699      	mov	r9, r3
   87956:	f8df b130 	ldr.w	fp, [pc, #304]	; 87a88 <_dtoa_r+0xda8>
   8795a:	4652      	mov	r2, sl
   8795c:	465b      	mov	r3, fp
   8795e:	4630      	mov	r0, r6
   87960:	4639      	mov	r1, r7
   87962:	f7fd f8c3 	bl	84aec <__aeabi_dmul>
   87966:	460f      	mov	r7, r1
   87968:	4606      	mov	r6, r0
   8796a:	f001 fc9f 	bl	892ac <__aeabi_d2iz>
   8796e:	4680      	mov	r8, r0
   87970:	f7fd f856 	bl	84a20 <__aeabi_i2d>
   87974:	4602      	mov	r2, r0
   87976:	460b      	mov	r3, r1
   87978:	4630      	mov	r0, r6
   8797a:	4639      	mov	r1, r7
   8797c:	f7fc ff02 	bl	84784 <__aeabi_dsub>
   87980:	f108 0830 	add.w	r8, r8, #48	; 0x30
   87984:	f805 8b01 	strb.w	r8, [r5], #1
   87988:	454d      	cmp	r5, r9
   8798a:	4606      	mov	r6, r0
   8798c:	460f      	mov	r7, r1
   8798e:	d1e4      	bne.n	8795a <_dtoa_r+0xc7a>
   87990:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   87994:	2200      	movs	r2, #0
   87996:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   8799a:	4b3a      	ldr	r3, [pc, #232]	; (87a84 <_dtoa_r+0xda4>)
   8799c:	f7fc fef4 	bl	84788 <__adddf3>
   879a0:	4632      	mov	r2, r6
   879a2:	463b      	mov	r3, r7
   879a4:	f001 fc44 	bl	89230 <__aeabi_dcmplt>
   879a8:	2800      	cmp	r0, #0
   879aa:	d046      	beq.n	87a3a <_dtoa_r+0xd5a>
   879ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
   879ae:	9302      	str	r3, [sp, #8]
   879b0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   879b4:	f7ff bb42 	b.w	8703c <_dtoa_r+0x35c>
   879b8:	f04f 0800 	mov.w	r8, #0
   879bc:	4646      	mov	r6, r8
   879be:	e6a8      	b.n	87712 <_dtoa_r+0xa32>
   879c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   879c2:	9a07      	ldr	r2, [sp, #28]
   879c4:	1a9d      	subs	r5, r3, r2
   879c6:	2300      	movs	r3, #0
   879c8:	f7ff bb70 	b.w	870ac <_dtoa_r+0x3cc>
   879cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
   879ce:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   879d0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   879d4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   879d6:	f7ff bb69 	b.w	870ac <_dtoa_r+0x3cc>
   879da:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   879de:	f04f 0a02 	mov.w	sl, #2
   879e2:	e56d      	b.n	874c0 <_dtoa_r+0x7e0>
   879e4:	9b07      	ldr	r3, [sp, #28]
   879e6:	2b00      	cmp	r3, #0
   879e8:	f43f aeb8 	beq.w	8775c <_dtoa_r+0xa7c>
   879ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   879ee:	2b00      	cmp	r3, #0
   879f0:	f77f aede 	ble.w	877b0 <_dtoa_r+0xad0>
   879f4:	2200      	movs	r2, #0
   879f6:	4b24      	ldr	r3, [pc, #144]	; (87a88 <_dtoa_r+0xda8>)
   879f8:	4638      	mov	r0, r7
   879fa:	4641      	mov	r1, r8
   879fc:	f7fd f876 	bl	84aec <__aeabi_dmul>
   87a00:	4607      	mov	r7, r0
   87a02:	4688      	mov	r8, r1
   87a04:	f10a 0001 	add.w	r0, sl, #1
   87a08:	f7fd f80a 	bl	84a20 <__aeabi_i2d>
   87a0c:	463a      	mov	r2, r7
   87a0e:	4643      	mov	r3, r8
   87a10:	f7fd f86c 	bl	84aec <__aeabi_dmul>
   87a14:	2200      	movs	r2, #0
   87a16:	4b17      	ldr	r3, [pc, #92]	; (87a74 <_dtoa_r+0xd94>)
   87a18:	f7fc feb6 	bl	84788 <__adddf3>
   87a1c:	9a02      	ldr	r2, [sp, #8]
   87a1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   87a20:	3a01      	subs	r2, #1
   87a22:	4605      	mov	r5, r0
   87a24:	9215      	str	r2, [sp, #84]	; 0x54
   87a26:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   87a2a:	9312      	str	r3, [sp, #72]	; 0x48
   87a2c:	e569      	b.n	87502 <_dtoa_r+0x822>
   87a2e:	2239      	movs	r2, #57	; 0x39
   87a30:	46b3      	mov	fp, r6
   87a32:	703a      	strb	r2, [r7, #0]
   87a34:	9e08      	ldr	r6, [sp, #32]
   87a36:	1c7d      	adds	r5, r7, #1
   87a38:	e4bf      	b.n	873ba <_dtoa_r+0x6da>
   87a3a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   87a3e:	2000      	movs	r0, #0
   87a40:	4910      	ldr	r1, [pc, #64]	; (87a84 <_dtoa_r+0xda4>)
   87a42:	f7fc fe9f 	bl	84784 <__aeabi_dsub>
   87a46:	4632      	mov	r2, r6
   87a48:	463b      	mov	r3, r7
   87a4a:	f001 fc0f 	bl	8926c <__aeabi_dcmpgt>
   87a4e:	b908      	cbnz	r0, 87a54 <_dtoa_r+0xd74>
   87a50:	e6ae      	b.n	877b0 <_dtoa_r+0xad0>
   87a52:	4615      	mov	r5, r2
   87a54:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   87a58:	1e6a      	subs	r2, r5, #1
   87a5a:	2b30      	cmp	r3, #48	; 0x30
   87a5c:	d0f9      	beq.n	87a52 <_dtoa_r+0xd72>
   87a5e:	e5d7      	b.n	87610 <_dtoa_r+0x930>
   87a60:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   87a64:	9b15      	ldr	r3, [sp, #84]	; 0x54
   87a66:	9302      	str	r3, [sp, #8]
   87a68:	f7ff bae8 	b.w	8703c <_dtoa_r+0x35c>
   87a6c:	970c      	str	r7, [sp, #48]	; 0x30
   87a6e:	f7ff bba7 	b.w	871c0 <_dtoa_r+0x4e0>
   87a72:	bf00      	nop
   87a74:	401c0000 	.word	0x401c0000
   87a78:	40140000 	.word	0x40140000
   87a7c:	00089800 	.word	0x00089800
   87a80:	000897d8 	.word	0x000897d8
   87a84:	3fe00000 	.word	0x3fe00000
   87a88:	40240000 	.word	0x40240000
   87a8c:	2b39      	cmp	r3, #57	; 0x39
   87a8e:	f8cd b020 	str.w	fp, [sp, #32]
   87a92:	46d0      	mov	r8, sl
   87a94:	f8dd b01c 	ldr.w	fp, [sp, #28]
   87a98:	469a      	mov	sl, r3
   87a9a:	d0c8      	beq.n	87a2e <_dtoa_r+0xd4e>
   87a9c:	f1bb 0f00 	cmp.w	fp, #0
   87aa0:	f73f aec0 	bgt.w	87824 <_dtoa_r+0xb44>
   87aa4:	e6c0      	b.n	87828 <_dtoa_r+0xb48>
   87aa6:	f47f aebf 	bne.w	87828 <_dtoa_r+0xb48>
   87aaa:	f01a 0f01 	tst.w	sl, #1
   87aae:	f43f aebb 	beq.w	87828 <_dtoa_r+0xb48>
   87ab2:	e6b3      	b.n	8781c <_dtoa_r+0xb3c>
   87ab4:	f04f 0800 	mov.w	r8, #0
   87ab8:	4646      	mov	r6, r8
   87aba:	e5e8      	b.n	8768e <_dtoa_r+0x9ae>
   87abc:	4631      	mov	r1, r6
   87abe:	2300      	movs	r3, #0
   87ac0:	220a      	movs	r2, #10
   87ac2:	4620      	mov	r0, r4
   87ac4:	f000 fbf4 	bl	882b0 <__multadd>
   87ac8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   87aca:	4606      	mov	r6, r0
   87acc:	2b00      	cmp	r3, #0
   87ace:	dd07      	ble.n	87ae0 <_dtoa_r+0xe00>
   87ad0:	9307      	str	r3, [sp, #28]
   87ad2:	f7ff bbab 	b.w	8722c <_dtoa_r+0x54c>
   87ad6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   87ad8:	2b02      	cmp	r3, #2
   87ada:	dc1f      	bgt.n	87b1c <_dtoa_r+0xe3c>
   87adc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   87ade:	e43c      	b.n	8735a <_dtoa_r+0x67a>
   87ae0:	9b24      	ldr	r3, [sp, #144]	; 0x90
   87ae2:	2b02      	cmp	r3, #2
   87ae4:	dc1a      	bgt.n	87b1c <_dtoa_r+0xe3c>
   87ae6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   87ae8:	e7f2      	b.n	87ad0 <_dtoa_r+0xdf0>
   87aea:	f43f ab81 	beq.w	871f0 <_dtoa_r+0x510>
   87aee:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   87af2:	e411      	b.n	87318 <_dtoa_r+0x638>
   87af4:	2500      	movs	r5, #0
   87af6:	4620      	mov	r0, r4
   87af8:	6465      	str	r5, [r4, #68]	; 0x44
   87afa:	4629      	mov	r1, r5
   87afc:	f000 fba8 	bl	88250 <_Balloc>
   87b00:	f04f 33ff 	mov.w	r3, #4294967295
   87b04:	9307      	str	r3, [sp, #28]
   87b06:	930f      	str	r3, [sp, #60]	; 0x3c
   87b08:	2301      	movs	r3, #1
   87b0a:	9004      	str	r0, [sp, #16]
   87b0c:	9525      	str	r5, [sp, #148]	; 0x94
   87b0e:	6420      	str	r0, [r4, #64]	; 0x40
   87b10:	930b      	str	r3, [sp, #44]	; 0x2c
   87b12:	f7ff b9e0 	b.w	86ed6 <_dtoa_r+0x1f6>
   87b16:	2501      	movs	r5, #1
   87b18:	f7ff b9a8 	b.w	86e6c <_dtoa_r+0x18c>
   87b1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   87b1e:	9307      	str	r3, [sp, #28]
   87b20:	e5e8      	b.n	876f4 <_dtoa_r+0xa14>
   87b22:	bf00      	nop

00087b24 <__libc_fini_array>:
   87b24:	b538      	push	{r3, r4, r5, lr}
   87b26:	4c0a      	ldr	r4, [pc, #40]	; (87b50 <__libc_fini_array+0x2c>)
   87b28:	4d0a      	ldr	r5, [pc, #40]	; (87b54 <__libc_fini_array+0x30>)
   87b2a:	1b64      	subs	r4, r4, r5
   87b2c:	10a4      	asrs	r4, r4, #2
   87b2e:	d00a      	beq.n	87b46 <__libc_fini_array+0x22>
   87b30:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   87b34:	3b01      	subs	r3, #1
   87b36:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   87b3a:	3c01      	subs	r4, #1
   87b3c:	f855 3904 	ldr.w	r3, [r5], #-4
   87b40:	4798      	blx	r3
   87b42:	2c00      	cmp	r4, #0
   87b44:	d1f9      	bne.n	87b3a <__libc_fini_array+0x16>
   87b46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   87b4a:	f001 bf57 	b.w	899fc <_fini>
   87b4e:	bf00      	nop
   87b50:	00089a0c 	.word	0x00089a0c
   87b54:	00089a08 	.word	0x00089a08

00087b58 <_localeconv_r>:
   87b58:	4a04      	ldr	r2, [pc, #16]	; (87b6c <_localeconv_r+0x14>)
   87b5a:	4b05      	ldr	r3, [pc, #20]	; (87b70 <_localeconv_r+0x18>)
   87b5c:	6812      	ldr	r2, [r2, #0]
   87b5e:	6b50      	ldr	r0, [r2, #52]	; 0x34
   87b60:	2800      	cmp	r0, #0
   87b62:	bf08      	it	eq
   87b64:	4618      	moveq	r0, r3
   87b66:	30f0      	adds	r0, #240	; 0xf0
   87b68:	4770      	bx	lr
   87b6a:	bf00      	nop
   87b6c:	200701a4 	.word	0x200701a4
   87b70:	200709e4 	.word	0x200709e4

00087b74 <__retarget_lock_acquire_recursive>:
   87b74:	4770      	bx	lr
   87b76:	bf00      	nop

00087b78 <__retarget_lock_release_recursive>:
   87b78:	4770      	bx	lr
   87b7a:	bf00      	nop

00087b7c <_malloc_r>:
   87b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87b80:	f101 060b 	add.w	r6, r1, #11
   87b84:	2e16      	cmp	r6, #22
   87b86:	b083      	sub	sp, #12
   87b88:	4605      	mov	r5, r0
   87b8a:	f240 809e 	bls.w	87cca <_malloc_r+0x14e>
   87b8e:	f036 0607 	bics.w	r6, r6, #7
   87b92:	f100 80bd 	bmi.w	87d10 <_malloc_r+0x194>
   87b96:	42b1      	cmp	r1, r6
   87b98:	f200 80ba 	bhi.w	87d10 <_malloc_r+0x194>
   87b9c:	f000 fb4c 	bl	88238 <__malloc_lock>
   87ba0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   87ba4:	f0c0 8285 	bcc.w	880b2 <_malloc_r+0x536>
   87ba8:	0a73      	lsrs	r3, r6, #9
   87baa:	f000 80b8 	beq.w	87d1e <_malloc_r+0x1a2>
   87bae:	2b04      	cmp	r3, #4
   87bb0:	f200 816c 	bhi.w	87e8c <_malloc_r+0x310>
   87bb4:	09b3      	lsrs	r3, r6, #6
   87bb6:	f103 0039 	add.w	r0, r3, #57	; 0x39
   87bba:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   87bbe:	00c1      	lsls	r1, r0, #3
   87bc0:	4fb8      	ldr	r7, [pc, #736]	; (87ea4 <_malloc_r+0x328>)
   87bc2:	4439      	add	r1, r7
   87bc4:	684c      	ldr	r4, [r1, #4]
   87bc6:	3908      	subs	r1, #8
   87bc8:	42a1      	cmp	r1, r4
   87bca:	d106      	bne.n	87bda <_malloc_r+0x5e>
   87bcc:	e00c      	b.n	87be8 <_malloc_r+0x6c>
   87bce:	2a00      	cmp	r2, #0
   87bd0:	f280 80ab 	bge.w	87d2a <_malloc_r+0x1ae>
   87bd4:	68e4      	ldr	r4, [r4, #12]
   87bd6:	42a1      	cmp	r1, r4
   87bd8:	d006      	beq.n	87be8 <_malloc_r+0x6c>
   87bda:	6863      	ldr	r3, [r4, #4]
   87bdc:	f023 0303 	bic.w	r3, r3, #3
   87be0:	1b9a      	subs	r2, r3, r6
   87be2:	2a0f      	cmp	r2, #15
   87be4:	ddf3      	ble.n	87bce <_malloc_r+0x52>
   87be6:	4670      	mov	r0, lr
   87be8:	693c      	ldr	r4, [r7, #16]
   87bea:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 87eb8 <_malloc_r+0x33c>
   87bee:	4574      	cmp	r4, lr
   87bf0:	f000 819e 	beq.w	87f30 <_malloc_r+0x3b4>
   87bf4:	6863      	ldr	r3, [r4, #4]
   87bf6:	f023 0303 	bic.w	r3, r3, #3
   87bfa:	1b9a      	subs	r2, r3, r6
   87bfc:	2a0f      	cmp	r2, #15
   87bfe:	f300 8183 	bgt.w	87f08 <_malloc_r+0x38c>
   87c02:	2a00      	cmp	r2, #0
   87c04:	f8c7 e014 	str.w	lr, [r7, #20]
   87c08:	f8c7 e010 	str.w	lr, [r7, #16]
   87c0c:	f280 8091 	bge.w	87d32 <_malloc_r+0x1b6>
   87c10:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   87c14:	f080 8154 	bcs.w	87ec0 <_malloc_r+0x344>
   87c18:	2201      	movs	r2, #1
   87c1a:	08db      	lsrs	r3, r3, #3
   87c1c:	6879      	ldr	r1, [r7, #4]
   87c1e:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   87c22:	4413      	add	r3, r2
   87c24:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   87c28:	fa02 f20c 	lsl.w	r2, r2, ip
   87c2c:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   87c30:	430a      	orrs	r2, r1
   87c32:	f1ac 0108 	sub.w	r1, ip, #8
   87c36:	60e1      	str	r1, [r4, #12]
   87c38:	f8c4 8008 	str.w	r8, [r4, #8]
   87c3c:	607a      	str	r2, [r7, #4]
   87c3e:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   87c42:	f8c8 400c 	str.w	r4, [r8, #12]
   87c46:	2401      	movs	r4, #1
   87c48:	1083      	asrs	r3, r0, #2
   87c4a:	409c      	lsls	r4, r3
   87c4c:	4294      	cmp	r4, r2
   87c4e:	d87d      	bhi.n	87d4c <_malloc_r+0x1d0>
   87c50:	4214      	tst	r4, r2
   87c52:	d106      	bne.n	87c62 <_malloc_r+0xe6>
   87c54:	f020 0003 	bic.w	r0, r0, #3
   87c58:	0064      	lsls	r4, r4, #1
   87c5a:	4214      	tst	r4, r2
   87c5c:	f100 0004 	add.w	r0, r0, #4
   87c60:	d0fa      	beq.n	87c58 <_malloc_r+0xdc>
   87c62:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   87c66:	46cc      	mov	ip, r9
   87c68:	4680      	mov	r8, r0
   87c6a:	f8dc 300c 	ldr.w	r3, [ip, #12]
   87c6e:	459c      	cmp	ip, r3
   87c70:	d107      	bne.n	87c82 <_malloc_r+0x106>
   87c72:	e15f      	b.n	87f34 <_malloc_r+0x3b8>
   87c74:	2a00      	cmp	r2, #0
   87c76:	f280 816d 	bge.w	87f54 <_malloc_r+0x3d8>
   87c7a:	68db      	ldr	r3, [r3, #12]
   87c7c:	459c      	cmp	ip, r3
   87c7e:	f000 8159 	beq.w	87f34 <_malloc_r+0x3b8>
   87c82:	6859      	ldr	r1, [r3, #4]
   87c84:	f021 0103 	bic.w	r1, r1, #3
   87c88:	1b8a      	subs	r2, r1, r6
   87c8a:	2a0f      	cmp	r2, #15
   87c8c:	ddf2      	ble.n	87c74 <_malloc_r+0xf8>
   87c8e:	68dc      	ldr	r4, [r3, #12]
   87c90:	f8d3 c008 	ldr.w	ip, [r3, #8]
   87c94:	f046 0801 	orr.w	r8, r6, #1
   87c98:	4628      	mov	r0, r5
   87c9a:	441e      	add	r6, r3
   87c9c:	f042 0501 	orr.w	r5, r2, #1
   87ca0:	f8c3 8004 	str.w	r8, [r3, #4]
   87ca4:	f8cc 400c 	str.w	r4, [ip, #12]
   87ca8:	f8c4 c008 	str.w	ip, [r4, #8]
   87cac:	617e      	str	r6, [r7, #20]
   87cae:	613e      	str	r6, [r7, #16]
   87cb0:	f8c6 e00c 	str.w	lr, [r6, #12]
   87cb4:	f8c6 e008 	str.w	lr, [r6, #8]
   87cb8:	6075      	str	r5, [r6, #4]
   87cba:	505a      	str	r2, [r3, r1]
   87cbc:	9300      	str	r3, [sp, #0]
   87cbe:	f000 fac1 	bl	88244 <__malloc_unlock>
   87cc2:	9b00      	ldr	r3, [sp, #0]
   87cc4:	f103 0408 	add.w	r4, r3, #8
   87cc8:	e01e      	b.n	87d08 <_malloc_r+0x18c>
   87cca:	2910      	cmp	r1, #16
   87ccc:	d820      	bhi.n	87d10 <_malloc_r+0x194>
   87cce:	f000 fab3 	bl	88238 <__malloc_lock>
   87cd2:	2610      	movs	r6, #16
   87cd4:	2318      	movs	r3, #24
   87cd6:	2002      	movs	r0, #2
   87cd8:	4f72      	ldr	r7, [pc, #456]	; (87ea4 <_malloc_r+0x328>)
   87cda:	443b      	add	r3, r7
   87cdc:	685c      	ldr	r4, [r3, #4]
   87cde:	f1a3 0208 	sub.w	r2, r3, #8
   87ce2:	4294      	cmp	r4, r2
   87ce4:	f000 812f 	beq.w	87f46 <_malloc_r+0x3ca>
   87ce8:	6863      	ldr	r3, [r4, #4]
   87cea:	68e1      	ldr	r1, [r4, #12]
   87cec:	f023 0303 	bic.w	r3, r3, #3
   87cf0:	4423      	add	r3, r4
   87cf2:	685a      	ldr	r2, [r3, #4]
   87cf4:	68a6      	ldr	r6, [r4, #8]
   87cf6:	f042 0201 	orr.w	r2, r2, #1
   87cfa:	60f1      	str	r1, [r6, #12]
   87cfc:	4628      	mov	r0, r5
   87cfe:	608e      	str	r6, [r1, #8]
   87d00:	605a      	str	r2, [r3, #4]
   87d02:	f000 fa9f 	bl	88244 <__malloc_unlock>
   87d06:	3408      	adds	r4, #8
   87d08:	4620      	mov	r0, r4
   87d0a:	b003      	add	sp, #12
   87d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87d10:	2400      	movs	r4, #0
   87d12:	230c      	movs	r3, #12
   87d14:	4620      	mov	r0, r4
   87d16:	602b      	str	r3, [r5, #0]
   87d18:	b003      	add	sp, #12
   87d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87d1e:	2040      	movs	r0, #64	; 0x40
   87d20:	f44f 7100 	mov.w	r1, #512	; 0x200
   87d24:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   87d28:	e74a      	b.n	87bc0 <_malloc_r+0x44>
   87d2a:	4423      	add	r3, r4
   87d2c:	685a      	ldr	r2, [r3, #4]
   87d2e:	68e1      	ldr	r1, [r4, #12]
   87d30:	e7e0      	b.n	87cf4 <_malloc_r+0x178>
   87d32:	4423      	add	r3, r4
   87d34:	685a      	ldr	r2, [r3, #4]
   87d36:	4628      	mov	r0, r5
   87d38:	f042 0201 	orr.w	r2, r2, #1
   87d3c:	605a      	str	r2, [r3, #4]
   87d3e:	3408      	adds	r4, #8
   87d40:	f000 fa80 	bl	88244 <__malloc_unlock>
   87d44:	4620      	mov	r0, r4
   87d46:	b003      	add	sp, #12
   87d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87d4c:	68bc      	ldr	r4, [r7, #8]
   87d4e:	6863      	ldr	r3, [r4, #4]
   87d50:	f023 0803 	bic.w	r8, r3, #3
   87d54:	45b0      	cmp	r8, r6
   87d56:	d304      	bcc.n	87d62 <_malloc_r+0x1e6>
   87d58:	eba8 0306 	sub.w	r3, r8, r6
   87d5c:	2b0f      	cmp	r3, #15
   87d5e:	f300 8085 	bgt.w	87e6c <_malloc_r+0x2f0>
   87d62:	f8df 9158 	ldr.w	r9, [pc, #344]	; 87ebc <_malloc_r+0x340>
   87d66:	4b50      	ldr	r3, [pc, #320]	; (87ea8 <_malloc_r+0x32c>)
   87d68:	f8d9 2000 	ldr.w	r2, [r9]
   87d6c:	681b      	ldr	r3, [r3, #0]
   87d6e:	3201      	adds	r2, #1
   87d70:	4433      	add	r3, r6
   87d72:	eb04 0a08 	add.w	sl, r4, r8
   87d76:	f000 8154 	beq.w	88022 <_malloc_r+0x4a6>
   87d7a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   87d7e:	330f      	adds	r3, #15
   87d80:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   87d84:	f02b 0b0f 	bic.w	fp, fp, #15
   87d88:	4659      	mov	r1, fp
   87d8a:	4628      	mov	r0, r5
   87d8c:	f000 fd5c 	bl	88848 <_sbrk_r>
   87d90:	1c41      	adds	r1, r0, #1
   87d92:	4602      	mov	r2, r0
   87d94:	f000 80fb 	beq.w	87f8e <_malloc_r+0x412>
   87d98:	4582      	cmp	sl, r0
   87d9a:	f200 80f6 	bhi.w	87f8a <_malloc_r+0x40e>
   87d9e:	4b43      	ldr	r3, [pc, #268]	; (87eac <_malloc_r+0x330>)
   87da0:	6819      	ldr	r1, [r3, #0]
   87da2:	4459      	add	r1, fp
   87da4:	6019      	str	r1, [r3, #0]
   87da6:	f000 814c 	beq.w	88042 <_malloc_r+0x4c6>
   87daa:	f8d9 0000 	ldr.w	r0, [r9]
   87dae:	3001      	adds	r0, #1
   87db0:	bf1b      	ittet	ne
   87db2:	eba2 0a0a 	subne.w	sl, r2, sl
   87db6:	4451      	addne	r1, sl
   87db8:	f8c9 2000 	streq.w	r2, [r9]
   87dbc:	6019      	strne	r1, [r3, #0]
   87dbe:	f012 0107 	ands.w	r1, r2, #7
   87dc2:	f000 8114 	beq.w	87fee <_malloc_r+0x472>
   87dc6:	f1c1 0008 	rsb	r0, r1, #8
   87dca:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   87dce:	4402      	add	r2, r0
   87dd0:	3108      	adds	r1, #8
   87dd2:	eb02 090b 	add.w	r9, r2, fp
   87dd6:	f3c9 090b 	ubfx	r9, r9, #0, #12
   87dda:	eba1 0909 	sub.w	r9, r1, r9
   87dde:	4649      	mov	r1, r9
   87de0:	4628      	mov	r0, r5
   87de2:	9301      	str	r3, [sp, #4]
   87de4:	9200      	str	r2, [sp, #0]
   87de6:	f000 fd2f 	bl	88848 <_sbrk_r>
   87dea:	1c43      	adds	r3, r0, #1
   87dec:	e89d 000c 	ldmia.w	sp, {r2, r3}
   87df0:	f000 8142 	beq.w	88078 <_malloc_r+0x4fc>
   87df4:	1a80      	subs	r0, r0, r2
   87df6:	4448      	add	r0, r9
   87df8:	f040 0001 	orr.w	r0, r0, #1
   87dfc:	6819      	ldr	r1, [r3, #0]
   87dfe:	42bc      	cmp	r4, r7
   87e00:	4449      	add	r1, r9
   87e02:	60ba      	str	r2, [r7, #8]
   87e04:	6019      	str	r1, [r3, #0]
   87e06:	6050      	str	r0, [r2, #4]
   87e08:	d017      	beq.n	87e3a <_malloc_r+0x2be>
   87e0a:	f1b8 0f0f 	cmp.w	r8, #15
   87e0e:	f240 80fa 	bls.w	88006 <_malloc_r+0x48a>
   87e12:	f04f 0c05 	mov.w	ip, #5
   87e16:	6862      	ldr	r2, [r4, #4]
   87e18:	f1a8 000c 	sub.w	r0, r8, #12
   87e1c:	f020 0007 	bic.w	r0, r0, #7
   87e20:	f002 0201 	and.w	r2, r2, #1
   87e24:	eb04 0e00 	add.w	lr, r4, r0
   87e28:	4302      	orrs	r2, r0
   87e2a:	280f      	cmp	r0, #15
   87e2c:	6062      	str	r2, [r4, #4]
   87e2e:	f8ce c004 	str.w	ip, [lr, #4]
   87e32:	f8ce c008 	str.w	ip, [lr, #8]
   87e36:	f200 8116 	bhi.w	88066 <_malloc_r+0x4ea>
   87e3a:	4b1d      	ldr	r3, [pc, #116]	; (87eb0 <_malloc_r+0x334>)
   87e3c:	68bc      	ldr	r4, [r7, #8]
   87e3e:	681a      	ldr	r2, [r3, #0]
   87e40:	4291      	cmp	r1, r2
   87e42:	bf88      	it	hi
   87e44:	6019      	strhi	r1, [r3, #0]
   87e46:	4b1b      	ldr	r3, [pc, #108]	; (87eb4 <_malloc_r+0x338>)
   87e48:	681a      	ldr	r2, [r3, #0]
   87e4a:	4291      	cmp	r1, r2
   87e4c:	6862      	ldr	r2, [r4, #4]
   87e4e:	bf88      	it	hi
   87e50:	6019      	strhi	r1, [r3, #0]
   87e52:	f022 0203 	bic.w	r2, r2, #3
   87e56:	4296      	cmp	r6, r2
   87e58:	eba2 0306 	sub.w	r3, r2, r6
   87e5c:	d801      	bhi.n	87e62 <_malloc_r+0x2e6>
   87e5e:	2b0f      	cmp	r3, #15
   87e60:	dc04      	bgt.n	87e6c <_malloc_r+0x2f0>
   87e62:	4628      	mov	r0, r5
   87e64:	f000 f9ee 	bl	88244 <__malloc_unlock>
   87e68:	2400      	movs	r4, #0
   87e6a:	e74d      	b.n	87d08 <_malloc_r+0x18c>
   87e6c:	f046 0201 	orr.w	r2, r6, #1
   87e70:	f043 0301 	orr.w	r3, r3, #1
   87e74:	4426      	add	r6, r4
   87e76:	6062      	str	r2, [r4, #4]
   87e78:	4628      	mov	r0, r5
   87e7a:	60be      	str	r6, [r7, #8]
   87e7c:	3408      	adds	r4, #8
   87e7e:	6073      	str	r3, [r6, #4]
   87e80:	f000 f9e0 	bl	88244 <__malloc_unlock>
   87e84:	4620      	mov	r0, r4
   87e86:	b003      	add	sp, #12
   87e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87e8c:	2b14      	cmp	r3, #20
   87e8e:	d970      	bls.n	87f72 <_malloc_r+0x3f6>
   87e90:	2b54      	cmp	r3, #84	; 0x54
   87e92:	f200 80a2 	bhi.w	87fda <_malloc_r+0x45e>
   87e96:	0b33      	lsrs	r3, r6, #12
   87e98:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   87e9c:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   87ea0:	00c1      	lsls	r1, r0, #3
   87ea2:	e68d      	b.n	87bc0 <_malloc_r+0x44>
   87ea4:	200705d4 	.word	0x200705d4
   87ea8:	20070e28 	.word	0x20070e28
   87eac:	20070df8 	.word	0x20070df8
   87eb0:	20070e20 	.word	0x20070e20
   87eb4:	20070e24 	.word	0x20070e24
   87eb8:	200705dc 	.word	0x200705dc
   87ebc:	200709dc 	.word	0x200709dc
   87ec0:	0a5a      	lsrs	r2, r3, #9
   87ec2:	2a04      	cmp	r2, #4
   87ec4:	d95b      	bls.n	87f7e <_malloc_r+0x402>
   87ec6:	2a14      	cmp	r2, #20
   87ec8:	f200 80ae 	bhi.w	88028 <_malloc_r+0x4ac>
   87ecc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   87ed0:	00c9      	lsls	r1, r1, #3
   87ed2:	325b      	adds	r2, #91	; 0x5b
   87ed4:	eb07 0c01 	add.w	ip, r7, r1
   87ed8:	5879      	ldr	r1, [r7, r1]
   87eda:	f1ac 0c08 	sub.w	ip, ip, #8
   87ede:	458c      	cmp	ip, r1
   87ee0:	f000 8088 	beq.w	87ff4 <_malloc_r+0x478>
   87ee4:	684a      	ldr	r2, [r1, #4]
   87ee6:	f022 0203 	bic.w	r2, r2, #3
   87eea:	4293      	cmp	r3, r2
   87eec:	d273      	bcs.n	87fd6 <_malloc_r+0x45a>
   87eee:	6889      	ldr	r1, [r1, #8]
   87ef0:	458c      	cmp	ip, r1
   87ef2:	d1f7      	bne.n	87ee4 <_malloc_r+0x368>
   87ef4:	f8dc 300c 	ldr.w	r3, [ip, #12]
   87ef8:	687a      	ldr	r2, [r7, #4]
   87efa:	60e3      	str	r3, [r4, #12]
   87efc:	f8c4 c008 	str.w	ip, [r4, #8]
   87f00:	609c      	str	r4, [r3, #8]
   87f02:	f8cc 400c 	str.w	r4, [ip, #12]
   87f06:	e69e      	b.n	87c46 <_malloc_r+0xca>
   87f08:	f046 0c01 	orr.w	ip, r6, #1
   87f0c:	f042 0101 	orr.w	r1, r2, #1
   87f10:	4426      	add	r6, r4
   87f12:	f8c4 c004 	str.w	ip, [r4, #4]
   87f16:	4628      	mov	r0, r5
   87f18:	617e      	str	r6, [r7, #20]
   87f1a:	613e      	str	r6, [r7, #16]
   87f1c:	f8c6 e00c 	str.w	lr, [r6, #12]
   87f20:	f8c6 e008 	str.w	lr, [r6, #8]
   87f24:	6071      	str	r1, [r6, #4]
   87f26:	50e2      	str	r2, [r4, r3]
   87f28:	f000 f98c 	bl	88244 <__malloc_unlock>
   87f2c:	3408      	adds	r4, #8
   87f2e:	e6eb      	b.n	87d08 <_malloc_r+0x18c>
   87f30:	687a      	ldr	r2, [r7, #4]
   87f32:	e688      	b.n	87c46 <_malloc_r+0xca>
   87f34:	f108 0801 	add.w	r8, r8, #1
   87f38:	f018 0f03 	tst.w	r8, #3
   87f3c:	f10c 0c08 	add.w	ip, ip, #8
   87f40:	f47f ae93 	bne.w	87c6a <_malloc_r+0xee>
   87f44:	e02d      	b.n	87fa2 <_malloc_r+0x426>
   87f46:	68dc      	ldr	r4, [r3, #12]
   87f48:	42a3      	cmp	r3, r4
   87f4a:	bf08      	it	eq
   87f4c:	3002      	addeq	r0, #2
   87f4e:	f43f ae4b 	beq.w	87be8 <_malloc_r+0x6c>
   87f52:	e6c9      	b.n	87ce8 <_malloc_r+0x16c>
   87f54:	461c      	mov	r4, r3
   87f56:	4419      	add	r1, r3
   87f58:	684a      	ldr	r2, [r1, #4]
   87f5a:	68db      	ldr	r3, [r3, #12]
   87f5c:	f854 6f08 	ldr.w	r6, [r4, #8]!
   87f60:	f042 0201 	orr.w	r2, r2, #1
   87f64:	604a      	str	r2, [r1, #4]
   87f66:	4628      	mov	r0, r5
   87f68:	60f3      	str	r3, [r6, #12]
   87f6a:	609e      	str	r6, [r3, #8]
   87f6c:	f000 f96a 	bl	88244 <__malloc_unlock>
   87f70:	e6ca      	b.n	87d08 <_malloc_r+0x18c>
   87f72:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   87f76:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   87f7a:	00c1      	lsls	r1, r0, #3
   87f7c:	e620      	b.n	87bc0 <_malloc_r+0x44>
   87f7e:	099a      	lsrs	r2, r3, #6
   87f80:	f102 0139 	add.w	r1, r2, #57	; 0x39
   87f84:	00c9      	lsls	r1, r1, #3
   87f86:	3238      	adds	r2, #56	; 0x38
   87f88:	e7a4      	b.n	87ed4 <_malloc_r+0x358>
   87f8a:	42bc      	cmp	r4, r7
   87f8c:	d054      	beq.n	88038 <_malloc_r+0x4bc>
   87f8e:	68bc      	ldr	r4, [r7, #8]
   87f90:	6862      	ldr	r2, [r4, #4]
   87f92:	f022 0203 	bic.w	r2, r2, #3
   87f96:	e75e      	b.n	87e56 <_malloc_r+0x2da>
   87f98:	f859 3908 	ldr.w	r3, [r9], #-8
   87f9c:	4599      	cmp	r9, r3
   87f9e:	f040 8086 	bne.w	880ae <_malloc_r+0x532>
   87fa2:	f010 0f03 	tst.w	r0, #3
   87fa6:	f100 30ff 	add.w	r0, r0, #4294967295
   87faa:	d1f5      	bne.n	87f98 <_malloc_r+0x41c>
   87fac:	687b      	ldr	r3, [r7, #4]
   87fae:	ea23 0304 	bic.w	r3, r3, r4
   87fb2:	607b      	str	r3, [r7, #4]
   87fb4:	0064      	lsls	r4, r4, #1
   87fb6:	429c      	cmp	r4, r3
   87fb8:	f63f aec8 	bhi.w	87d4c <_malloc_r+0x1d0>
   87fbc:	2c00      	cmp	r4, #0
   87fbe:	f43f aec5 	beq.w	87d4c <_malloc_r+0x1d0>
   87fc2:	421c      	tst	r4, r3
   87fc4:	4640      	mov	r0, r8
   87fc6:	f47f ae4c 	bne.w	87c62 <_malloc_r+0xe6>
   87fca:	0064      	lsls	r4, r4, #1
   87fcc:	421c      	tst	r4, r3
   87fce:	f100 0004 	add.w	r0, r0, #4
   87fd2:	d0fa      	beq.n	87fca <_malloc_r+0x44e>
   87fd4:	e645      	b.n	87c62 <_malloc_r+0xe6>
   87fd6:	468c      	mov	ip, r1
   87fd8:	e78c      	b.n	87ef4 <_malloc_r+0x378>
   87fda:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   87fde:	d815      	bhi.n	8800c <_malloc_r+0x490>
   87fe0:	0bf3      	lsrs	r3, r6, #15
   87fe2:	f103 0078 	add.w	r0, r3, #120	; 0x78
   87fe6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   87fea:	00c1      	lsls	r1, r0, #3
   87fec:	e5e8      	b.n	87bc0 <_malloc_r+0x44>
   87fee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   87ff2:	e6ee      	b.n	87dd2 <_malloc_r+0x256>
   87ff4:	2101      	movs	r1, #1
   87ff6:	687b      	ldr	r3, [r7, #4]
   87ff8:	1092      	asrs	r2, r2, #2
   87ffa:	fa01 f202 	lsl.w	r2, r1, r2
   87ffe:	431a      	orrs	r2, r3
   88000:	607a      	str	r2, [r7, #4]
   88002:	4663      	mov	r3, ip
   88004:	e779      	b.n	87efa <_malloc_r+0x37e>
   88006:	2301      	movs	r3, #1
   88008:	6053      	str	r3, [r2, #4]
   8800a:	e72a      	b.n	87e62 <_malloc_r+0x2e6>
   8800c:	f240 5254 	movw	r2, #1364	; 0x554
   88010:	4293      	cmp	r3, r2
   88012:	d822      	bhi.n	8805a <_malloc_r+0x4de>
   88014:	0cb3      	lsrs	r3, r6, #18
   88016:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   8801a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   8801e:	00c1      	lsls	r1, r0, #3
   88020:	e5ce      	b.n	87bc0 <_malloc_r+0x44>
   88022:	f103 0b10 	add.w	fp, r3, #16
   88026:	e6af      	b.n	87d88 <_malloc_r+0x20c>
   88028:	2a54      	cmp	r2, #84	; 0x54
   8802a:	d829      	bhi.n	88080 <_malloc_r+0x504>
   8802c:	0b1a      	lsrs	r2, r3, #12
   8802e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   88032:	00c9      	lsls	r1, r1, #3
   88034:	326e      	adds	r2, #110	; 0x6e
   88036:	e74d      	b.n	87ed4 <_malloc_r+0x358>
   88038:	4b20      	ldr	r3, [pc, #128]	; (880bc <_malloc_r+0x540>)
   8803a:	6819      	ldr	r1, [r3, #0]
   8803c:	4459      	add	r1, fp
   8803e:	6019      	str	r1, [r3, #0]
   88040:	e6b3      	b.n	87daa <_malloc_r+0x22e>
   88042:	f3ca 000b 	ubfx	r0, sl, #0, #12
   88046:	2800      	cmp	r0, #0
   88048:	f47f aeaf 	bne.w	87daa <_malloc_r+0x22e>
   8804c:	eb08 030b 	add.w	r3, r8, fp
   88050:	68ba      	ldr	r2, [r7, #8]
   88052:	f043 0301 	orr.w	r3, r3, #1
   88056:	6053      	str	r3, [r2, #4]
   88058:	e6ef      	b.n	87e3a <_malloc_r+0x2be>
   8805a:	207f      	movs	r0, #127	; 0x7f
   8805c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   88060:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   88064:	e5ac      	b.n	87bc0 <_malloc_r+0x44>
   88066:	f104 0108 	add.w	r1, r4, #8
   8806a:	4628      	mov	r0, r5
   8806c:	9300      	str	r3, [sp, #0]
   8806e:	f000 fd5d 	bl	88b2c <_free_r>
   88072:	9b00      	ldr	r3, [sp, #0]
   88074:	6819      	ldr	r1, [r3, #0]
   88076:	e6e0      	b.n	87e3a <_malloc_r+0x2be>
   88078:	2001      	movs	r0, #1
   8807a:	f04f 0900 	mov.w	r9, #0
   8807e:	e6bd      	b.n	87dfc <_malloc_r+0x280>
   88080:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   88084:	d805      	bhi.n	88092 <_malloc_r+0x516>
   88086:	0bda      	lsrs	r2, r3, #15
   88088:	f102 0178 	add.w	r1, r2, #120	; 0x78
   8808c:	00c9      	lsls	r1, r1, #3
   8808e:	3277      	adds	r2, #119	; 0x77
   88090:	e720      	b.n	87ed4 <_malloc_r+0x358>
   88092:	f240 5154 	movw	r1, #1364	; 0x554
   88096:	428a      	cmp	r2, r1
   88098:	d805      	bhi.n	880a6 <_malloc_r+0x52a>
   8809a:	0c9a      	lsrs	r2, r3, #18
   8809c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   880a0:	00c9      	lsls	r1, r1, #3
   880a2:	327c      	adds	r2, #124	; 0x7c
   880a4:	e716      	b.n	87ed4 <_malloc_r+0x358>
   880a6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   880aa:	227e      	movs	r2, #126	; 0x7e
   880ac:	e712      	b.n	87ed4 <_malloc_r+0x358>
   880ae:	687b      	ldr	r3, [r7, #4]
   880b0:	e780      	b.n	87fb4 <_malloc_r+0x438>
   880b2:	08f0      	lsrs	r0, r6, #3
   880b4:	f106 0308 	add.w	r3, r6, #8
   880b8:	e60e      	b.n	87cd8 <_malloc_r+0x15c>
   880ba:	bf00      	nop
   880bc:	20070df8 	.word	0x20070df8

000880c0 <memchr>:
   880c0:	0783      	lsls	r3, r0, #30
   880c2:	b470      	push	{r4, r5, r6}
   880c4:	b2cd      	uxtb	r5, r1
   880c6:	d03d      	beq.n	88144 <memchr+0x84>
   880c8:	1e54      	subs	r4, r2, #1
   880ca:	b30a      	cbz	r2, 88110 <memchr+0x50>
   880cc:	7803      	ldrb	r3, [r0, #0]
   880ce:	42ab      	cmp	r3, r5
   880d0:	d01f      	beq.n	88112 <memchr+0x52>
   880d2:	1c43      	adds	r3, r0, #1
   880d4:	e005      	b.n	880e2 <memchr+0x22>
   880d6:	f114 34ff 	adds.w	r4, r4, #4294967295
   880da:	d319      	bcc.n	88110 <memchr+0x50>
   880dc:	7802      	ldrb	r2, [r0, #0]
   880de:	42aa      	cmp	r2, r5
   880e0:	d017      	beq.n	88112 <memchr+0x52>
   880e2:	f013 0f03 	tst.w	r3, #3
   880e6:	4618      	mov	r0, r3
   880e8:	f103 0301 	add.w	r3, r3, #1
   880ec:	d1f3      	bne.n	880d6 <memchr+0x16>
   880ee:	2c03      	cmp	r4, #3
   880f0:	d811      	bhi.n	88116 <memchr+0x56>
   880f2:	b34c      	cbz	r4, 88148 <memchr+0x88>
   880f4:	7803      	ldrb	r3, [r0, #0]
   880f6:	42ab      	cmp	r3, r5
   880f8:	d00b      	beq.n	88112 <memchr+0x52>
   880fa:	4404      	add	r4, r0
   880fc:	1c43      	adds	r3, r0, #1
   880fe:	e002      	b.n	88106 <memchr+0x46>
   88100:	7802      	ldrb	r2, [r0, #0]
   88102:	42aa      	cmp	r2, r5
   88104:	d005      	beq.n	88112 <memchr+0x52>
   88106:	429c      	cmp	r4, r3
   88108:	4618      	mov	r0, r3
   8810a:	f103 0301 	add.w	r3, r3, #1
   8810e:	d1f7      	bne.n	88100 <memchr+0x40>
   88110:	2000      	movs	r0, #0
   88112:	bc70      	pop	{r4, r5, r6}
   88114:	4770      	bx	lr
   88116:	0209      	lsls	r1, r1, #8
   88118:	b289      	uxth	r1, r1
   8811a:	4329      	orrs	r1, r5
   8811c:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   88120:	6803      	ldr	r3, [r0, #0]
   88122:	4606      	mov	r6, r0
   88124:	404b      	eors	r3, r1
   88126:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   8812a:	ea22 0303 	bic.w	r3, r2, r3
   8812e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   88132:	f100 0004 	add.w	r0, r0, #4
   88136:	d103      	bne.n	88140 <memchr+0x80>
   88138:	3c04      	subs	r4, #4
   8813a:	2c03      	cmp	r4, #3
   8813c:	d8f0      	bhi.n	88120 <memchr+0x60>
   8813e:	e7d8      	b.n	880f2 <memchr+0x32>
   88140:	4630      	mov	r0, r6
   88142:	e7d7      	b.n	880f4 <memchr+0x34>
   88144:	4614      	mov	r4, r2
   88146:	e7d2      	b.n	880ee <memchr+0x2e>
   88148:	4620      	mov	r0, r4
   8814a:	e7e2      	b.n	88112 <memchr+0x52>

0008814c <memcpy>:
   8814c:	4684      	mov	ip, r0
   8814e:	ea41 0300 	orr.w	r3, r1, r0
   88152:	f013 0303 	ands.w	r3, r3, #3
   88156:	d149      	bne.n	881ec <memcpy+0xa0>
   88158:	3a40      	subs	r2, #64	; 0x40
   8815a:	d323      	bcc.n	881a4 <memcpy+0x58>
   8815c:	680b      	ldr	r3, [r1, #0]
   8815e:	6003      	str	r3, [r0, #0]
   88160:	684b      	ldr	r3, [r1, #4]
   88162:	6043      	str	r3, [r0, #4]
   88164:	688b      	ldr	r3, [r1, #8]
   88166:	6083      	str	r3, [r0, #8]
   88168:	68cb      	ldr	r3, [r1, #12]
   8816a:	60c3      	str	r3, [r0, #12]
   8816c:	690b      	ldr	r3, [r1, #16]
   8816e:	6103      	str	r3, [r0, #16]
   88170:	694b      	ldr	r3, [r1, #20]
   88172:	6143      	str	r3, [r0, #20]
   88174:	698b      	ldr	r3, [r1, #24]
   88176:	6183      	str	r3, [r0, #24]
   88178:	69cb      	ldr	r3, [r1, #28]
   8817a:	61c3      	str	r3, [r0, #28]
   8817c:	6a0b      	ldr	r3, [r1, #32]
   8817e:	6203      	str	r3, [r0, #32]
   88180:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   88182:	6243      	str	r3, [r0, #36]	; 0x24
   88184:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   88186:	6283      	str	r3, [r0, #40]	; 0x28
   88188:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8818a:	62c3      	str	r3, [r0, #44]	; 0x2c
   8818c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8818e:	6303      	str	r3, [r0, #48]	; 0x30
   88190:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   88192:	6343      	str	r3, [r0, #52]	; 0x34
   88194:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   88196:	6383      	str	r3, [r0, #56]	; 0x38
   88198:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8819a:	63c3      	str	r3, [r0, #60]	; 0x3c
   8819c:	3040      	adds	r0, #64	; 0x40
   8819e:	3140      	adds	r1, #64	; 0x40
   881a0:	3a40      	subs	r2, #64	; 0x40
   881a2:	d2db      	bcs.n	8815c <memcpy+0x10>
   881a4:	3230      	adds	r2, #48	; 0x30
   881a6:	d30b      	bcc.n	881c0 <memcpy+0x74>
   881a8:	680b      	ldr	r3, [r1, #0]
   881aa:	6003      	str	r3, [r0, #0]
   881ac:	684b      	ldr	r3, [r1, #4]
   881ae:	6043      	str	r3, [r0, #4]
   881b0:	688b      	ldr	r3, [r1, #8]
   881b2:	6083      	str	r3, [r0, #8]
   881b4:	68cb      	ldr	r3, [r1, #12]
   881b6:	60c3      	str	r3, [r0, #12]
   881b8:	3010      	adds	r0, #16
   881ba:	3110      	adds	r1, #16
   881bc:	3a10      	subs	r2, #16
   881be:	d2f3      	bcs.n	881a8 <memcpy+0x5c>
   881c0:	320c      	adds	r2, #12
   881c2:	d305      	bcc.n	881d0 <memcpy+0x84>
   881c4:	f851 3b04 	ldr.w	r3, [r1], #4
   881c8:	f840 3b04 	str.w	r3, [r0], #4
   881cc:	3a04      	subs	r2, #4
   881ce:	d2f9      	bcs.n	881c4 <memcpy+0x78>
   881d0:	3204      	adds	r2, #4
   881d2:	d008      	beq.n	881e6 <memcpy+0x9a>
   881d4:	07d2      	lsls	r2, r2, #31
   881d6:	bf1c      	itt	ne
   881d8:	f811 3b01 	ldrbne.w	r3, [r1], #1
   881dc:	f800 3b01 	strbne.w	r3, [r0], #1
   881e0:	d301      	bcc.n	881e6 <memcpy+0x9a>
   881e2:	880b      	ldrh	r3, [r1, #0]
   881e4:	8003      	strh	r3, [r0, #0]
   881e6:	4660      	mov	r0, ip
   881e8:	4770      	bx	lr
   881ea:	bf00      	nop
   881ec:	2a08      	cmp	r2, #8
   881ee:	d313      	bcc.n	88218 <memcpy+0xcc>
   881f0:	078b      	lsls	r3, r1, #30
   881f2:	d0b1      	beq.n	88158 <memcpy+0xc>
   881f4:	f010 0303 	ands.w	r3, r0, #3
   881f8:	d0ae      	beq.n	88158 <memcpy+0xc>
   881fa:	f1c3 0304 	rsb	r3, r3, #4
   881fe:	1ad2      	subs	r2, r2, r3
   88200:	07db      	lsls	r3, r3, #31
   88202:	bf1c      	itt	ne
   88204:	f811 3b01 	ldrbne.w	r3, [r1], #1
   88208:	f800 3b01 	strbne.w	r3, [r0], #1
   8820c:	d3a4      	bcc.n	88158 <memcpy+0xc>
   8820e:	f831 3b02 	ldrh.w	r3, [r1], #2
   88212:	f820 3b02 	strh.w	r3, [r0], #2
   88216:	e79f      	b.n	88158 <memcpy+0xc>
   88218:	3a04      	subs	r2, #4
   8821a:	d3d9      	bcc.n	881d0 <memcpy+0x84>
   8821c:	3a01      	subs	r2, #1
   8821e:	f811 3b01 	ldrb.w	r3, [r1], #1
   88222:	f800 3b01 	strb.w	r3, [r0], #1
   88226:	d2f9      	bcs.n	8821c <memcpy+0xd0>
   88228:	780b      	ldrb	r3, [r1, #0]
   8822a:	7003      	strb	r3, [r0, #0]
   8822c:	784b      	ldrb	r3, [r1, #1]
   8822e:	7043      	strb	r3, [r0, #1]
   88230:	788b      	ldrb	r3, [r1, #2]
   88232:	7083      	strb	r3, [r0, #2]
   88234:	4660      	mov	r0, ip
   88236:	4770      	bx	lr

00088238 <__malloc_lock>:
   88238:	4801      	ldr	r0, [pc, #4]	; (88240 <__malloc_lock+0x8>)
   8823a:	f7ff bc9b 	b.w	87b74 <__retarget_lock_acquire_recursive>
   8823e:	bf00      	nop
   88240:	20071000 	.word	0x20071000

00088244 <__malloc_unlock>:
   88244:	4801      	ldr	r0, [pc, #4]	; (8824c <__malloc_unlock+0x8>)
   88246:	f7ff bc97 	b.w	87b78 <__retarget_lock_release_recursive>
   8824a:	bf00      	nop
   8824c:	20071000 	.word	0x20071000

00088250 <_Balloc>:
   88250:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   88252:	b570      	push	{r4, r5, r6, lr}
   88254:	4605      	mov	r5, r0
   88256:	460c      	mov	r4, r1
   88258:	b14b      	cbz	r3, 8826e <_Balloc+0x1e>
   8825a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8825e:	b180      	cbz	r0, 88282 <_Balloc+0x32>
   88260:	6802      	ldr	r2, [r0, #0]
   88262:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   88266:	2300      	movs	r3, #0
   88268:	6103      	str	r3, [r0, #16]
   8826a:	60c3      	str	r3, [r0, #12]
   8826c:	bd70      	pop	{r4, r5, r6, pc}
   8826e:	2221      	movs	r2, #33	; 0x21
   88270:	2104      	movs	r1, #4
   88272:	f000 fbdb 	bl	88a2c <_calloc_r>
   88276:	64e8      	str	r0, [r5, #76]	; 0x4c
   88278:	4603      	mov	r3, r0
   8827a:	2800      	cmp	r0, #0
   8827c:	d1ed      	bne.n	8825a <_Balloc+0xa>
   8827e:	2000      	movs	r0, #0
   88280:	bd70      	pop	{r4, r5, r6, pc}
   88282:	2101      	movs	r1, #1
   88284:	fa01 f604 	lsl.w	r6, r1, r4
   88288:	1d72      	adds	r2, r6, #5
   8828a:	4628      	mov	r0, r5
   8828c:	0092      	lsls	r2, r2, #2
   8828e:	f000 fbcd 	bl	88a2c <_calloc_r>
   88292:	2800      	cmp	r0, #0
   88294:	d0f3      	beq.n	8827e <_Balloc+0x2e>
   88296:	6044      	str	r4, [r0, #4]
   88298:	6086      	str	r6, [r0, #8]
   8829a:	e7e4      	b.n	88266 <_Balloc+0x16>

0008829c <_Bfree>:
   8829c:	b131      	cbz	r1, 882ac <_Bfree+0x10>
   8829e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   882a0:	684a      	ldr	r2, [r1, #4]
   882a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   882a6:	6008      	str	r0, [r1, #0]
   882a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   882ac:	4770      	bx	lr
   882ae:	bf00      	nop

000882b0 <__multadd>:
   882b0:	b5f0      	push	{r4, r5, r6, r7, lr}
   882b2:	460c      	mov	r4, r1
   882b4:	4605      	mov	r5, r0
   882b6:	f04f 0e00 	mov.w	lr, #0
   882ba:	690e      	ldr	r6, [r1, #16]
   882bc:	b083      	sub	sp, #12
   882be:	f101 0714 	add.w	r7, r1, #20
   882c2:	6838      	ldr	r0, [r7, #0]
   882c4:	f10e 0e01 	add.w	lr, lr, #1
   882c8:	b281      	uxth	r1, r0
   882ca:	fb02 3301 	mla	r3, r2, r1, r3
   882ce:	0c01      	lsrs	r1, r0, #16
   882d0:	0c18      	lsrs	r0, r3, #16
   882d2:	fb02 0101 	mla	r1, r2, r1, r0
   882d6:	b29b      	uxth	r3, r3
   882d8:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   882dc:	4576      	cmp	r6, lr
   882de:	f847 3b04 	str.w	r3, [r7], #4
   882e2:	ea4f 4311 	mov.w	r3, r1, lsr #16
   882e6:	dcec      	bgt.n	882c2 <__multadd+0x12>
   882e8:	b13b      	cbz	r3, 882fa <__multadd+0x4a>
   882ea:	68a2      	ldr	r2, [r4, #8]
   882ec:	4296      	cmp	r6, r2
   882ee:	da07      	bge.n	88300 <__multadd+0x50>
   882f0:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   882f4:	3601      	adds	r6, #1
   882f6:	6153      	str	r3, [r2, #20]
   882f8:	6126      	str	r6, [r4, #16]
   882fa:	4620      	mov	r0, r4
   882fc:	b003      	add	sp, #12
   882fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   88300:	6861      	ldr	r1, [r4, #4]
   88302:	4628      	mov	r0, r5
   88304:	3101      	adds	r1, #1
   88306:	9301      	str	r3, [sp, #4]
   88308:	f7ff ffa2 	bl	88250 <_Balloc>
   8830c:	4607      	mov	r7, r0
   8830e:	6922      	ldr	r2, [r4, #16]
   88310:	f104 010c 	add.w	r1, r4, #12
   88314:	3202      	adds	r2, #2
   88316:	0092      	lsls	r2, r2, #2
   88318:	300c      	adds	r0, #12
   8831a:	f7ff ff17 	bl	8814c <memcpy>
   8831e:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   88320:	6861      	ldr	r1, [r4, #4]
   88322:	9b01      	ldr	r3, [sp, #4]
   88324:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   88328:	6020      	str	r0, [r4, #0]
   8832a:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   8832e:	463c      	mov	r4, r7
   88330:	e7de      	b.n	882f0 <__multadd+0x40>
   88332:	bf00      	nop

00088334 <__hi0bits>:
   88334:	0c02      	lsrs	r2, r0, #16
   88336:	0412      	lsls	r2, r2, #16
   88338:	4603      	mov	r3, r0
   8833a:	b9b2      	cbnz	r2, 8836a <__hi0bits+0x36>
   8833c:	0403      	lsls	r3, r0, #16
   8833e:	2010      	movs	r0, #16
   88340:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   88344:	bf04      	itt	eq
   88346:	021b      	lsleq	r3, r3, #8
   88348:	3008      	addeq	r0, #8
   8834a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8834e:	bf04      	itt	eq
   88350:	011b      	lsleq	r3, r3, #4
   88352:	3004      	addeq	r0, #4
   88354:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   88358:	bf04      	itt	eq
   8835a:	009b      	lsleq	r3, r3, #2
   8835c:	3002      	addeq	r0, #2
   8835e:	2b00      	cmp	r3, #0
   88360:	db02      	blt.n	88368 <__hi0bits+0x34>
   88362:	005b      	lsls	r3, r3, #1
   88364:	d403      	bmi.n	8836e <__hi0bits+0x3a>
   88366:	2020      	movs	r0, #32
   88368:	4770      	bx	lr
   8836a:	2000      	movs	r0, #0
   8836c:	e7e8      	b.n	88340 <__hi0bits+0xc>
   8836e:	3001      	adds	r0, #1
   88370:	4770      	bx	lr
   88372:	bf00      	nop

00088374 <__lo0bits>:
   88374:	6803      	ldr	r3, [r0, #0]
   88376:	4601      	mov	r1, r0
   88378:	f013 0207 	ands.w	r2, r3, #7
   8837c:	d007      	beq.n	8838e <__lo0bits+0x1a>
   8837e:	07da      	lsls	r2, r3, #31
   88380:	d421      	bmi.n	883c6 <__lo0bits+0x52>
   88382:	0798      	lsls	r0, r3, #30
   88384:	d421      	bmi.n	883ca <__lo0bits+0x56>
   88386:	089b      	lsrs	r3, r3, #2
   88388:	600b      	str	r3, [r1, #0]
   8838a:	2002      	movs	r0, #2
   8838c:	4770      	bx	lr
   8838e:	b298      	uxth	r0, r3
   88390:	b198      	cbz	r0, 883ba <__lo0bits+0x46>
   88392:	4610      	mov	r0, r2
   88394:	f013 0fff 	tst.w	r3, #255	; 0xff
   88398:	bf04      	itt	eq
   8839a:	0a1b      	lsreq	r3, r3, #8
   8839c:	3008      	addeq	r0, #8
   8839e:	071a      	lsls	r2, r3, #28
   883a0:	bf04      	itt	eq
   883a2:	091b      	lsreq	r3, r3, #4
   883a4:	3004      	addeq	r0, #4
   883a6:	079a      	lsls	r2, r3, #30
   883a8:	bf04      	itt	eq
   883aa:	089b      	lsreq	r3, r3, #2
   883ac:	3002      	addeq	r0, #2
   883ae:	07da      	lsls	r2, r3, #31
   883b0:	d407      	bmi.n	883c2 <__lo0bits+0x4e>
   883b2:	085b      	lsrs	r3, r3, #1
   883b4:	d104      	bne.n	883c0 <__lo0bits+0x4c>
   883b6:	2020      	movs	r0, #32
   883b8:	4770      	bx	lr
   883ba:	0c1b      	lsrs	r3, r3, #16
   883bc:	2010      	movs	r0, #16
   883be:	e7e9      	b.n	88394 <__lo0bits+0x20>
   883c0:	3001      	adds	r0, #1
   883c2:	600b      	str	r3, [r1, #0]
   883c4:	4770      	bx	lr
   883c6:	2000      	movs	r0, #0
   883c8:	4770      	bx	lr
   883ca:	085b      	lsrs	r3, r3, #1
   883cc:	600b      	str	r3, [r1, #0]
   883ce:	2001      	movs	r0, #1
   883d0:	4770      	bx	lr
   883d2:	bf00      	nop

000883d4 <__i2b>:
   883d4:	b510      	push	{r4, lr}
   883d6:	460c      	mov	r4, r1
   883d8:	2101      	movs	r1, #1
   883da:	f7ff ff39 	bl	88250 <_Balloc>
   883de:	2201      	movs	r2, #1
   883e0:	6144      	str	r4, [r0, #20]
   883e2:	6102      	str	r2, [r0, #16]
   883e4:	bd10      	pop	{r4, pc}
   883e6:	bf00      	nop

000883e8 <__multiply>:
   883e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   883ec:	690c      	ldr	r4, [r1, #16]
   883ee:	6915      	ldr	r5, [r2, #16]
   883f0:	b083      	sub	sp, #12
   883f2:	42ac      	cmp	r4, r5
   883f4:	468b      	mov	fp, r1
   883f6:	4616      	mov	r6, r2
   883f8:	da04      	bge.n	88404 <__multiply+0x1c>
   883fa:	4622      	mov	r2, r4
   883fc:	46b3      	mov	fp, r6
   883fe:	462c      	mov	r4, r5
   88400:	460e      	mov	r6, r1
   88402:	4615      	mov	r5, r2
   88404:	f8db 3008 	ldr.w	r3, [fp, #8]
   88408:	eb04 0805 	add.w	r8, r4, r5
   8840c:	f8db 1004 	ldr.w	r1, [fp, #4]
   88410:	4598      	cmp	r8, r3
   88412:	bfc8      	it	gt
   88414:	3101      	addgt	r1, #1
   88416:	f7ff ff1b 	bl	88250 <_Balloc>
   8841a:	f100 0914 	add.w	r9, r0, #20
   8841e:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   88422:	45d1      	cmp	r9, sl
   88424:	9000      	str	r0, [sp, #0]
   88426:	d205      	bcs.n	88434 <__multiply+0x4c>
   88428:	464b      	mov	r3, r9
   8842a:	2100      	movs	r1, #0
   8842c:	f843 1b04 	str.w	r1, [r3], #4
   88430:	459a      	cmp	sl, r3
   88432:	d8fb      	bhi.n	8842c <__multiply+0x44>
   88434:	f106 0c14 	add.w	ip, r6, #20
   88438:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   8843c:	f10b 0b14 	add.w	fp, fp, #20
   88440:	459c      	cmp	ip, r3
   88442:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   88446:	d24b      	bcs.n	884e0 <__multiply+0xf8>
   88448:	f8cd a004 	str.w	sl, [sp, #4]
   8844c:	469a      	mov	sl, r3
   8844e:	f8dc 5000 	ldr.w	r5, [ip]
   88452:	b2af      	uxth	r7, r5
   88454:	b1e7      	cbz	r7, 88490 <__multiply+0xa8>
   88456:	464d      	mov	r5, r9
   88458:	465e      	mov	r6, fp
   8845a:	2100      	movs	r1, #0
   8845c:	f856 2b04 	ldr.w	r2, [r6], #4
   88460:	6828      	ldr	r0, [r5, #0]
   88462:	b293      	uxth	r3, r2
   88464:	b284      	uxth	r4, r0
   88466:	0c12      	lsrs	r2, r2, #16
   88468:	fb07 4303 	mla	r3, r7, r3, r4
   8846c:	0c00      	lsrs	r0, r0, #16
   8846e:	fb07 0202 	mla	r2, r7, r2, r0
   88472:	440b      	add	r3, r1
   88474:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   88478:	b29b      	uxth	r3, r3
   8847a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   8847e:	45b6      	cmp	lr, r6
   88480:	f845 3b04 	str.w	r3, [r5], #4
   88484:	ea4f 4111 	mov.w	r1, r1, lsr #16
   88488:	d8e8      	bhi.n	8845c <__multiply+0x74>
   8848a:	6029      	str	r1, [r5, #0]
   8848c:	f8dc 5000 	ldr.w	r5, [ip]
   88490:	0c2d      	lsrs	r5, r5, #16
   88492:	d01d      	beq.n	884d0 <__multiply+0xe8>
   88494:	f8d9 3000 	ldr.w	r3, [r9]
   88498:	4648      	mov	r0, r9
   8849a:	461c      	mov	r4, r3
   8849c:	4659      	mov	r1, fp
   8849e:	2200      	movs	r2, #0
   884a0:	880e      	ldrh	r6, [r1, #0]
   884a2:	0c24      	lsrs	r4, r4, #16
   884a4:	fb05 4406 	mla	r4, r5, r6, r4
   884a8:	b29b      	uxth	r3, r3
   884aa:	4422      	add	r2, r4
   884ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   884b0:	f840 3b04 	str.w	r3, [r0], #4
   884b4:	f851 3b04 	ldr.w	r3, [r1], #4
   884b8:	6804      	ldr	r4, [r0, #0]
   884ba:	0c1b      	lsrs	r3, r3, #16
   884bc:	b2a6      	uxth	r6, r4
   884be:	fb05 6303 	mla	r3, r5, r3, r6
   884c2:	458e      	cmp	lr, r1
   884c4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   884c8:	ea4f 4213 	mov.w	r2, r3, lsr #16
   884cc:	d8e8      	bhi.n	884a0 <__multiply+0xb8>
   884ce:	6003      	str	r3, [r0, #0]
   884d0:	f10c 0c04 	add.w	ip, ip, #4
   884d4:	45e2      	cmp	sl, ip
   884d6:	f109 0904 	add.w	r9, r9, #4
   884da:	d8b8      	bhi.n	8844e <__multiply+0x66>
   884dc:	f8dd a004 	ldr.w	sl, [sp, #4]
   884e0:	f1b8 0f00 	cmp.w	r8, #0
   884e4:	dd0b      	ble.n	884fe <__multiply+0x116>
   884e6:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   884ea:	f1aa 0a04 	sub.w	sl, sl, #4
   884ee:	b11b      	cbz	r3, 884f8 <__multiply+0x110>
   884f0:	e005      	b.n	884fe <__multiply+0x116>
   884f2:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   884f6:	b913      	cbnz	r3, 884fe <__multiply+0x116>
   884f8:	f1b8 0801 	subs.w	r8, r8, #1
   884fc:	d1f9      	bne.n	884f2 <__multiply+0x10a>
   884fe:	9800      	ldr	r0, [sp, #0]
   88500:	f8c0 8010 	str.w	r8, [r0, #16]
   88504:	b003      	add	sp, #12
   88506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8850a:	bf00      	nop

0008850c <__pow5mult>:
   8850c:	f012 0303 	ands.w	r3, r2, #3
   88510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88514:	4614      	mov	r4, r2
   88516:	4607      	mov	r7, r0
   88518:	d12e      	bne.n	88578 <__pow5mult+0x6c>
   8851a:	460d      	mov	r5, r1
   8851c:	10a4      	asrs	r4, r4, #2
   8851e:	d01c      	beq.n	8855a <__pow5mult+0x4e>
   88520:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   88522:	b396      	cbz	r6, 8858a <__pow5mult+0x7e>
   88524:	07e3      	lsls	r3, r4, #31
   88526:	f04f 0800 	mov.w	r8, #0
   8852a:	d406      	bmi.n	8853a <__pow5mult+0x2e>
   8852c:	1064      	asrs	r4, r4, #1
   8852e:	d014      	beq.n	8855a <__pow5mult+0x4e>
   88530:	6830      	ldr	r0, [r6, #0]
   88532:	b1a8      	cbz	r0, 88560 <__pow5mult+0x54>
   88534:	4606      	mov	r6, r0
   88536:	07e3      	lsls	r3, r4, #31
   88538:	d5f8      	bpl.n	8852c <__pow5mult+0x20>
   8853a:	4632      	mov	r2, r6
   8853c:	4629      	mov	r1, r5
   8853e:	4638      	mov	r0, r7
   88540:	f7ff ff52 	bl	883e8 <__multiply>
   88544:	b1b5      	cbz	r5, 88574 <__pow5mult+0x68>
   88546:	686a      	ldr	r2, [r5, #4]
   88548:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   8854a:	1064      	asrs	r4, r4, #1
   8854c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   88550:	6029      	str	r1, [r5, #0]
   88552:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   88556:	4605      	mov	r5, r0
   88558:	d1ea      	bne.n	88530 <__pow5mult+0x24>
   8855a:	4628      	mov	r0, r5
   8855c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88560:	4632      	mov	r2, r6
   88562:	4631      	mov	r1, r6
   88564:	4638      	mov	r0, r7
   88566:	f7ff ff3f 	bl	883e8 <__multiply>
   8856a:	6030      	str	r0, [r6, #0]
   8856c:	f8c0 8000 	str.w	r8, [r0]
   88570:	4606      	mov	r6, r0
   88572:	e7e0      	b.n	88536 <__pow5mult+0x2a>
   88574:	4605      	mov	r5, r0
   88576:	e7d9      	b.n	8852c <__pow5mult+0x20>
   88578:	4a0b      	ldr	r2, [pc, #44]	; (885a8 <__pow5mult+0x9c>)
   8857a:	3b01      	subs	r3, #1
   8857c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   88580:	2300      	movs	r3, #0
   88582:	f7ff fe95 	bl	882b0 <__multadd>
   88586:	4605      	mov	r5, r0
   88588:	e7c8      	b.n	8851c <__pow5mult+0x10>
   8858a:	2101      	movs	r1, #1
   8858c:	4638      	mov	r0, r7
   8858e:	f7ff fe5f 	bl	88250 <_Balloc>
   88592:	f240 2171 	movw	r1, #625	; 0x271
   88596:	2201      	movs	r2, #1
   88598:	2300      	movs	r3, #0
   8859a:	6141      	str	r1, [r0, #20]
   8859c:	6102      	str	r2, [r0, #16]
   8859e:	4606      	mov	r6, r0
   885a0:	64b8      	str	r0, [r7, #72]	; 0x48
   885a2:	6003      	str	r3, [r0, #0]
   885a4:	e7be      	b.n	88524 <__pow5mult+0x18>
   885a6:	bf00      	nop
   885a8:	000898c8 	.word	0x000898c8

000885ac <__lshift>:
   885ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   885b0:	690b      	ldr	r3, [r1, #16]
   885b2:	1154      	asrs	r4, r2, #5
   885b4:	eb04 0803 	add.w	r8, r4, r3
   885b8:	688b      	ldr	r3, [r1, #8]
   885ba:	f108 0501 	add.w	r5, r8, #1
   885be:	429d      	cmp	r5, r3
   885c0:	460e      	mov	r6, r1
   885c2:	4691      	mov	r9, r2
   885c4:	4607      	mov	r7, r0
   885c6:	6849      	ldr	r1, [r1, #4]
   885c8:	dd04      	ble.n	885d4 <__lshift+0x28>
   885ca:	005b      	lsls	r3, r3, #1
   885cc:	429d      	cmp	r5, r3
   885ce:	f101 0101 	add.w	r1, r1, #1
   885d2:	dcfa      	bgt.n	885ca <__lshift+0x1e>
   885d4:	4638      	mov	r0, r7
   885d6:	f7ff fe3b 	bl	88250 <_Balloc>
   885da:	2c00      	cmp	r4, #0
   885dc:	f100 0314 	add.w	r3, r0, #20
   885e0:	dd06      	ble.n	885f0 <__lshift+0x44>
   885e2:	2100      	movs	r1, #0
   885e4:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   885e8:	f843 1b04 	str.w	r1, [r3], #4
   885ec:	429a      	cmp	r2, r3
   885ee:	d1fb      	bne.n	885e8 <__lshift+0x3c>
   885f0:	6934      	ldr	r4, [r6, #16]
   885f2:	f106 0114 	add.w	r1, r6, #20
   885f6:	f019 091f 	ands.w	r9, r9, #31
   885fa:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   885fe:	d01d      	beq.n	8863c <__lshift+0x90>
   88600:	2200      	movs	r2, #0
   88602:	f1c9 0c20 	rsb	ip, r9, #32
   88606:	680c      	ldr	r4, [r1, #0]
   88608:	fa04 f409 	lsl.w	r4, r4, r9
   8860c:	4314      	orrs	r4, r2
   8860e:	f843 4b04 	str.w	r4, [r3], #4
   88612:	f851 2b04 	ldr.w	r2, [r1], #4
   88616:	458e      	cmp	lr, r1
   88618:	fa22 f20c 	lsr.w	r2, r2, ip
   8861c:	d8f3      	bhi.n	88606 <__lshift+0x5a>
   8861e:	601a      	str	r2, [r3, #0]
   88620:	b10a      	cbz	r2, 88626 <__lshift+0x7a>
   88622:	f108 0502 	add.w	r5, r8, #2
   88626:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88628:	6872      	ldr	r2, [r6, #4]
   8862a:	3d01      	subs	r5, #1
   8862c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   88630:	6105      	str	r5, [r0, #16]
   88632:	6031      	str	r1, [r6, #0]
   88634:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   88638:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8863c:	3b04      	subs	r3, #4
   8863e:	f851 2b04 	ldr.w	r2, [r1], #4
   88642:	458e      	cmp	lr, r1
   88644:	f843 2f04 	str.w	r2, [r3, #4]!
   88648:	d8f9      	bhi.n	8863e <__lshift+0x92>
   8864a:	e7ec      	b.n	88626 <__lshift+0x7a>

0008864c <__mcmp>:
   8864c:	b430      	push	{r4, r5}
   8864e:	690b      	ldr	r3, [r1, #16]
   88650:	4605      	mov	r5, r0
   88652:	6900      	ldr	r0, [r0, #16]
   88654:	1ac0      	subs	r0, r0, r3
   88656:	d10f      	bne.n	88678 <__mcmp+0x2c>
   88658:	009b      	lsls	r3, r3, #2
   8865a:	3514      	adds	r5, #20
   8865c:	3114      	adds	r1, #20
   8865e:	4419      	add	r1, r3
   88660:	442b      	add	r3, r5
   88662:	e001      	b.n	88668 <__mcmp+0x1c>
   88664:	429d      	cmp	r5, r3
   88666:	d207      	bcs.n	88678 <__mcmp+0x2c>
   88668:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   8866c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   88670:	4294      	cmp	r4, r2
   88672:	d0f7      	beq.n	88664 <__mcmp+0x18>
   88674:	d302      	bcc.n	8867c <__mcmp+0x30>
   88676:	2001      	movs	r0, #1
   88678:	bc30      	pop	{r4, r5}
   8867a:	4770      	bx	lr
   8867c:	f04f 30ff 	mov.w	r0, #4294967295
   88680:	e7fa      	b.n	88678 <__mcmp+0x2c>
   88682:	bf00      	nop

00088684 <__mdiff>:
   88684:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88688:	690c      	ldr	r4, [r1, #16]
   8868a:	4689      	mov	r9, r1
   8868c:	6911      	ldr	r1, [r2, #16]
   8868e:	4692      	mov	sl, r2
   88690:	1a64      	subs	r4, r4, r1
   88692:	2c00      	cmp	r4, #0
   88694:	d117      	bne.n	886c6 <__mdiff+0x42>
   88696:	0089      	lsls	r1, r1, #2
   88698:	f109 0714 	add.w	r7, r9, #20
   8869c:	f102 0614 	add.w	r6, r2, #20
   886a0:	187b      	adds	r3, r7, r1
   886a2:	4431      	add	r1, r6
   886a4:	e001      	b.n	886aa <__mdiff+0x26>
   886a6:	429f      	cmp	r7, r3
   886a8:	d265      	bcs.n	88776 <__mdiff+0xf2>
   886aa:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   886ae:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   886b2:	4295      	cmp	r5, r2
   886b4:	d0f7      	beq.n	886a6 <__mdiff+0x22>
   886b6:	d267      	bcs.n	88788 <__mdiff+0x104>
   886b8:	464b      	mov	r3, r9
   886ba:	46bb      	mov	fp, r7
   886bc:	46d1      	mov	r9, sl
   886be:	4637      	mov	r7, r6
   886c0:	469a      	mov	sl, r3
   886c2:	2401      	movs	r4, #1
   886c4:	e005      	b.n	886d2 <__mdiff+0x4e>
   886c6:	db61      	blt.n	8878c <__mdiff+0x108>
   886c8:	2400      	movs	r4, #0
   886ca:	f109 0714 	add.w	r7, r9, #20
   886ce:	f10a 0b14 	add.w	fp, sl, #20
   886d2:	f8d9 1004 	ldr.w	r1, [r9, #4]
   886d6:	f7ff fdbb 	bl	88250 <_Balloc>
   886da:	465d      	mov	r5, fp
   886dc:	f04f 0800 	mov.w	r8, #0
   886e0:	f8d9 e010 	ldr.w	lr, [r9, #16]
   886e4:	f8da 3010 	ldr.w	r3, [sl, #16]
   886e8:	463e      	mov	r6, r7
   886ea:	60c4      	str	r4, [r0, #12]
   886ec:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   886f0:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   886f4:	f100 0414 	add.w	r4, r0, #20
   886f8:	f856 9b04 	ldr.w	r9, [r6], #4
   886fc:	f855 2b04 	ldr.w	r2, [r5], #4
   88700:	fa1f f389 	uxth.w	r3, r9
   88704:	4443      	add	r3, r8
   88706:	fa1f f882 	uxth.w	r8, r2
   8870a:	0c12      	lsrs	r2, r2, #16
   8870c:	eba3 0308 	sub.w	r3, r3, r8
   88710:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   88714:	eb02 4223 	add.w	r2, r2, r3, asr #16
   88718:	b29b      	uxth	r3, r3
   8871a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8871e:	45ac      	cmp	ip, r5
   88720:	f844 3b04 	str.w	r3, [r4], #4
   88724:	ea4f 4822 	mov.w	r8, r2, asr #16
   88728:	d8e6      	bhi.n	886f8 <__mdiff+0x74>
   8872a:	42b7      	cmp	r7, r6
   8872c:	d917      	bls.n	8875e <__mdiff+0xda>
   8872e:	46a4      	mov	ip, r4
   88730:	4635      	mov	r5, r6
   88732:	f855 3b04 	ldr.w	r3, [r5], #4
   88736:	b299      	uxth	r1, r3
   88738:	4441      	add	r1, r8
   8873a:	140a      	asrs	r2, r1, #16
   8873c:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   88740:	b289      	uxth	r1, r1
   88742:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   88746:	42af      	cmp	r7, r5
   88748:	f84c 3b04 	str.w	r3, [ip], #4
   8874c:	ea4f 4822 	mov.w	r8, r2, asr #16
   88750:	d8ef      	bhi.n	88732 <__mdiff+0xae>
   88752:	43f6      	mvns	r6, r6
   88754:	4437      	add	r7, r6
   88756:	f027 0703 	bic.w	r7, r7, #3
   8875a:	3704      	adds	r7, #4
   8875c:	443c      	add	r4, r7
   8875e:	3c04      	subs	r4, #4
   88760:	b92b      	cbnz	r3, 8876e <__mdiff+0xea>
   88762:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   88766:	f10e 3eff 	add.w	lr, lr, #4294967295
   8876a:	2b00      	cmp	r3, #0
   8876c:	d0f9      	beq.n	88762 <__mdiff+0xde>
   8876e:	f8c0 e010 	str.w	lr, [r0, #16]
   88772:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88776:	2100      	movs	r1, #0
   88778:	f7ff fd6a 	bl	88250 <_Balloc>
   8877c:	2201      	movs	r2, #1
   8877e:	2300      	movs	r3, #0
   88780:	6102      	str	r2, [r0, #16]
   88782:	6143      	str	r3, [r0, #20]
   88784:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88788:	46b3      	mov	fp, r6
   8878a:	e7a2      	b.n	886d2 <__mdiff+0x4e>
   8878c:	464b      	mov	r3, r9
   8878e:	f109 0b14 	add.w	fp, r9, #20
   88792:	f102 0714 	add.w	r7, r2, #20
   88796:	4691      	mov	r9, r2
   88798:	2401      	movs	r4, #1
   8879a:	469a      	mov	sl, r3
   8879c:	e799      	b.n	886d2 <__mdiff+0x4e>
   8879e:	bf00      	nop

000887a0 <__d2b>:
   887a0:	b5f0      	push	{r4, r5, r6, r7, lr}
   887a2:	2101      	movs	r1, #1
   887a4:	b083      	sub	sp, #12
   887a6:	461c      	mov	r4, r3
   887a8:	f3c3 550a 	ubfx	r5, r3, #20, #11
   887ac:	4616      	mov	r6, r2
   887ae:	f7ff fd4f 	bl	88250 <_Balloc>
   887b2:	f3c4 0413 	ubfx	r4, r4, #0, #20
   887b6:	4607      	mov	r7, r0
   887b8:	b10d      	cbz	r5, 887be <__d2b+0x1e>
   887ba:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   887be:	9401      	str	r4, [sp, #4]
   887c0:	b306      	cbz	r6, 88804 <__d2b+0x64>
   887c2:	a802      	add	r0, sp, #8
   887c4:	f840 6d08 	str.w	r6, [r0, #-8]!
   887c8:	f7ff fdd4 	bl	88374 <__lo0bits>
   887cc:	2800      	cmp	r0, #0
   887ce:	d130      	bne.n	88832 <__d2b+0x92>
   887d0:	e89d 000c 	ldmia.w	sp, {r2, r3}
   887d4:	617a      	str	r2, [r7, #20]
   887d6:	2b00      	cmp	r3, #0
   887d8:	bf0c      	ite	eq
   887da:	2101      	moveq	r1, #1
   887dc:	2102      	movne	r1, #2
   887de:	61bb      	str	r3, [r7, #24]
   887e0:	6139      	str	r1, [r7, #16]
   887e2:	b9d5      	cbnz	r5, 8881a <__d2b+0x7a>
   887e4:	9a08      	ldr	r2, [sp, #32]
   887e6:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   887ea:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   887ee:	6010      	str	r0, [r2, #0]
   887f0:	6918      	ldr	r0, [r3, #16]
   887f2:	f7ff fd9f 	bl	88334 <__hi0bits>
   887f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   887f8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   887fc:	6018      	str	r0, [r3, #0]
   887fe:	4638      	mov	r0, r7
   88800:	b003      	add	sp, #12
   88802:	bdf0      	pop	{r4, r5, r6, r7, pc}
   88804:	a801      	add	r0, sp, #4
   88806:	f7ff fdb5 	bl	88374 <__lo0bits>
   8880a:	2201      	movs	r2, #1
   8880c:	9b01      	ldr	r3, [sp, #4]
   8880e:	4611      	mov	r1, r2
   88810:	3020      	adds	r0, #32
   88812:	613a      	str	r2, [r7, #16]
   88814:	617b      	str	r3, [r7, #20]
   88816:	2d00      	cmp	r5, #0
   88818:	d0e4      	beq.n	887e4 <__d2b+0x44>
   8881a:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   8881e:	9a08      	ldr	r2, [sp, #32]
   88820:	4403      	add	r3, r0
   88822:	6013      	str	r3, [r2, #0]
   88824:	9b09      	ldr	r3, [sp, #36]	; 0x24
   88826:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   8882a:	6018      	str	r0, [r3, #0]
   8882c:	4638      	mov	r0, r7
   8882e:	b003      	add	sp, #12
   88830:	bdf0      	pop	{r4, r5, r6, r7, pc}
   88832:	9b01      	ldr	r3, [sp, #4]
   88834:	f1c0 0220 	rsb	r2, r0, #32
   88838:	9900      	ldr	r1, [sp, #0]
   8883a:	fa03 f202 	lsl.w	r2, r3, r2
   8883e:	430a      	orrs	r2, r1
   88840:	40c3      	lsrs	r3, r0
   88842:	9301      	str	r3, [sp, #4]
   88844:	617a      	str	r2, [r7, #20]
   88846:	e7c6      	b.n	887d6 <__d2b+0x36>

00088848 <_sbrk_r>:
   88848:	b538      	push	{r3, r4, r5, lr}
   8884a:	2300      	movs	r3, #0
   8884c:	4c06      	ldr	r4, [pc, #24]	; (88868 <_sbrk_r+0x20>)
   8884e:	4605      	mov	r5, r0
   88850:	4608      	mov	r0, r1
   88852:	6023      	str	r3, [r4, #0]
   88854:	f7fb fd0e 	bl	84274 <_sbrk>
   88858:	1c43      	adds	r3, r0, #1
   8885a:	d000      	beq.n	8885e <_sbrk_r+0x16>
   8885c:	bd38      	pop	{r3, r4, r5, pc}
   8885e:	6823      	ldr	r3, [r4, #0]
   88860:	2b00      	cmp	r3, #0
   88862:	d0fb      	beq.n	8885c <_sbrk_r+0x14>
   88864:	602b      	str	r3, [r5, #0]
   88866:	bd38      	pop	{r3, r4, r5, pc}
   88868:	20071014 	.word	0x20071014

0008886c <__ssprint_r>:
   8886c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88870:	6893      	ldr	r3, [r2, #8]
   88872:	b083      	sub	sp, #12
   88874:	4690      	mov	r8, r2
   88876:	2b00      	cmp	r3, #0
   88878:	d070      	beq.n	8895c <__ssprint_r+0xf0>
   8887a:	4682      	mov	sl, r0
   8887c:	460c      	mov	r4, r1
   8887e:	6817      	ldr	r7, [r2, #0]
   88880:	688d      	ldr	r5, [r1, #8]
   88882:	6808      	ldr	r0, [r1, #0]
   88884:	e042      	b.n	8890c <__ssprint_r+0xa0>
   88886:	89a3      	ldrh	r3, [r4, #12]
   88888:	f413 6f90 	tst.w	r3, #1152	; 0x480
   8888c:	d02e      	beq.n	888ec <__ssprint_r+0x80>
   8888e:	6965      	ldr	r5, [r4, #20]
   88890:	6921      	ldr	r1, [r4, #16]
   88892:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   88896:	eba0 0b01 	sub.w	fp, r0, r1
   8889a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   8889e:	f10b 0001 	add.w	r0, fp, #1
   888a2:	106d      	asrs	r5, r5, #1
   888a4:	4430      	add	r0, r6
   888a6:	42a8      	cmp	r0, r5
   888a8:	462a      	mov	r2, r5
   888aa:	bf84      	itt	hi
   888ac:	4605      	movhi	r5, r0
   888ae:	462a      	movhi	r2, r5
   888b0:	055b      	lsls	r3, r3, #21
   888b2:	d538      	bpl.n	88926 <__ssprint_r+0xba>
   888b4:	4611      	mov	r1, r2
   888b6:	4650      	mov	r0, sl
   888b8:	f7ff f960 	bl	87b7c <_malloc_r>
   888bc:	2800      	cmp	r0, #0
   888be:	d03c      	beq.n	8893a <__ssprint_r+0xce>
   888c0:	465a      	mov	r2, fp
   888c2:	6921      	ldr	r1, [r4, #16]
   888c4:	9001      	str	r0, [sp, #4]
   888c6:	f7ff fc41 	bl	8814c <memcpy>
   888ca:	89a2      	ldrh	r2, [r4, #12]
   888cc:	9b01      	ldr	r3, [sp, #4]
   888ce:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   888d2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   888d6:	81a2      	strh	r2, [r4, #12]
   888d8:	eba5 020b 	sub.w	r2, r5, fp
   888dc:	eb03 000b 	add.w	r0, r3, fp
   888e0:	6165      	str	r5, [r4, #20]
   888e2:	46b3      	mov	fp, r6
   888e4:	4635      	mov	r5, r6
   888e6:	6123      	str	r3, [r4, #16]
   888e8:	6020      	str	r0, [r4, #0]
   888ea:	60a2      	str	r2, [r4, #8]
   888ec:	465a      	mov	r2, fp
   888ee:	4649      	mov	r1, r9
   888f0:	f000 fa18 	bl	88d24 <memmove>
   888f4:	f8d8 3008 	ldr.w	r3, [r8, #8]
   888f8:	68a2      	ldr	r2, [r4, #8]
   888fa:	6820      	ldr	r0, [r4, #0]
   888fc:	1b55      	subs	r5, r2, r5
   888fe:	4458      	add	r0, fp
   88900:	1b9e      	subs	r6, r3, r6
   88902:	60a5      	str	r5, [r4, #8]
   88904:	6020      	str	r0, [r4, #0]
   88906:	f8c8 6008 	str.w	r6, [r8, #8]
   8890a:	b33e      	cbz	r6, 8895c <__ssprint_r+0xf0>
   8890c:	687e      	ldr	r6, [r7, #4]
   8890e:	463b      	mov	r3, r7
   88910:	3708      	adds	r7, #8
   88912:	2e00      	cmp	r6, #0
   88914:	d0fa      	beq.n	8890c <__ssprint_r+0xa0>
   88916:	42ae      	cmp	r6, r5
   88918:	f8d3 9000 	ldr.w	r9, [r3]
   8891c:	46ab      	mov	fp, r5
   8891e:	d2b2      	bcs.n	88886 <__ssprint_r+0x1a>
   88920:	4635      	mov	r5, r6
   88922:	46b3      	mov	fp, r6
   88924:	e7e2      	b.n	888ec <__ssprint_r+0x80>
   88926:	4650      	mov	r0, sl
   88928:	f000 fa60 	bl	88dec <_realloc_r>
   8892c:	4603      	mov	r3, r0
   8892e:	2800      	cmp	r0, #0
   88930:	d1d2      	bne.n	888d8 <__ssprint_r+0x6c>
   88932:	6921      	ldr	r1, [r4, #16]
   88934:	4650      	mov	r0, sl
   88936:	f000 f8f9 	bl	88b2c <_free_r>
   8893a:	230c      	movs	r3, #12
   8893c:	2200      	movs	r2, #0
   8893e:	f04f 30ff 	mov.w	r0, #4294967295
   88942:	f8ca 3000 	str.w	r3, [sl]
   88946:	89a3      	ldrh	r3, [r4, #12]
   88948:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8894c:	81a3      	strh	r3, [r4, #12]
   8894e:	f8c8 2008 	str.w	r2, [r8, #8]
   88952:	f8c8 2004 	str.w	r2, [r8, #4]
   88956:	b003      	add	sp, #12
   88958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8895c:	2000      	movs	r0, #0
   8895e:	f8c8 0004 	str.w	r0, [r8, #4]
   88962:	b003      	add	sp, #12
   88964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00088968 <__register_exitproc>:
   88968:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8896c:	4d2c      	ldr	r5, [pc, #176]	; (88a20 <__register_exitproc+0xb8>)
   8896e:	4606      	mov	r6, r0
   88970:	6828      	ldr	r0, [r5, #0]
   88972:	4698      	mov	r8, r3
   88974:	460f      	mov	r7, r1
   88976:	4691      	mov	r9, r2
   88978:	f7ff f8fc 	bl	87b74 <__retarget_lock_acquire_recursive>
   8897c:	4b29      	ldr	r3, [pc, #164]	; (88a24 <__register_exitproc+0xbc>)
   8897e:	681c      	ldr	r4, [r3, #0]
   88980:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   88984:	2b00      	cmp	r3, #0
   88986:	d03e      	beq.n	88a06 <__register_exitproc+0x9e>
   88988:	685a      	ldr	r2, [r3, #4]
   8898a:	2a1f      	cmp	r2, #31
   8898c:	dc1c      	bgt.n	889c8 <__register_exitproc+0x60>
   8898e:	f102 0e01 	add.w	lr, r2, #1
   88992:	b176      	cbz	r6, 889b2 <__register_exitproc+0x4a>
   88994:	2101      	movs	r1, #1
   88996:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   8899a:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   8899e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   889a2:	4091      	lsls	r1, r2
   889a4:	4308      	orrs	r0, r1
   889a6:	2e02      	cmp	r6, #2
   889a8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   889ac:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   889b0:	d023      	beq.n	889fa <__register_exitproc+0x92>
   889b2:	3202      	adds	r2, #2
   889b4:	f8c3 e004 	str.w	lr, [r3, #4]
   889b8:	6828      	ldr	r0, [r5, #0]
   889ba:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   889be:	f7ff f8db 	bl	87b78 <__retarget_lock_release_recursive>
   889c2:	2000      	movs	r0, #0
   889c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   889c8:	4b17      	ldr	r3, [pc, #92]	; (88a28 <__register_exitproc+0xc0>)
   889ca:	b30b      	cbz	r3, 88a10 <__register_exitproc+0xa8>
   889cc:	f44f 70c8 	mov.w	r0, #400	; 0x190
   889d0:	f3af 8000 	nop.w
   889d4:	4603      	mov	r3, r0
   889d6:	b1d8      	cbz	r0, 88a10 <__register_exitproc+0xa8>
   889d8:	2000      	movs	r0, #0
   889da:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   889de:	f04f 0e01 	mov.w	lr, #1
   889e2:	6058      	str	r0, [r3, #4]
   889e4:	6019      	str	r1, [r3, #0]
   889e6:	4602      	mov	r2, r0
   889e8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   889ec:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   889f0:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   889f4:	2e00      	cmp	r6, #0
   889f6:	d0dc      	beq.n	889b2 <__register_exitproc+0x4a>
   889f8:	e7cc      	b.n	88994 <__register_exitproc+0x2c>
   889fa:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   889fe:	4301      	orrs	r1, r0
   88a00:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   88a04:	e7d5      	b.n	889b2 <__register_exitproc+0x4a>
   88a06:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   88a0a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   88a0e:	e7bb      	b.n	88988 <__register_exitproc+0x20>
   88a10:	6828      	ldr	r0, [r5, #0]
   88a12:	f7ff f8b1 	bl	87b78 <__retarget_lock_release_recursive>
   88a16:	f04f 30ff 	mov.w	r0, #4294967295
   88a1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   88a1e:	bf00      	nop
   88a20:	200705d0 	.word	0x200705d0
   88a24:	00089760 	.word	0x00089760
   88a28:	00000000 	.word	0x00000000

00088a2c <_calloc_r>:
   88a2c:	b510      	push	{r4, lr}
   88a2e:	fb02 f101 	mul.w	r1, r2, r1
   88a32:	f7ff f8a3 	bl	87b7c <_malloc_r>
   88a36:	4604      	mov	r4, r0
   88a38:	b1d8      	cbz	r0, 88a72 <_calloc_r+0x46>
   88a3a:	f850 2c04 	ldr.w	r2, [r0, #-4]
   88a3e:	f022 0203 	bic.w	r2, r2, #3
   88a42:	3a04      	subs	r2, #4
   88a44:	2a24      	cmp	r2, #36	; 0x24
   88a46:	d818      	bhi.n	88a7a <_calloc_r+0x4e>
   88a48:	2a13      	cmp	r2, #19
   88a4a:	d914      	bls.n	88a76 <_calloc_r+0x4a>
   88a4c:	2300      	movs	r3, #0
   88a4e:	2a1b      	cmp	r2, #27
   88a50:	6003      	str	r3, [r0, #0]
   88a52:	6043      	str	r3, [r0, #4]
   88a54:	d916      	bls.n	88a84 <_calloc_r+0x58>
   88a56:	2a24      	cmp	r2, #36	; 0x24
   88a58:	6083      	str	r3, [r0, #8]
   88a5a:	60c3      	str	r3, [r0, #12]
   88a5c:	bf11      	iteee	ne
   88a5e:	f100 0210 	addne.w	r2, r0, #16
   88a62:	6103      	streq	r3, [r0, #16]
   88a64:	6143      	streq	r3, [r0, #20]
   88a66:	f100 0218 	addeq.w	r2, r0, #24
   88a6a:	2300      	movs	r3, #0
   88a6c:	6013      	str	r3, [r2, #0]
   88a6e:	6053      	str	r3, [r2, #4]
   88a70:	6093      	str	r3, [r2, #8]
   88a72:	4620      	mov	r0, r4
   88a74:	bd10      	pop	{r4, pc}
   88a76:	4602      	mov	r2, r0
   88a78:	e7f7      	b.n	88a6a <_calloc_r+0x3e>
   88a7a:	2100      	movs	r1, #0
   88a7c:	f7fc fd6a 	bl	85554 <memset>
   88a80:	4620      	mov	r0, r4
   88a82:	bd10      	pop	{r4, pc}
   88a84:	f100 0208 	add.w	r2, r0, #8
   88a88:	e7ef      	b.n	88a6a <_calloc_r+0x3e>
   88a8a:	bf00      	nop

00088a8c <_malloc_trim_r>:
   88a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   88a8e:	460c      	mov	r4, r1
   88a90:	4f23      	ldr	r7, [pc, #140]	; (88b20 <_malloc_trim_r+0x94>)
   88a92:	4606      	mov	r6, r0
   88a94:	f7ff fbd0 	bl	88238 <__malloc_lock>
   88a98:	68bb      	ldr	r3, [r7, #8]
   88a9a:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   88a9e:	685d      	ldr	r5, [r3, #4]
   88aa0:	310f      	adds	r1, #15
   88aa2:	f025 0503 	bic.w	r5, r5, #3
   88aa6:	4429      	add	r1, r5
   88aa8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   88aac:	f021 010f 	bic.w	r1, r1, #15
   88ab0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   88ab4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   88ab8:	db07      	blt.n	88aca <_malloc_trim_r+0x3e>
   88aba:	2100      	movs	r1, #0
   88abc:	4630      	mov	r0, r6
   88abe:	f7ff fec3 	bl	88848 <_sbrk_r>
   88ac2:	68bb      	ldr	r3, [r7, #8]
   88ac4:	442b      	add	r3, r5
   88ac6:	4298      	cmp	r0, r3
   88ac8:	d004      	beq.n	88ad4 <_malloc_trim_r+0x48>
   88aca:	4630      	mov	r0, r6
   88acc:	f7ff fbba 	bl	88244 <__malloc_unlock>
   88ad0:	2000      	movs	r0, #0
   88ad2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   88ad4:	4261      	negs	r1, r4
   88ad6:	4630      	mov	r0, r6
   88ad8:	f7ff feb6 	bl	88848 <_sbrk_r>
   88adc:	3001      	adds	r0, #1
   88ade:	d00d      	beq.n	88afc <_malloc_trim_r+0x70>
   88ae0:	4b10      	ldr	r3, [pc, #64]	; (88b24 <_malloc_trim_r+0x98>)
   88ae2:	68ba      	ldr	r2, [r7, #8]
   88ae4:	6819      	ldr	r1, [r3, #0]
   88ae6:	1b2d      	subs	r5, r5, r4
   88ae8:	f045 0501 	orr.w	r5, r5, #1
   88aec:	4630      	mov	r0, r6
   88aee:	1b09      	subs	r1, r1, r4
   88af0:	6055      	str	r5, [r2, #4]
   88af2:	6019      	str	r1, [r3, #0]
   88af4:	f7ff fba6 	bl	88244 <__malloc_unlock>
   88af8:	2001      	movs	r0, #1
   88afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   88afc:	2100      	movs	r1, #0
   88afe:	4630      	mov	r0, r6
   88b00:	f7ff fea2 	bl	88848 <_sbrk_r>
   88b04:	68ba      	ldr	r2, [r7, #8]
   88b06:	1a83      	subs	r3, r0, r2
   88b08:	2b0f      	cmp	r3, #15
   88b0a:	ddde      	ble.n	88aca <_malloc_trim_r+0x3e>
   88b0c:	4c06      	ldr	r4, [pc, #24]	; (88b28 <_malloc_trim_r+0x9c>)
   88b0e:	4905      	ldr	r1, [pc, #20]	; (88b24 <_malloc_trim_r+0x98>)
   88b10:	6824      	ldr	r4, [r4, #0]
   88b12:	f043 0301 	orr.w	r3, r3, #1
   88b16:	1b00      	subs	r0, r0, r4
   88b18:	6053      	str	r3, [r2, #4]
   88b1a:	6008      	str	r0, [r1, #0]
   88b1c:	e7d5      	b.n	88aca <_malloc_trim_r+0x3e>
   88b1e:	bf00      	nop
   88b20:	200705d4 	.word	0x200705d4
   88b24:	20070df8 	.word	0x20070df8
   88b28:	200709dc 	.word	0x200709dc

00088b2c <_free_r>:
   88b2c:	2900      	cmp	r1, #0
   88b2e:	d044      	beq.n	88bba <_free_r+0x8e>
   88b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88b34:	460d      	mov	r5, r1
   88b36:	4680      	mov	r8, r0
   88b38:	f7ff fb7e 	bl	88238 <__malloc_lock>
   88b3c:	f855 7c04 	ldr.w	r7, [r5, #-4]
   88b40:	4969      	ldr	r1, [pc, #420]	; (88ce8 <_free_r+0x1bc>)
   88b42:	f1a5 0408 	sub.w	r4, r5, #8
   88b46:	f027 0301 	bic.w	r3, r7, #1
   88b4a:	18e2      	adds	r2, r4, r3
   88b4c:	688e      	ldr	r6, [r1, #8]
   88b4e:	6850      	ldr	r0, [r2, #4]
   88b50:	42b2      	cmp	r2, r6
   88b52:	f020 0003 	bic.w	r0, r0, #3
   88b56:	d05e      	beq.n	88c16 <_free_r+0xea>
   88b58:	07fe      	lsls	r6, r7, #31
   88b5a:	6050      	str	r0, [r2, #4]
   88b5c:	d40b      	bmi.n	88b76 <_free_r+0x4a>
   88b5e:	f855 7c08 	ldr.w	r7, [r5, #-8]
   88b62:	f101 0e08 	add.w	lr, r1, #8
   88b66:	1be4      	subs	r4, r4, r7
   88b68:	68a5      	ldr	r5, [r4, #8]
   88b6a:	443b      	add	r3, r7
   88b6c:	4575      	cmp	r5, lr
   88b6e:	d06d      	beq.n	88c4c <_free_r+0x120>
   88b70:	68e7      	ldr	r7, [r4, #12]
   88b72:	60ef      	str	r7, [r5, #12]
   88b74:	60bd      	str	r5, [r7, #8]
   88b76:	1815      	adds	r5, r2, r0
   88b78:	686d      	ldr	r5, [r5, #4]
   88b7a:	07ed      	lsls	r5, r5, #31
   88b7c:	d53e      	bpl.n	88bfc <_free_r+0xd0>
   88b7e:	f043 0201 	orr.w	r2, r3, #1
   88b82:	6062      	str	r2, [r4, #4]
   88b84:	50e3      	str	r3, [r4, r3]
   88b86:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   88b8a:	d217      	bcs.n	88bbc <_free_r+0x90>
   88b8c:	2201      	movs	r2, #1
   88b8e:	08db      	lsrs	r3, r3, #3
   88b90:	1098      	asrs	r0, r3, #2
   88b92:	684d      	ldr	r5, [r1, #4]
   88b94:	4413      	add	r3, r2
   88b96:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   88b9a:	4082      	lsls	r2, r0
   88b9c:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   88ba0:	432a      	orrs	r2, r5
   88ba2:	3808      	subs	r0, #8
   88ba4:	60e0      	str	r0, [r4, #12]
   88ba6:	60a7      	str	r7, [r4, #8]
   88ba8:	604a      	str	r2, [r1, #4]
   88baa:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   88bae:	60fc      	str	r4, [r7, #12]
   88bb0:	4640      	mov	r0, r8
   88bb2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   88bb6:	f7ff bb45 	b.w	88244 <__malloc_unlock>
   88bba:	4770      	bx	lr
   88bbc:	0a5a      	lsrs	r2, r3, #9
   88bbe:	2a04      	cmp	r2, #4
   88bc0:	d852      	bhi.n	88c68 <_free_r+0x13c>
   88bc2:	099a      	lsrs	r2, r3, #6
   88bc4:	f102 0739 	add.w	r7, r2, #57	; 0x39
   88bc8:	00ff      	lsls	r7, r7, #3
   88bca:	f102 0538 	add.w	r5, r2, #56	; 0x38
   88bce:	19c8      	adds	r0, r1, r7
   88bd0:	59ca      	ldr	r2, [r1, r7]
   88bd2:	3808      	subs	r0, #8
   88bd4:	4290      	cmp	r0, r2
   88bd6:	d04f      	beq.n	88c78 <_free_r+0x14c>
   88bd8:	6851      	ldr	r1, [r2, #4]
   88bda:	f021 0103 	bic.w	r1, r1, #3
   88bde:	428b      	cmp	r3, r1
   88be0:	d232      	bcs.n	88c48 <_free_r+0x11c>
   88be2:	6892      	ldr	r2, [r2, #8]
   88be4:	4290      	cmp	r0, r2
   88be6:	d1f7      	bne.n	88bd8 <_free_r+0xac>
   88be8:	68c3      	ldr	r3, [r0, #12]
   88bea:	60a0      	str	r0, [r4, #8]
   88bec:	60e3      	str	r3, [r4, #12]
   88bee:	609c      	str	r4, [r3, #8]
   88bf0:	60c4      	str	r4, [r0, #12]
   88bf2:	4640      	mov	r0, r8
   88bf4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   88bf8:	f7ff bb24 	b.w	88244 <__malloc_unlock>
   88bfc:	6895      	ldr	r5, [r2, #8]
   88bfe:	4f3b      	ldr	r7, [pc, #236]	; (88cec <_free_r+0x1c0>)
   88c00:	4403      	add	r3, r0
   88c02:	42bd      	cmp	r5, r7
   88c04:	d040      	beq.n	88c88 <_free_r+0x15c>
   88c06:	68d0      	ldr	r0, [r2, #12]
   88c08:	f043 0201 	orr.w	r2, r3, #1
   88c0c:	60e8      	str	r0, [r5, #12]
   88c0e:	6085      	str	r5, [r0, #8]
   88c10:	6062      	str	r2, [r4, #4]
   88c12:	50e3      	str	r3, [r4, r3]
   88c14:	e7b7      	b.n	88b86 <_free_r+0x5a>
   88c16:	07ff      	lsls	r7, r7, #31
   88c18:	4403      	add	r3, r0
   88c1a:	d407      	bmi.n	88c2c <_free_r+0x100>
   88c1c:	f855 5c08 	ldr.w	r5, [r5, #-8]
   88c20:	1b64      	subs	r4, r4, r5
   88c22:	68e2      	ldr	r2, [r4, #12]
   88c24:	68a0      	ldr	r0, [r4, #8]
   88c26:	442b      	add	r3, r5
   88c28:	60c2      	str	r2, [r0, #12]
   88c2a:	6090      	str	r0, [r2, #8]
   88c2c:	4a30      	ldr	r2, [pc, #192]	; (88cf0 <_free_r+0x1c4>)
   88c2e:	f043 0001 	orr.w	r0, r3, #1
   88c32:	6812      	ldr	r2, [r2, #0]
   88c34:	6060      	str	r0, [r4, #4]
   88c36:	4293      	cmp	r3, r2
   88c38:	608c      	str	r4, [r1, #8]
   88c3a:	d3b9      	bcc.n	88bb0 <_free_r+0x84>
   88c3c:	4b2d      	ldr	r3, [pc, #180]	; (88cf4 <_free_r+0x1c8>)
   88c3e:	4640      	mov	r0, r8
   88c40:	6819      	ldr	r1, [r3, #0]
   88c42:	f7ff ff23 	bl	88a8c <_malloc_trim_r>
   88c46:	e7b3      	b.n	88bb0 <_free_r+0x84>
   88c48:	4610      	mov	r0, r2
   88c4a:	e7cd      	b.n	88be8 <_free_r+0xbc>
   88c4c:	1811      	adds	r1, r2, r0
   88c4e:	6849      	ldr	r1, [r1, #4]
   88c50:	07c9      	lsls	r1, r1, #31
   88c52:	d444      	bmi.n	88cde <_free_r+0x1b2>
   88c54:	6891      	ldr	r1, [r2, #8]
   88c56:	4403      	add	r3, r0
   88c58:	68d2      	ldr	r2, [r2, #12]
   88c5a:	f043 0001 	orr.w	r0, r3, #1
   88c5e:	60ca      	str	r2, [r1, #12]
   88c60:	6091      	str	r1, [r2, #8]
   88c62:	6060      	str	r0, [r4, #4]
   88c64:	50e3      	str	r3, [r4, r3]
   88c66:	e7a3      	b.n	88bb0 <_free_r+0x84>
   88c68:	2a14      	cmp	r2, #20
   88c6a:	d816      	bhi.n	88c9a <_free_r+0x16e>
   88c6c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   88c70:	00ff      	lsls	r7, r7, #3
   88c72:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   88c76:	e7aa      	b.n	88bce <_free_r+0xa2>
   88c78:	2301      	movs	r3, #1
   88c7a:	10aa      	asrs	r2, r5, #2
   88c7c:	684d      	ldr	r5, [r1, #4]
   88c7e:	4093      	lsls	r3, r2
   88c80:	432b      	orrs	r3, r5
   88c82:	604b      	str	r3, [r1, #4]
   88c84:	4603      	mov	r3, r0
   88c86:	e7b0      	b.n	88bea <_free_r+0xbe>
   88c88:	f043 0201 	orr.w	r2, r3, #1
   88c8c:	614c      	str	r4, [r1, #20]
   88c8e:	610c      	str	r4, [r1, #16]
   88c90:	60e5      	str	r5, [r4, #12]
   88c92:	60a5      	str	r5, [r4, #8]
   88c94:	6062      	str	r2, [r4, #4]
   88c96:	50e3      	str	r3, [r4, r3]
   88c98:	e78a      	b.n	88bb0 <_free_r+0x84>
   88c9a:	2a54      	cmp	r2, #84	; 0x54
   88c9c:	d806      	bhi.n	88cac <_free_r+0x180>
   88c9e:	0b1a      	lsrs	r2, r3, #12
   88ca0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   88ca4:	00ff      	lsls	r7, r7, #3
   88ca6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   88caa:	e790      	b.n	88bce <_free_r+0xa2>
   88cac:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   88cb0:	d806      	bhi.n	88cc0 <_free_r+0x194>
   88cb2:	0bda      	lsrs	r2, r3, #15
   88cb4:	f102 0778 	add.w	r7, r2, #120	; 0x78
   88cb8:	00ff      	lsls	r7, r7, #3
   88cba:	f102 0577 	add.w	r5, r2, #119	; 0x77
   88cbe:	e786      	b.n	88bce <_free_r+0xa2>
   88cc0:	f240 5054 	movw	r0, #1364	; 0x554
   88cc4:	4282      	cmp	r2, r0
   88cc6:	d806      	bhi.n	88cd6 <_free_r+0x1aa>
   88cc8:	0c9a      	lsrs	r2, r3, #18
   88cca:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   88cce:	00ff      	lsls	r7, r7, #3
   88cd0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   88cd4:	e77b      	b.n	88bce <_free_r+0xa2>
   88cd6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   88cda:	257e      	movs	r5, #126	; 0x7e
   88cdc:	e777      	b.n	88bce <_free_r+0xa2>
   88cde:	f043 0101 	orr.w	r1, r3, #1
   88ce2:	6061      	str	r1, [r4, #4]
   88ce4:	6013      	str	r3, [r2, #0]
   88ce6:	e763      	b.n	88bb0 <_free_r+0x84>
   88ce8:	200705d4 	.word	0x200705d4
   88cec:	200705dc 	.word	0x200705dc
   88cf0:	200709e0 	.word	0x200709e0
   88cf4:	20070e28 	.word	0x20070e28

00088cf8 <__ascii_mbtowc>:
   88cf8:	b082      	sub	sp, #8
   88cfa:	b149      	cbz	r1, 88d10 <__ascii_mbtowc+0x18>
   88cfc:	b15a      	cbz	r2, 88d16 <__ascii_mbtowc+0x1e>
   88cfe:	b16b      	cbz	r3, 88d1c <__ascii_mbtowc+0x24>
   88d00:	7813      	ldrb	r3, [r2, #0]
   88d02:	600b      	str	r3, [r1, #0]
   88d04:	7812      	ldrb	r2, [r2, #0]
   88d06:	1c10      	adds	r0, r2, #0
   88d08:	bf18      	it	ne
   88d0a:	2001      	movne	r0, #1
   88d0c:	b002      	add	sp, #8
   88d0e:	4770      	bx	lr
   88d10:	a901      	add	r1, sp, #4
   88d12:	2a00      	cmp	r2, #0
   88d14:	d1f3      	bne.n	88cfe <__ascii_mbtowc+0x6>
   88d16:	4610      	mov	r0, r2
   88d18:	b002      	add	sp, #8
   88d1a:	4770      	bx	lr
   88d1c:	f06f 0001 	mvn.w	r0, #1
   88d20:	e7f4      	b.n	88d0c <__ascii_mbtowc+0x14>
   88d22:	bf00      	nop

00088d24 <memmove>:
   88d24:	4288      	cmp	r0, r1
   88d26:	b5f0      	push	{r4, r5, r6, r7, lr}
   88d28:	d90d      	bls.n	88d46 <memmove+0x22>
   88d2a:	188b      	adds	r3, r1, r2
   88d2c:	4298      	cmp	r0, r3
   88d2e:	d20a      	bcs.n	88d46 <memmove+0x22>
   88d30:	1884      	adds	r4, r0, r2
   88d32:	2a00      	cmp	r2, #0
   88d34:	d051      	beq.n	88dda <memmove+0xb6>
   88d36:	4622      	mov	r2, r4
   88d38:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   88d3c:	4299      	cmp	r1, r3
   88d3e:	f802 4d01 	strb.w	r4, [r2, #-1]!
   88d42:	d1f9      	bne.n	88d38 <memmove+0x14>
   88d44:	bdf0      	pop	{r4, r5, r6, r7, pc}
   88d46:	2a0f      	cmp	r2, #15
   88d48:	d948      	bls.n	88ddc <memmove+0xb8>
   88d4a:	ea41 0300 	orr.w	r3, r1, r0
   88d4e:	079b      	lsls	r3, r3, #30
   88d50:	d146      	bne.n	88de0 <memmove+0xbc>
   88d52:	4615      	mov	r5, r2
   88d54:	f100 0410 	add.w	r4, r0, #16
   88d58:	f101 0310 	add.w	r3, r1, #16
   88d5c:	f853 6c10 	ldr.w	r6, [r3, #-16]
   88d60:	3d10      	subs	r5, #16
   88d62:	f844 6c10 	str.w	r6, [r4, #-16]
   88d66:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   88d6a:	2d0f      	cmp	r5, #15
   88d6c:	f844 6c0c 	str.w	r6, [r4, #-12]
   88d70:	f853 6c08 	ldr.w	r6, [r3, #-8]
   88d74:	f104 0410 	add.w	r4, r4, #16
   88d78:	f844 6c18 	str.w	r6, [r4, #-24]
   88d7c:	f853 6c04 	ldr.w	r6, [r3, #-4]
   88d80:	f103 0310 	add.w	r3, r3, #16
   88d84:	f844 6c14 	str.w	r6, [r4, #-20]
   88d88:	d8e8      	bhi.n	88d5c <memmove+0x38>
   88d8a:	f1a2 0310 	sub.w	r3, r2, #16
   88d8e:	f023 030f 	bic.w	r3, r3, #15
   88d92:	f002 0e0f 	and.w	lr, r2, #15
   88d96:	3310      	adds	r3, #16
   88d98:	f1be 0f03 	cmp.w	lr, #3
   88d9c:	4419      	add	r1, r3
   88d9e:	4403      	add	r3, r0
   88da0:	d921      	bls.n	88de6 <memmove+0xc2>
   88da2:	460e      	mov	r6, r1
   88da4:	4674      	mov	r4, lr
   88da6:	1f1d      	subs	r5, r3, #4
   88da8:	f856 7b04 	ldr.w	r7, [r6], #4
   88dac:	3c04      	subs	r4, #4
   88dae:	2c03      	cmp	r4, #3
   88db0:	f845 7f04 	str.w	r7, [r5, #4]!
   88db4:	d8f8      	bhi.n	88da8 <memmove+0x84>
   88db6:	f1ae 0404 	sub.w	r4, lr, #4
   88dba:	f024 0403 	bic.w	r4, r4, #3
   88dbe:	3404      	adds	r4, #4
   88dc0:	4421      	add	r1, r4
   88dc2:	4423      	add	r3, r4
   88dc4:	f002 0203 	and.w	r2, r2, #3
   88dc8:	b162      	cbz	r2, 88de4 <memmove+0xc0>
   88dca:	3b01      	subs	r3, #1
   88dcc:	440a      	add	r2, r1
   88dce:	f811 4b01 	ldrb.w	r4, [r1], #1
   88dd2:	428a      	cmp	r2, r1
   88dd4:	f803 4f01 	strb.w	r4, [r3, #1]!
   88dd8:	d1f9      	bne.n	88dce <memmove+0xaa>
   88dda:	bdf0      	pop	{r4, r5, r6, r7, pc}
   88ddc:	4603      	mov	r3, r0
   88dde:	e7f3      	b.n	88dc8 <memmove+0xa4>
   88de0:	4603      	mov	r3, r0
   88de2:	e7f2      	b.n	88dca <memmove+0xa6>
   88de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   88de6:	4672      	mov	r2, lr
   88de8:	e7ee      	b.n	88dc8 <memmove+0xa4>
   88dea:	bf00      	nop

00088dec <_realloc_r>:
   88dec:	2900      	cmp	r1, #0
   88dee:	f000 8094 	beq.w	88f1a <_realloc_r+0x12e>
   88df2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88df6:	460c      	mov	r4, r1
   88df8:	4615      	mov	r5, r2
   88dfa:	b083      	sub	sp, #12
   88dfc:	4680      	mov	r8, r0
   88dfe:	f105 060b 	add.w	r6, r5, #11
   88e02:	f7ff fa19 	bl	88238 <__malloc_lock>
   88e06:	f854 ec04 	ldr.w	lr, [r4, #-4]
   88e0a:	2e16      	cmp	r6, #22
   88e0c:	f02e 0703 	bic.w	r7, lr, #3
   88e10:	f1a4 0908 	sub.w	r9, r4, #8
   88e14:	d83c      	bhi.n	88e90 <_realloc_r+0xa4>
   88e16:	2210      	movs	r2, #16
   88e18:	4616      	mov	r6, r2
   88e1a:	42b5      	cmp	r5, r6
   88e1c:	d83d      	bhi.n	88e9a <_realloc_r+0xae>
   88e1e:	4297      	cmp	r7, r2
   88e20:	da43      	bge.n	88eaa <_realloc_r+0xbe>
   88e22:	4bc6      	ldr	r3, [pc, #792]	; (8913c <_realloc_r+0x350>)
   88e24:	eb09 0007 	add.w	r0, r9, r7
   88e28:	6899      	ldr	r1, [r3, #8]
   88e2a:	4288      	cmp	r0, r1
   88e2c:	f000 80c3 	beq.w	88fb6 <_realloc_r+0x1ca>
   88e30:	6843      	ldr	r3, [r0, #4]
   88e32:	f023 0101 	bic.w	r1, r3, #1
   88e36:	4401      	add	r1, r0
   88e38:	6849      	ldr	r1, [r1, #4]
   88e3a:	07c9      	lsls	r1, r1, #31
   88e3c:	d54d      	bpl.n	88eda <_realloc_r+0xee>
   88e3e:	f01e 0f01 	tst.w	lr, #1
   88e42:	f000 809b 	beq.w	88f7c <_realloc_r+0x190>
   88e46:	4629      	mov	r1, r5
   88e48:	4640      	mov	r0, r8
   88e4a:	f7fe fe97 	bl	87b7c <_malloc_r>
   88e4e:	4605      	mov	r5, r0
   88e50:	2800      	cmp	r0, #0
   88e52:	d03b      	beq.n	88ecc <_realloc_r+0xe0>
   88e54:	f854 3c04 	ldr.w	r3, [r4, #-4]
   88e58:	f1a0 0208 	sub.w	r2, r0, #8
   88e5c:	f023 0301 	bic.w	r3, r3, #1
   88e60:	444b      	add	r3, r9
   88e62:	429a      	cmp	r2, r3
   88e64:	f000 812b 	beq.w	890be <_realloc_r+0x2d2>
   88e68:	1f3a      	subs	r2, r7, #4
   88e6a:	2a24      	cmp	r2, #36	; 0x24
   88e6c:	f200 8118 	bhi.w	890a0 <_realloc_r+0x2b4>
   88e70:	2a13      	cmp	r2, #19
   88e72:	f200 80eb 	bhi.w	8904c <_realloc_r+0x260>
   88e76:	4603      	mov	r3, r0
   88e78:	4622      	mov	r2, r4
   88e7a:	6811      	ldr	r1, [r2, #0]
   88e7c:	6019      	str	r1, [r3, #0]
   88e7e:	6851      	ldr	r1, [r2, #4]
   88e80:	6059      	str	r1, [r3, #4]
   88e82:	6892      	ldr	r2, [r2, #8]
   88e84:	609a      	str	r2, [r3, #8]
   88e86:	4621      	mov	r1, r4
   88e88:	4640      	mov	r0, r8
   88e8a:	f7ff fe4f 	bl	88b2c <_free_r>
   88e8e:	e01d      	b.n	88ecc <_realloc_r+0xe0>
   88e90:	f026 0607 	bic.w	r6, r6, #7
   88e94:	2e00      	cmp	r6, #0
   88e96:	4632      	mov	r2, r6
   88e98:	dabf      	bge.n	88e1a <_realloc_r+0x2e>
   88e9a:	2500      	movs	r5, #0
   88e9c:	230c      	movs	r3, #12
   88e9e:	4628      	mov	r0, r5
   88ea0:	f8c8 3000 	str.w	r3, [r8]
   88ea4:	b003      	add	sp, #12
   88ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88eaa:	4625      	mov	r5, r4
   88eac:	1bbb      	subs	r3, r7, r6
   88eae:	2b0f      	cmp	r3, #15
   88eb0:	f8d9 2004 	ldr.w	r2, [r9, #4]
   88eb4:	d81d      	bhi.n	88ef2 <_realloc_r+0x106>
   88eb6:	f002 0201 	and.w	r2, r2, #1
   88eba:	433a      	orrs	r2, r7
   88ebc:	eb09 0107 	add.w	r1, r9, r7
   88ec0:	f8c9 2004 	str.w	r2, [r9, #4]
   88ec4:	684b      	ldr	r3, [r1, #4]
   88ec6:	f043 0301 	orr.w	r3, r3, #1
   88eca:	604b      	str	r3, [r1, #4]
   88ecc:	4640      	mov	r0, r8
   88ece:	f7ff f9b9 	bl	88244 <__malloc_unlock>
   88ed2:	4628      	mov	r0, r5
   88ed4:	b003      	add	sp, #12
   88ed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88eda:	f023 0303 	bic.w	r3, r3, #3
   88ede:	18f9      	adds	r1, r7, r3
   88ee0:	4291      	cmp	r1, r2
   88ee2:	db1d      	blt.n	88f20 <_realloc_r+0x134>
   88ee4:	68c3      	ldr	r3, [r0, #12]
   88ee6:	6882      	ldr	r2, [r0, #8]
   88ee8:	4625      	mov	r5, r4
   88eea:	60d3      	str	r3, [r2, #12]
   88eec:	460f      	mov	r7, r1
   88eee:	609a      	str	r2, [r3, #8]
   88ef0:	e7dc      	b.n	88eac <_realloc_r+0xc0>
   88ef2:	f002 0201 	and.w	r2, r2, #1
   88ef6:	eb09 0106 	add.w	r1, r9, r6
   88efa:	f043 0301 	orr.w	r3, r3, #1
   88efe:	4332      	orrs	r2, r6
   88f00:	f8c9 2004 	str.w	r2, [r9, #4]
   88f04:	444f      	add	r7, r9
   88f06:	604b      	str	r3, [r1, #4]
   88f08:	687b      	ldr	r3, [r7, #4]
   88f0a:	3108      	adds	r1, #8
   88f0c:	f043 0301 	orr.w	r3, r3, #1
   88f10:	607b      	str	r3, [r7, #4]
   88f12:	4640      	mov	r0, r8
   88f14:	f7ff fe0a 	bl	88b2c <_free_r>
   88f18:	e7d8      	b.n	88ecc <_realloc_r+0xe0>
   88f1a:	4611      	mov	r1, r2
   88f1c:	f7fe be2e 	b.w	87b7c <_malloc_r>
   88f20:	f01e 0f01 	tst.w	lr, #1
   88f24:	d18f      	bne.n	88e46 <_realloc_r+0x5a>
   88f26:	f854 1c08 	ldr.w	r1, [r4, #-8]
   88f2a:	eba9 0a01 	sub.w	sl, r9, r1
   88f2e:	f8da 1004 	ldr.w	r1, [sl, #4]
   88f32:	f021 0103 	bic.w	r1, r1, #3
   88f36:	440b      	add	r3, r1
   88f38:	443b      	add	r3, r7
   88f3a:	4293      	cmp	r3, r2
   88f3c:	db26      	blt.n	88f8c <_realloc_r+0x1a0>
   88f3e:	4655      	mov	r5, sl
   88f40:	68c1      	ldr	r1, [r0, #12]
   88f42:	6880      	ldr	r0, [r0, #8]
   88f44:	1f3a      	subs	r2, r7, #4
   88f46:	60c1      	str	r1, [r0, #12]
   88f48:	6088      	str	r0, [r1, #8]
   88f4a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   88f4e:	f8da 100c 	ldr.w	r1, [sl, #12]
   88f52:	2a24      	cmp	r2, #36	; 0x24
   88f54:	60c1      	str	r1, [r0, #12]
   88f56:	6088      	str	r0, [r1, #8]
   88f58:	d826      	bhi.n	88fa8 <_realloc_r+0x1bc>
   88f5a:	2a13      	cmp	r2, #19
   88f5c:	f240 8081 	bls.w	89062 <_realloc_r+0x276>
   88f60:	6821      	ldr	r1, [r4, #0]
   88f62:	2a1b      	cmp	r2, #27
   88f64:	f8ca 1008 	str.w	r1, [sl, #8]
   88f68:	6861      	ldr	r1, [r4, #4]
   88f6a:	f8ca 100c 	str.w	r1, [sl, #12]
   88f6e:	f200 80ad 	bhi.w	890cc <_realloc_r+0x2e0>
   88f72:	f104 0008 	add.w	r0, r4, #8
   88f76:	f10a 0210 	add.w	r2, sl, #16
   88f7a:	e074      	b.n	89066 <_realloc_r+0x27a>
   88f7c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   88f80:	eba9 0a03 	sub.w	sl, r9, r3
   88f84:	f8da 1004 	ldr.w	r1, [sl, #4]
   88f88:	f021 0103 	bic.w	r1, r1, #3
   88f8c:	187b      	adds	r3, r7, r1
   88f8e:	4293      	cmp	r3, r2
   88f90:	f6ff af59 	blt.w	88e46 <_realloc_r+0x5a>
   88f94:	4655      	mov	r5, sl
   88f96:	f8da 100c 	ldr.w	r1, [sl, #12]
   88f9a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   88f9e:	1f3a      	subs	r2, r7, #4
   88fa0:	2a24      	cmp	r2, #36	; 0x24
   88fa2:	60c1      	str	r1, [r0, #12]
   88fa4:	6088      	str	r0, [r1, #8]
   88fa6:	d9d8      	bls.n	88f5a <_realloc_r+0x16e>
   88fa8:	4621      	mov	r1, r4
   88faa:	4628      	mov	r0, r5
   88fac:	461f      	mov	r7, r3
   88fae:	46d1      	mov	r9, sl
   88fb0:	f7ff feb8 	bl	88d24 <memmove>
   88fb4:	e77a      	b.n	88eac <_realloc_r+0xc0>
   88fb6:	6841      	ldr	r1, [r0, #4]
   88fb8:	f106 0010 	add.w	r0, r6, #16
   88fbc:	f021 0b03 	bic.w	fp, r1, #3
   88fc0:	44bb      	add	fp, r7
   88fc2:	4583      	cmp	fp, r0
   88fc4:	da58      	bge.n	89078 <_realloc_r+0x28c>
   88fc6:	f01e 0f01 	tst.w	lr, #1
   88fca:	f47f af3c 	bne.w	88e46 <_realloc_r+0x5a>
   88fce:	f854 1c08 	ldr.w	r1, [r4, #-8]
   88fd2:	eba9 0a01 	sub.w	sl, r9, r1
   88fd6:	f8da 1004 	ldr.w	r1, [sl, #4]
   88fda:	f021 0103 	bic.w	r1, r1, #3
   88fde:	448b      	add	fp, r1
   88fe0:	4558      	cmp	r0, fp
   88fe2:	dcd3      	bgt.n	88f8c <_realloc_r+0x1a0>
   88fe4:	4655      	mov	r5, sl
   88fe6:	f8da 100c 	ldr.w	r1, [sl, #12]
   88fea:	f855 0f08 	ldr.w	r0, [r5, #8]!
   88fee:	1f3a      	subs	r2, r7, #4
   88ff0:	2a24      	cmp	r2, #36	; 0x24
   88ff2:	60c1      	str	r1, [r0, #12]
   88ff4:	6088      	str	r0, [r1, #8]
   88ff6:	f200 808d 	bhi.w	89114 <_realloc_r+0x328>
   88ffa:	2a13      	cmp	r2, #19
   88ffc:	f240 8087 	bls.w	8910e <_realloc_r+0x322>
   89000:	6821      	ldr	r1, [r4, #0]
   89002:	2a1b      	cmp	r2, #27
   89004:	f8ca 1008 	str.w	r1, [sl, #8]
   89008:	6861      	ldr	r1, [r4, #4]
   8900a:	f8ca 100c 	str.w	r1, [sl, #12]
   8900e:	f200 8088 	bhi.w	89122 <_realloc_r+0x336>
   89012:	f104 0108 	add.w	r1, r4, #8
   89016:	f10a 0210 	add.w	r2, sl, #16
   8901a:	6808      	ldr	r0, [r1, #0]
   8901c:	6010      	str	r0, [r2, #0]
   8901e:	6848      	ldr	r0, [r1, #4]
   89020:	6050      	str	r0, [r2, #4]
   89022:	6889      	ldr	r1, [r1, #8]
   89024:	6091      	str	r1, [r2, #8]
   89026:	ebab 0206 	sub.w	r2, fp, r6
   8902a:	eb0a 0106 	add.w	r1, sl, r6
   8902e:	f042 0201 	orr.w	r2, r2, #1
   89032:	6099      	str	r1, [r3, #8]
   89034:	604a      	str	r2, [r1, #4]
   89036:	f8da 3004 	ldr.w	r3, [sl, #4]
   8903a:	4640      	mov	r0, r8
   8903c:	f003 0301 	and.w	r3, r3, #1
   89040:	431e      	orrs	r6, r3
   89042:	f8ca 6004 	str.w	r6, [sl, #4]
   89046:	f7ff f8fd 	bl	88244 <__malloc_unlock>
   8904a:	e742      	b.n	88ed2 <_realloc_r+0xe6>
   8904c:	6823      	ldr	r3, [r4, #0]
   8904e:	2a1b      	cmp	r2, #27
   89050:	6003      	str	r3, [r0, #0]
   89052:	6863      	ldr	r3, [r4, #4]
   89054:	6043      	str	r3, [r0, #4]
   89056:	d827      	bhi.n	890a8 <_realloc_r+0x2bc>
   89058:	f100 0308 	add.w	r3, r0, #8
   8905c:	f104 0208 	add.w	r2, r4, #8
   89060:	e70b      	b.n	88e7a <_realloc_r+0x8e>
   89062:	4620      	mov	r0, r4
   89064:	462a      	mov	r2, r5
   89066:	6801      	ldr	r1, [r0, #0]
   89068:	461f      	mov	r7, r3
   8906a:	6011      	str	r1, [r2, #0]
   8906c:	6841      	ldr	r1, [r0, #4]
   8906e:	46d1      	mov	r9, sl
   89070:	6051      	str	r1, [r2, #4]
   89072:	6883      	ldr	r3, [r0, #8]
   89074:	6093      	str	r3, [r2, #8]
   89076:	e719      	b.n	88eac <_realloc_r+0xc0>
   89078:	ebab 0b06 	sub.w	fp, fp, r6
   8907c:	eb09 0106 	add.w	r1, r9, r6
   89080:	f04b 0201 	orr.w	r2, fp, #1
   89084:	6099      	str	r1, [r3, #8]
   89086:	604a      	str	r2, [r1, #4]
   89088:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8908c:	4640      	mov	r0, r8
   8908e:	f003 0301 	and.w	r3, r3, #1
   89092:	431e      	orrs	r6, r3
   89094:	f844 6c04 	str.w	r6, [r4, #-4]
   89098:	f7ff f8d4 	bl	88244 <__malloc_unlock>
   8909c:	4625      	mov	r5, r4
   8909e:	e718      	b.n	88ed2 <_realloc_r+0xe6>
   890a0:	4621      	mov	r1, r4
   890a2:	f7ff fe3f 	bl	88d24 <memmove>
   890a6:	e6ee      	b.n	88e86 <_realloc_r+0x9a>
   890a8:	68a3      	ldr	r3, [r4, #8]
   890aa:	2a24      	cmp	r2, #36	; 0x24
   890ac:	6083      	str	r3, [r0, #8]
   890ae:	68e3      	ldr	r3, [r4, #12]
   890b0:	60c3      	str	r3, [r0, #12]
   890b2:	d018      	beq.n	890e6 <_realloc_r+0x2fa>
   890b4:	f100 0310 	add.w	r3, r0, #16
   890b8:	f104 0210 	add.w	r2, r4, #16
   890bc:	e6dd      	b.n	88e7a <_realloc_r+0x8e>
   890be:	f850 3c04 	ldr.w	r3, [r0, #-4]
   890c2:	4625      	mov	r5, r4
   890c4:	f023 0303 	bic.w	r3, r3, #3
   890c8:	441f      	add	r7, r3
   890ca:	e6ef      	b.n	88eac <_realloc_r+0xc0>
   890cc:	68a1      	ldr	r1, [r4, #8]
   890ce:	2a24      	cmp	r2, #36	; 0x24
   890d0:	f8ca 1010 	str.w	r1, [sl, #16]
   890d4:	68e1      	ldr	r1, [r4, #12]
   890d6:	f8ca 1014 	str.w	r1, [sl, #20]
   890da:	d00d      	beq.n	890f8 <_realloc_r+0x30c>
   890dc:	f104 0010 	add.w	r0, r4, #16
   890e0:	f10a 0218 	add.w	r2, sl, #24
   890e4:	e7bf      	b.n	89066 <_realloc_r+0x27a>
   890e6:	6922      	ldr	r2, [r4, #16]
   890e8:	f100 0318 	add.w	r3, r0, #24
   890ec:	6102      	str	r2, [r0, #16]
   890ee:	6961      	ldr	r1, [r4, #20]
   890f0:	f104 0218 	add.w	r2, r4, #24
   890f4:	6141      	str	r1, [r0, #20]
   890f6:	e6c0      	b.n	88e7a <_realloc_r+0x8e>
   890f8:	6922      	ldr	r2, [r4, #16]
   890fa:	f104 0018 	add.w	r0, r4, #24
   890fe:	f8ca 2018 	str.w	r2, [sl, #24]
   89102:	6961      	ldr	r1, [r4, #20]
   89104:	f10a 0220 	add.w	r2, sl, #32
   89108:	f8ca 101c 	str.w	r1, [sl, #28]
   8910c:	e7ab      	b.n	89066 <_realloc_r+0x27a>
   8910e:	4621      	mov	r1, r4
   89110:	462a      	mov	r2, r5
   89112:	e782      	b.n	8901a <_realloc_r+0x22e>
   89114:	4621      	mov	r1, r4
   89116:	4628      	mov	r0, r5
   89118:	9301      	str	r3, [sp, #4]
   8911a:	f7ff fe03 	bl	88d24 <memmove>
   8911e:	9b01      	ldr	r3, [sp, #4]
   89120:	e781      	b.n	89026 <_realloc_r+0x23a>
   89122:	68a1      	ldr	r1, [r4, #8]
   89124:	2a24      	cmp	r2, #36	; 0x24
   89126:	f8ca 1010 	str.w	r1, [sl, #16]
   8912a:	68e1      	ldr	r1, [r4, #12]
   8912c:	f8ca 1014 	str.w	r1, [sl, #20]
   89130:	d006      	beq.n	89140 <_realloc_r+0x354>
   89132:	f104 0110 	add.w	r1, r4, #16
   89136:	f10a 0218 	add.w	r2, sl, #24
   8913a:	e76e      	b.n	8901a <_realloc_r+0x22e>
   8913c:	200705d4 	.word	0x200705d4
   89140:	6922      	ldr	r2, [r4, #16]
   89142:	f104 0118 	add.w	r1, r4, #24
   89146:	f8ca 2018 	str.w	r2, [sl, #24]
   8914a:	6960      	ldr	r0, [r4, #20]
   8914c:	f10a 0220 	add.w	r2, sl, #32
   89150:	f8ca 001c 	str.w	r0, [sl, #28]
   89154:	e761      	b.n	8901a <_realloc_r+0x22e>
   89156:	bf00      	nop

00089158 <__ascii_wctomb>:
   89158:	b119      	cbz	r1, 89162 <__ascii_wctomb+0xa>
   8915a:	2aff      	cmp	r2, #255	; 0xff
   8915c:	d803      	bhi.n	89166 <__ascii_wctomb+0xe>
   8915e:	700a      	strb	r2, [r1, #0]
   89160:	2101      	movs	r1, #1
   89162:	4608      	mov	r0, r1
   89164:	4770      	bx	lr
   89166:	238a      	movs	r3, #138	; 0x8a
   89168:	f04f 31ff 	mov.w	r1, #4294967295
   8916c:	6003      	str	r3, [r0, #0]
   8916e:	e7f8      	b.n	89162 <__ascii_wctomb+0xa>

00089170 <__gedf2>:
   89170:	f04f 3cff 	mov.w	ip, #4294967295
   89174:	e006      	b.n	89184 <__cmpdf2+0x4>
   89176:	bf00      	nop

00089178 <__ledf2>:
   89178:	f04f 0c01 	mov.w	ip, #1
   8917c:	e002      	b.n	89184 <__cmpdf2+0x4>
   8917e:	bf00      	nop

00089180 <__cmpdf2>:
   89180:	f04f 0c01 	mov.w	ip, #1
   89184:	f84d cd04 	str.w	ip, [sp, #-4]!
   89188:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8918c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89190:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89194:	bf18      	it	ne
   89196:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8919a:	d01b      	beq.n	891d4 <__cmpdf2+0x54>
   8919c:	b001      	add	sp, #4
   8919e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   891a2:	bf0c      	ite	eq
   891a4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   891a8:	ea91 0f03 	teqne	r1, r3
   891ac:	bf02      	ittt	eq
   891ae:	ea90 0f02 	teqeq	r0, r2
   891b2:	2000      	moveq	r0, #0
   891b4:	4770      	bxeq	lr
   891b6:	f110 0f00 	cmn.w	r0, #0
   891ba:	ea91 0f03 	teq	r1, r3
   891be:	bf58      	it	pl
   891c0:	4299      	cmppl	r1, r3
   891c2:	bf08      	it	eq
   891c4:	4290      	cmpeq	r0, r2
   891c6:	bf2c      	ite	cs
   891c8:	17d8      	asrcs	r0, r3, #31
   891ca:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   891ce:	f040 0001 	orr.w	r0, r0, #1
   891d2:	4770      	bx	lr
   891d4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   891d8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   891dc:	d102      	bne.n	891e4 <__cmpdf2+0x64>
   891de:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   891e2:	d107      	bne.n	891f4 <__cmpdf2+0x74>
   891e4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   891e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   891ec:	d1d6      	bne.n	8919c <__cmpdf2+0x1c>
   891ee:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   891f2:	d0d3      	beq.n	8919c <__cmpdf2+0x1c>
   891f4:	f85d 0b04 	ldr.w	r0, [sp], #4
   891f8:	4770      	bx	lr
   891fa:	bf00      	nop

000891fc <__aeabi_cdrcmple>:
   891fc:	4684      	mov	ip, r0
   891fe:	4610      	mov	r0, r2
   89200:	4662      	mov	r2, ip
   89202:	468c      	mov	ip, r1
   89204:	4619      	mov	r1, r3
   89206:	4663      	mov	r3, ip
   89208:	e000      	b.n	8920c <__aeabi_cdcmpeq>
   8920a:	bf00      	nop

0008920c <__aeabi_cdcmpeq>:
   8920c:	b501      	push	{r0, lr}
   8920e:	f7ff ffb7 	bl	89180 <__cmpdf2>
   89212:	2800      	cmp	r0, #0
   89214:	bf48      	it	mi
   89216:	f110 0f00 	cmnmi.w	r0, #0
   8921a:	bd01      	pop	{r0, pc}

0008921c <__aeabi_dcmpeq>:
   8921c:	f84d ed08 	str.w	lr, [sp, #-8]!
   89220:	f7ff fff4 	bl	8920c <__aeabi_cdcmpeq>
   89224:	bf0c      	ite	eq
   89226:	2001      	moveq	r0, #1
   89228:	2000      	movne	r0, #0
   8922a:	f85d fb08 	ldr.w	pc, [sp], #8
   8922e:	bf00      	nop

00089230 <__aeabi_dcmplt>:
   89230:	f84d ed08 	str.w	lr, [sp, #-8]!
   89234:	f7ff ffea 	bl	8920c <__aeabi_cdcmpeq>
   89238:	bf34      	ite	cc
   8923a:	2001      	movcc	r0, #1
   8923c:	2000      	movcs	r0, #0
   8923e:	f85d fb08 	ldr.w	pc, [sp], #8
   89242:	bf00      	nop

00089244 <__aeabi_dcmple>:
   89244:	f84d ed08 	str.w	lr, [sp, #-8]!
   89248:	f7ff ffe0 	bl	8920c <__aeabi_cdcmpeq>
   8924c:	bf94      	ite	ls
   8924e:	2001      	movls	r0, #1
   89250:	2000      	movhi	r0, #0
   89252:	f85d fb08 	ldr.w	pc, [sp], #8
   89256:	bf00      	nop

00089258 <__aeabi_dcmpge>:
   89258:	f84d ed08 	str.w	lr, [sp, #-8]!
   8925c:	f7ff ffce 	bl	891fc <__aeabi_cdrcmple>
   89260:	bf94      	ite	ls
   89262:	2001      	movls	r0, #1
   89264:	2000      	movhi	r0, #0
   89266:	f85d fb08 	ldr.w	pc, [sp], #8
   8926a:	bf00      	nop

0008926c <__aeabi_dcmpgt>:
   8926c:	f84d ed08 	str.w	lr, [sp, #-8]!
   89270:	f7ff ffc4 	bl	891fc <__aeabi_cdrcmple>
   89274:	bf34      	ite	cc
   89276:	2001      	movcc	r0, #1
   89278:	2000      	movcs	r0, #0
   8927a:	f85d fb08 	ldr.w	pc, [sp], #8
   8927e:	bf00      	nop

00089280 <__aeabi_dcmpun>:
   89280:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   89284:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89288:	d102      	bne.n	89290 <__aeabi_dcmpun+0x10>
   8928a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8928e:	d10a      	bne.n	892a6 <__aeabi_dcmpun+0x26>
   89290:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89294:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89298:	d102      	bne.n	892a0 <__aeabi_dcmpun+0x20>
   8929a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8929e:	d102      	bne.n	892a6 <__aeabi_dcmpun+0x26>
   892a0:	f04f 0000 	mov.w	r0, #0
   892a4:	4770      	bx	lr
   892a6:	f04f 0001 	mov.w	r0, #1
   892aa:	4770      	bx	lr

000892ac <__aeabi_d2iz>:
   892ac:	ea4f 0241 	mov.w	r2, r1, lsl #1
   892b0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   892b4:	d215      	bcs.n	892e2 <__aeabi_d2iz+0x36>
   892b6:	d511      	bpl.n	892dc <__aeabi_d2iz+0x30>
   892b8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   892bc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   892c0:	d912      	bls.n	892e8 <__aeabi_d2iz+0x3c>
   892c2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   892c6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   892ca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   892ce:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   892d2:	fa23 f002 	lsr.w	r0, r3, r2
   892d6:	bf18      	it	ne
   892d8:	4240      	negne	r0, r0
   892da:	4770      	bx	lr
   892dc:	f04f 0000 	mov.w	r0, #0
   892e0:	4770      	bx	lr
   892e2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   892e6:	d105      	bne.n	892f4 <__aeabi_d2iz+0x48>
   892e8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   892ec:	bf08      	it	eq
   892ee:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   892f2:	4770      	bx	lr
   892f4:	f04f 0000 	mov.w	r0, #0
   892f8:	4770      	bx	lr
   892fa:	bf00      	nop

000892fc <__aeabi_uldivmod>:
   892fc:	b953      	cbnz	r3, 89314 <__aeabi_uldivmod+0x18>
   892fe:	b94a      	cbnz	r2, 89314 <__aeabi_uldivmod+0x18>
   89300:	2900      	cmp	r1, #0
   89302:	bf08      	it	eq
   89304:	2800      	cmpeq	r0, #0
   89306:	bf1c      	itt	ne
   89308:	f04f 31ff 	movne.w	r1, #4294967295
   8930c:	f04f 30ff 	movne.w	r0, #4294967295
   89310:	f000 b97a 	b.w	89608 <__aeabi_idiv0>
   89314:	f1ad 0c08 	sub.w	ip, sp, #8
   89318:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   8931c:	f000 f806 	bl	8932c <__udivmoddi4>
   89320:	f8dd e004 	ldr.w	lr, [sp, #4]
   89324:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   89328:	b004      	add	sp, #16
   8932a:	4770      	bx	lr

0008932c <__udivmoddi4>:
   8932c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   89330:	468c      	mov	ip, r1
   89332:	460e      	mov	r6, r1
   89334:	4604      	mov	r4, r0
   89336:	9d08      	ldr	r5, [sp, #32]
   89338:	2b00      	cmp	r3, #0
   8933a:	d150      	bne.n	893de <__udivmoddi4+0xb2>
   8933c:	428a      	cmp	r2, r1
   8933e:	4617      	mov	r7, r2
   89340:	d96c      	bls.n	8941c <__udivmoddi4+0xf0>
   89342:	fab2 fe82 	clz	lr, r2
   89346:	f1be 0f00 	cmp.w	lr, #0
   8934a:	d00b      	beq.n	89364 <__udivmoddi4+0x38>
   8934c:	f1ce 0c20 	rsb	ip, lr, #32
   89350:	fa01 f60e 	lsl.w	r6, r1, lr
   89354:	fa20 fc0c 	lsr.w	ip, r0, ip
   89358:	fa02 f70e 	lsl.w	r7, r2, lr
   8935c:	ea4c 0c06 	orr.w	ip, ip, r6
   89360:	fa00 f40e 	lsl.w	r4, r0, lr
   89364:	0c3a      	lsrs	r2, r7, #16
   89366:	fbbc f9f2 	udiv	r9, ip, r2
   8936a:	b2bb      	uxth	r3, r7
   8936c:	fb02 cc19 	mls	ip, r2, r9, ip
   89370:	fb09 fa03 	mul.w	sl, r9, r3
   89374:	ea4f 4814 	mov.w	r8, r4, lsr #16
   89378:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   8937c:	45b2      	cmp	sl, r6
   8937e:	d90a      	bls.n	89396 <__udivmoddi4+0x6a>
   89380:	19f6      	adds	r6, r6, r7
   89382:	f109 31ff 	add.w	r1, r9, #4294967295
   89386:	f080 8125 	bcs.w	895d4 <__udivmoddi4+0x2a8>
   8938a:	45b2      	cmp	sl, r6
   8938c:	f240 8122 	bls.w	895d4 <__udivmoddi4+0x2a8>
   89390:	f1a9 0902 	sub.w	r9, r9, #2
   89394:	443e      	add	r6, r7
   89396:	eba6 060a 	sub.w	r6, r6, sl
   8939a:	fbb6 f0f2 	udiv	r0, r6, r2
   8939e:	fb02 6610 	mls	r6, r2, r0, r6
   893a2:	fb00 f303 	mul.w	r3, r0, r3
   893a6:	b2a4      	uxth	r4, r4
   893a8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   893ac:	42a3      	cmp	r3, r4
   893ae:	d909      	bls.n	893c4 <__udivmoddi4+0x98>
   893b0:	19e4      	adds	r4, r4, r7
   893b2:	f100 32ff 	add.w	r2, r0, #4294967295
   893b6:	f080 810b 	bcs.w	895d0 <__udivmoddi4+0x2a4>
   893ba:	42a3      	cmp	r3, r4
   893bc:	f240 8108 	bls.w	895d0 <__udivmoddi4+0x2a4>
   893c0:	3802      	subs	r0, #2
   893c2:	443c      	add	r4, r7
   893c4:	2100      	movs	r1, #0
   893c6:	1ae4      	subs	r4, r4, r3
   893c8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   893cc:	2d00      	cmp	r5, #0
   893ce:	d062      	beq.n	89496 <__udivmoddi4+0x16a>
   893d0:	2300      	movs	r3, #0
   893d2:	fa24 f40e 	lsr.w	r4, r4, lr
   893d6:	602c      	str	r4, [r5, #0]
   893d8:	606b      	str	r3, [r5, #4]
   893da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   893de:	428b      	cmp	r3, r1
   893e0:	d907      	bls.n	893f2 <__udivmoddi4+0xc6>
   893e2:	2d00      	cmp	r5, #0
   893e4:	d055      	beq.n	89492 <__udivmoddi4+0x166>
   893e6:	2100      	movs	r1, #0
   893e8:	e885 0041 	stmia.w	r5, {r0, r6}
   893ec:	4608      	mov	r0, r1
   893ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   893f2:	fab3 f183 	clz	r1, r3
   893f6:	2900      	cmp	r1, #0
   893f8:	f040 808f 	bne.w	8951a <__udivmoddi4+0x1ee>
   893fc:	42b3      	cmp	r3, r6
   893fe:	d302      	bcc.n	89406 <__udivmoddi4+0xda>
   89400:	4282      	cmp	r2, r0
   89402:	f200 80fc 	bhi.w	895fe <__udivmoddi4+0x2d2>
   89406:	1a84      	subs	r4, r0, r2
   89408:	eb66 0603 	sbc.w	r6, r6, r3
   8940c:	2001      	movs	r0, #1
   8940e:	46b4      	mov	ip, r6
   89410:	2d00      	cmp	r5, #0
   89412:	d040      	beq.n	89496 <__udivmoddi4+0x16a>
   89414:	e885 1010 	stmia.w	r5, {r4, ip}
   89418:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8941c:	b912      	cbnz	r2, 89424 <__udivmoddi4+0xf8>
   8941e:	2701      	movs	r7, #1
   89420:	fbb7 f7f2 	udiv	r7, r7, r2
   89424:	fab7 fe87 	clz	lr, r7
   89428:	f1be 0f00 	cmp.w	lr, #0
   8942c:	d135      	bne.n	8949a <__udivmoddi4+0x16e>
   8942e:	2101      	movs	r1, #1
   89430:	1bf6      	subs	r6, r6, r7
   89432:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   89436:	fa1f f887 	uxth.w	r8, r7
   8943a:	fbb6 f2fc 	udiv	r2, r6, ip
   8943e:	fb0c 6612 	mls	r6, ip, r2, r6
   89442:	fb08 f002 	mul.w	r0, r8, r2
   89446:	0c23      	lsrs	r3, r4, #16
   89448:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   8944c:	42b0      	cmp	r0, r6
   8944e:	d907      	bls.n	89460 <__udivmoddi4+0x134>
   89450:	19f6      	adds	r6, r6, r7
   89452:	f102 33ff 	add.w	r3, r2, #4294967295
   89456:	d202      	bcs.n	8945e <__udivmoddi4+0x132>
   89458:	42b0      	cmp	r0, r6
   8945a:	f200 80d2 	bhi.w	89602 <__udivmoddi4+0x2d6>
   8945e:	461a      	mov	r2, r3
   89460:	1a36      	subs	r6, r6, r0
   89462:	fbb6 f0fc 	udiv	r0, r6, ip
   89466:	fb0c 6610 	mls	r6, ip, r0, r6
   8946a:	fb08 f800 	mul.w	r8, r8, r0
   8946e:	b2a3      	uxth	r3, r4
   89470:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   89474:	45a0      	cmp	r8, r4
   89476:	d907      	bls.n	89488 <__udivmoddi4+0x15c>
   89478:	19e4      	adds	r4, r4, r7
   8947a:	f100 33ff 	add.w	r3, r0, #4294967295
   8947e:	d202      	bcs.n	89486 <__udivmoddi4+0x15a>
   89480:	45a0      	cmp	r8, r4
   89482:	f200 80b9 	bhi.w	895f8 <__udivmoddi4+0x2cc>
   89486:	4618      	mov	r0, r3
   89488:	eba4 0408 	sub.w	r4, r4, r8
   8948c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   89490:	e79c      	b.n	893cc <__udivmoddi4+0xa0>
   89492:	4629      	mov	r1, r5
   89494:	4628      	mov	r0, r5
   89496:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8949a:	fa07 f70e 	lsl.w	r7, r7, lr
   8949e:	f1ce 0320 	rsb	r3, lr, #32
   894a2:	fa26 f203 	lsr.w	r2, r6, r3
   894a6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   894aa:	fbb2 f1fc 	udiv	r1, r2, ip
   894ae:	fa1f f887 	uxth.w	r8, r7
   894b2:	fb0c 2211 	mls	r2, ip, r1, r2
   894b6:	fa06 f60e 	lsl.w	r6, r6, lr
   894ba:	fa20 f303 	lsr.w	r3, r0, r3
   894be:	fb01 f908 	mul.w	r9, r1, r8
   894c2:	4333      	orrs	r3, r6
   894c4:	0c1e      	lsrs	r6, r3, #16
   894c6:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   894ca:	45b1      	cmp	r9, r6
   894cc:	fa00 f40e 	lsl.w	r4, r0, lr
   894d0:	d909      	bls.n	894e6 <__udivmoddi4+0x1ba>
   894d2:	19f6      	adds	r6, r6, r7
   894d4:	f101 32ff 	add.w	r2, r1, #4294967295
   894d8:	f080 808c 	bcs.w	895f4 <__udivmoddi4+0x2c8>
   894dc:	45b1      	cmp	r9, r6
   894de:	f240 8089 	bls.w	895f4 <__udivmoddi4+0x2c8>
   894e2:	3902      	subs	r1, #2
   894e4:	443e      	add	r6, r7
   894e6:	eba6 0609 	sub.w	r6, r6, r9
   894ea:	fbb6 f0fc 	udiv	r0, r6, ip
   894ee:	fb0c 6210 	mls	r2, ip, r0, r6
   894f2:	fb00 f908 	mul.w	r9, r0, r8
   894f6:	b29e      	uxth	r6, r3
   894f8:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   894fc:	45b1      	cmp	r9, r6
   894fe:	d907      	bls.n	89510 <__udivmoddi4+0x1e4>
   89500:	19f6      	adds	r6, r6, r7
   89502:	f100 33ff 	add.w	r3, r0, #4294967295
   89506:	d271      	bcs.n	895ec <__udivmoddi4+0x2c0>
   89508:	45b1      	cmp	r9, r6
   8950a:	d96f      	bls.n	895ec <__udivmoddi4+0x2c0>
   8950c:	3802      	subs	r0, #2
   8950e:	443e      	add	r6, r7
   89510:	eba6 0609 	sub.w	r6, r6, r9
   89514:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   89518:	e78f      	b.n	8943a <__udivmoddi4+0x10e>
   8951a:	f1c1 0720 	rsb	r7, r1, #32
   8951e:	fa22 f807 	lsr.w	r8, r2, r7
   89522:	408b      	lsls	r3, r1
   89524:	ea48 0303 	orr.w	r3, r8, r3
   89528:	fa26 f407 	lsr.w	r4, r6, r7
   8952c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   89530:	fbb4 f9fe 	udiv	r9, r4, lr
   89534:	fa1f fc83 	uxth.w	ip, r3
   89538:	fb0e 4419 	mls	r4, lr, r9, r4
   8953c:	408e      	lsls	r6, r1
   8953e:	fa20 f807 	lsr.w	r8, r0, r7
   89542:	fb09 fa0c 	mul.w	sl, r9, ip
   89546:	ea48 0806 	orr.w	r8, r8, r6
   8954a:	ea4f 4618 	mov.w	r6, r8, lsr #16
   8954e:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   89552:	45a2      	cmp	sl, r4
   89554:	fa02 f201 	lsl.w	r2, r2, r1
   89558:	fa00 f601 	lsl.w	r6, r0, r1
   8955c:	d908      	bls.n	89570 <__udivmoddi4+0x244>
   8955e:	18e4      	adds	r4, r4, r3
   89560:	f109 30ff 	add.w	r0, r9, #4294967295
   89564:	d244      	bcs.n	895f0 <__udivmoddi4+0x2c4>
   89566:	45a2      	cmp	sl, r4
   89568:	d942      	bls.n	895f0 <__udivmoddi4+0x2c4>
   8956a:	f1a9 0902 	sub.w	r9, r9, #2
   8956e:	441c      	add	r4, r3
   89570:	eba4 040a 	sub.w	r4, r4, sl
   89574:	fbb4 f0fe 	udiv	r0, r4, lr
   89578:	fb0e 4410 	mls	r4, lr, r0, r4
   8957c:	fb00 fc0c 	mul.w	ip, r0, ip
   89580:	fa1f f888 	uxth.w	r8, r8
   89584:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   89588:	45a4      	cmp	ip, r4
   8958a:	d907      	bls.n	8959c <__udivmoddi4+0x270>
   8958c:	18e4      	adds	r4, r4, r3
   8958e:	f100 3eff 	add.w	lr, r0, #4294967295
   89592:	d229      	bcs.n	895e8 <__udivmoddi4+0x2bc>
   89594:	45a4      	cmp	ip, r4
   89596:	d927      	bls.n	895e8 <__udivmoddi4+0x2bc>
   89598:	3802      	subs	r0, #2
   8959a:	441c      	add	r4, r3
   8959c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   895a0:	fba0 8902 	umull	r8, r9, r0, r2
   895a4:	eba4 0c0c 	sub.w	ip, r4, ip
   895a8:	45cc      	cmp	ip, r9
   895aa:	46c2      	mov	sl, r8
   895ac:	46ce      	mov	lr, r9
   895ae:	d315      	bcc.n	895dc <__udivmoddi4+0x2b0>
   895b0:	d012      	beq.n	895d8 <__udivmoddi4+0x2ac>
   895b2:	b155      	cbz	r5, 895ca <__udivmoddi4+0x29e>
   895b4:	ebb6 030a 	subs.w	r3, r6, sl
   895b8:	eb6c 060e 	sbc.w	r6, ip, lr
   895bc:	fa06 f707 	lsl.w	r7, r6, r7
   895c0:	40cb      	lsrs	r3, r1
   895c2:	431f      	orrs	r7, r3
   895c4:	40ce      	lsrs	r6, r1
   895c6:	602f      	str	r7, [r5, #0]
   895c8:	606e      	str	r6, [r5, #4]
   895ca:	2100      	movs	r1, #0
   895cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   895d0:	4610      	mov	r0, r2
   895d2:	e6f7      	b.n	893c4 <__udivmoddi4+0x98>
   895d4:	4689      	mov	r9, r1
   895d6:	e6de      	b.n	89396 <__udivmoddi4+0x6a>
   895d8:	4546      	cmp	r6, r8
   895da:	d2ea      	bcs.n	895b2 <__udivmoddi4+0x286>
   895dc:	ebb8 0a02 	subs.w	sl, r8, r2
   895e0:	eb69 0e03 	sbc.w	lr, r9, r3
   895e4:	3801      	subs	r0, #1
   895e6:	e7e4      	b.n	895b2 <__udivmoddi4+0x286>
   895e8:	4670      	mov	r0, lr
   895ea:	e7d7      	b.n	8959c <__udivmoddi4+0x270>
   895ec:	4618      	mov	r0, r3
   895ee:	e78f      	b.n	89510 <__udivmoddi4+0x1e4>
   895f0:	4681      	mov	r9, r0
   895f2:	e7bd      	b.n	89570 <__udivmoddi4+0x244>
   895f4:	4611      	mov	r1, r2
   895f6:	e776      	b.n	894e6 <__udivmoddi4+0x1ba>
   895f8:	3802      	subs	r0, #2
   895fa:	443c      	add	r4, r7
   895fc:	e744      	b.n	89488 <__udivmoddi4+0x15c>
   895fe:	4608      	mov	r0, r1
   89600:	e706      	b.n	89410 <__udivmoddi4+0xe4>
   89602:	3a02      	subs	r2, #2
   89604:	443e      	add	r6, r7
   89606:	e72b      	b.n	89460 <__udivmoddi4+0x134>

00089608 <__aeabi_idiv0>:
   89608:	4770      	bx	lr
   8960a:	bf00      	nop
   8960c:	00000001 	.word	0x00000001
   89610:	00000002 	.word	0x00000002
   89614:	00000004 	.word	0x00000004
   89618:	00000008 	.word	0x00000008
   8961c:	00000010 	.word	0x00000010
   89620:	00000020 	.word	0x00000020
   89624:	00000040 	.word	0x00000040
   89628:	00000080 	.word	0x00000080
   8962c:	00000100 	.word	0x00000100
   89630:	00000200 	.word	0x00000200
   89634:	00000400 	.word	0x00000400
   89638:	000f4240 	.word	0x000f4240
   8963c:	000000c0 	.word	0x000000c0
	...
   89648:	69442020 	.word	0x69442020
   8964c:	74636572 	.word	0x74636572
   89650:	3a6e6f69 	.word	0x3a6e6f69
   89654:	2e332520 	.word	0x2e332520
   89658:	20206631 	.word	0x20206631
   8965c:	00000000 	.word	0x00000000
   89660:	696c6163 	.word	0x696c6163
   89664:	74617262 	.word	0x74617262
   89668:	6f632065 	.word	0x6f632065
   8966c:	7361706d 	.word	0x7361706d
   89670:	00000073 	.word	0x00000073
   89674:	69442020 	.word	0x69442020
   89678:	74636572 	.word	0x74636572
   8967c:	3a6e6f69 	.word	0x3a6e6f69
   89680:	64312520 	.word	0x64312520
   89684:	00002020 	.word	0x00002020
   89688:	74756873 	.word	0x74756873
   8968c:	676e6974 	.word	0x676e6974
   89690:	776f6420 	.word	0x776f6420
   89694:	2e2e2e6e 	.word	0x2e2e2e6e
   89698:	00000000 	.word	0x00000000
   8969c:	666e6f63 	.word	0x666e6f63
   896a0:	206d7269 	.word	0x206d7269
   896a4:	74756873 	.word	0x74756873
   896a8:	6e776f64 	.word	0x6e776f64
   896ac:	0000003f 	.word	0x0000003f
   896b0:	20202020 	.word	0x20202020
   896b4:	534f6f6e 	.word	0x534f6f6e
   896b8:	454e4f20 	.word	0x454e4f20
   896bc:	00000000 	.word	0x00000000
   896c0:	74614d20 	.word	0x74614d20
   896c4:	00006863 	.word	0x00006863
   896c8:	6e655320 	.word	0x6e655320
   896cc:	73726f73 	.word	0x73726f73
   896d0:	00000000 	.word	0x00000000
   896d4:	74655320 	.word	0x74655320
   896d8:	676e6974 	.word	0x676e6974
   896dc:	00000073 	.word	0x00000073
   896e0:	000896b0 	.word	0x000896b0
   896e4:	000896c0 	.word	0x000896c0
   896e8:	000896c8 	.word	0x000896c8
   896ec:	000896d4 	.word	0x000896d4
   896f0:	6c614220 	.word	0x6c614220
   896f4:	0000006c 	.word	0x0000006c
   896f8:	6d6f4320 	.word	0x6d6f4320
   896fc:	73736170 	.word	0x73736170
   89700:	00000000 	.word	0x00000000
   89704:	6e694c20 	.word	0x6e694c20
   89708:	00000065 	.word	0x00000065
   8970c:	00000020 	.word	0x00000020
   89710:	000896f0 	.word	0x000896f0
   89714:	000896f8 	.word	0x000896f8
   89718:	00089704 	.word	0x00089704
   8971c:	0008970c 	.word	0x0008970c
   89720:	0008970c 	.word	0x0008970c
   89724:	0008970c 	.word	0x0008970c
   89728:	0008970c 	.word	0x0008970c
   8972c:	0008970c 	.word	0x0008970c
   89730:	0000003e 	.word	0x0000003e
   89734:	25753325 	.word	0x25753325
   89738:	00000025 	.word	0x00000025
   8973c:	75322520 	.word	0x75322520
   89740:	00002525 	.word	0x00002525
   89744:	31252020 	.word	0x31252020
   89748:	00252575 	.word	0x00252575
   8974c:	746f6f62 	.word	0x746f6f62
   89750:	20676e69 	.word	0x20676e69
   89754:	534f6f6e 	.word	0x534f6f6e
   89758:	00202020 	.word	0x00202020
   8975c:	0000002e 	.word	0x0000002e

00089760 <_global_impure_ptr>:
   89760:	200701a8 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   89770:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   89780:	46454443 00000000 33323130 37363534     CDEF....01234567
   89790:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   897a0:	0000296c 00000030                       l)..0...

000897a8 <blanks.7223>:
   897a8:	20202020 20202020 20202020 20202020                     

000897b8 <zeroes.7224>:
   897b8:	30303030 30303030 30303030 30303030     0000000000000000
   897c8:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

000897d8 <__mprec_bigtens>:
   897d8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   897e8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   897f8:	7f73bf3c 75154fdd                       <.s..O.u

00089800 <__mprec_tens>:
   89800:	00000000 3ff00000 00000000 40240000     .......?......$@
   89810:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   89820:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   89830:	00000000 412e8480 00000000 416312d0     .......A......cA
   89840:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   89850:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   89860:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   89870:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   89880:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   89890:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   898a0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   898b0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   898c0:	79d99db4 44ea7843                       ...yCx.D

000898c8 <p05.6055>:
   898c8:	00000005 00000019 0000007d 00000043     ........}...C...
   898d8:	49534f50 00000058 0000002e              POSIX.......

000898e4 <_ctype_>:
   898e4:	20202000 20202020 28282020 20282828     .         ((((( 
   898f4:	20202020 20202020 20202020 20202020                     
   89904:	10108820 10101010 10101010 10101010      ...............
   89914:	04040410 04040404 10040404 10101010     ................
   89924:	41411010 41414141 01010101 01010101     ..AAAAAA........
   89934:	01010101 01010101 01010101 10101010     ................
   89944:	42421010 42424242 02020202 02020202     ..BBBBBB........
   89954:	02020202 02020202 02020202 10101010     ................
   89964:	00000020 00000000 00000000 00000000      ...............
	...

000899e8 <_init>:
   899e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   899ea:	bf00      	nop
   899ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
   899ee:	bc08      	pop	{r3}
   899f0:	469e      	mov	lr, r3
   899f2:	4770      	bx	lr

000899f4 <__init_array_start>:
   899f4:	00086b99 	.word	0x00086b99

000899f8 <__frame_dummy_init_array_entry>:
   899f8:	00080119                                ....

000899fc <_fini>:
   899fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   899fe:	bf00      	nop
   89a00:	bcf8      	pop	{r3, r4, r5, r6, r7}
   89a02:	bc08      	pop	{r3}
   89a04:	469e      	mov	lr, r3
   89a06:	4770      	bx	lr

00089a08 <__fini_array_start>:
   89a08:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
20070000:	b480      	push	{r7}
20070002:	af00      	add	r7, sp, #0
20070004:	4b2a      	ldr	r3, [pc, #168]	; (200700b0 <SystemInit+0xb0>)
20070006:	f44f 6280 	mov.w	r2, #1024	; 0x400
2007000a:	601a      	str	r2, [r3, #0]
2007000c:	4b29      	ldr	r3, [pc, #164]	; (200700b4 <SystemInit+0xb4>)
2007000e:	f44f 6280 	mov.w	r2, #1024	; 0x400
20070012:	601a      	str	r2, [r3, #0]
20070014:	4b28      	ldr	r3, [pc, #160]	; (200700b8 <SystemInit+0xb8>)
20070016:	6a1b      	ldr	r3, [r3, #32]
20070018:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
2007001c:	2b00      	cmp	r3, #0
2007001e:	d109      	bne.n	20070034 <SystemInit+0x34>
20070020:	4b25      	ldr	r3, [pc, #148]	; (200700b8 <SystemInit+0xb8>)
20070022:	4a26      	ldr	r2, [pc, #152]	; (200700bc <SystemInit+0xbc>)
20070024:	621a      	str	r2, [r3, #32]
20070026:	bf00      	nop
20070028:	4b23      	ldr	r3, [pc, #140]	; (200700b8 <SystemInit+0xb8>)
2007002a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007002c:	f003 0301 	and.w	r3, r3, #1
20070030:	2b00      	cmp	r3, #0
20070032:	d0f9      	beq.n	20070028 <SystemInit+0x28>
20070034:	4b20      	ldr	r3, [pc, #128]	; (200700b8 <SystemInit+0xb8>)
20070036:	4a22      	ldr	r2, [pc, #136]	; (200700c0 <SystemInit+0xc0>)
20070038:	621a      	str	r2, [r3, #32]
2007003a:	bf00      	nop
2007003c:	4b1e      	ldr	r3, [pc, #120]	; (200700b8 <SystemInit+0xb8>)
2007003e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070040:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
20070044:	2b00      	cmp	r3, #0
20070046:	d0f9      	beq.n	2007003c <SystemInit+0x3c>
20070048:	4a1b      	ldr	r2, [pc, #108]	; (200700b8 <SystemInit+0xb8>)
2007004a:	4b1b      	ldr	r3, [pc, #108]	; (200700b8 <SystemInit+0xb8>)
2007004c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
2007004e:	f023 0303 	bic.w	r3, r3, #3
20070052:	f043 0301 	orr.w	r3, r3, #1
20070056:	6313      	str	r3, [r2, #48]	; 0x30
20070058:	bf00      	nop
2007005a:	4b17      	ldr	r3, [pc, #92]	; (200700b8 <SystemInit+0xb8>)
2007005c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007005e:	f003 0308 	and.w	r3, r3, #8
20070062:	2b00      	cmp	r3, #0
20070064:	d0f9      	beq.n	2007005a <SystemInit+0x5a>
20070066:	4b14      	ldr	r3, [pc, #80]	; (200700b8 <SystemInit+0xb8>)
20070068:	4a16      	ldr	r2, [pc, #88]	; (200700c4 <SystemInit+0xc4>)
2007006a:	629a      	str	r2, [r3, #40]	; 0x28
2007006c:	bf00      	nop
2007006e:	4b12      	ldr	r3, [pc, #72]	; (200700b8 <SystemInit+0xb8>)
20070070:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070072:	f003 0302 	and.w	r3, r3, #2
20070076:	2b00      	cmp	r3, #0
20070078:	d0f9      	beq.n	2007006e <SystemInit+0x6e>
2007007a:	4b0f      	ldr	r3, [pc, #60]	; (200700b8 <SystemInit+0xb8>)
2007007c:	2211      	movs	r2, #17
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
20070080:	bf00      	nop
20070082:	4b0d      	ldr	r3, [pc, #52]	; (200700b8 <SystemInit+0xb8>)
20070084:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070086:	f003 0308 	and.w	r3, r3, #8
2007008a:	2b00      	cmp	r3, #0
2007008c:	d0f9      	beq.n	20070082 <SystemInit+0x82>
2007008e:	4b0a      	ldr	r3, [pc, #40]	; (200700b8 <SystemInit+0xb8>)
20070090:	2212      	movs	r2, #18
20070092:	631a      	str	r2, [r3, #48]	; 0x30
20070094:	bf00      	nop
20070096:	4b08      	ldr	r3, [pc, #32]	; (200700b8 <SystemInit+0xb8>)
20070098:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007009a:	f003 0308 	and.w	r3, r3, #8
2007009e:	2b00      	cmp	r3, #0
200700a0:	d0f9      	beq.n	20070096 <SystemInit+0x96>
200700a2:	4b09      	ldr	r3, [pc, #36]	; (200700c8 <SystemInit+0xc8>)
200700a4:	4a09      	ldr	r2, [pc, #36]	; (200700cc <SystemInit+0xcc>)
200700a6:	601a      	str	r2, [r3, #0]
200700a8:	bf00      	nop
200700aa:	46bd      	mov	sp, r7
200700ac:	bc80      	pop	{r7}
200700ae:	4770      	bx	lr
200700b0:	400e0a00 	.word	0x400e0a00
200700b4:	400e0c00 	.word	0x400e0c00
200700b8:	400e0600 	.word	0x400e0600
200700bc:	00370809 	.word	0x00370809
200700c0:	01370809 	.word	0x01370809
200700c4:	200d3f01 	.word	0x200d3f01
200700c8:	2007019c 	.word	0x2007019c
200700cc:	0501bd00 	.word	0x0501bd00

200700d0 <system_init_flash>:
200700d0:	b480      	push	{r7}
200700d2:	b083      	sub	sp, #12
200700d4:	af00      	add	r7, sp, #0
200700d6:	6078      	str	r0, [r7, #4]
200700d8:	687b      	ldr	r3, [r7, #4]
200700da:	4a25      	ldr	r2, [pc, #148]	; (20070170 <system_init_flash+0xa0>)
200700dc:	4293      	cmp	r3, r2
200700de:	d806      	bhi.n	200700ee <system_init_flash+0x1e>
200700e0:	4b24      	ldr	r3, [pc, #144]	; (20070174 <system_init_flash+0xa4>)
200700e2:	2200      	movs	r2, #0
200700e4:	601a      	str	r2, [r3, #0]
200700e6:	4b24      	ldr	r3, [pc, #144]	; (20070178 <system_init_flash+0xa8>)
200700e8:	2200      	movs	r2, #0
200700ea:	601a      	str	r2, [r3, #0]
200700ec:	e03b      	b.n	20070166 <system_init_flash+0x96>
200700ee:	687b      	ldr	r3, [r7, #4]
200700f0:	4a22      	ldr	r2, [pc, #136]	; (2007017c <system_init_flash+0xac>)
200700f2:	4293      	cmp	r3, r2
200700f4:	d808      	bhi.n	20070108 <system_init_flash+0x38>
200700f6:	4b1f      	ldr	r3, [pc, #124]	; (20070174 <system_init_flash+0xa4>)
200700f8:	f44f 7280 	mov.w	r2, #256	; 0x100
200700fc:	601a      	str	r2, [r3, #0]
200700fe:	4b1e      	ldr	r3, [pc, #120]	; (20070178 <system_init_flash+0xa8>)
20070100:	f44f 7280 	mov.w	r2, #256	; 0x100
20070104:	601a      	str	r2, [r3, #0]
20070106:	e02e      	b.n	20070166 <system_init_flash+0x96>
20070108:	687b      	ldr	r3, [r7, #4]
2007010a:	4a1d      	ldr	r2, [pc, #116]	; (20070180 <system_init_flash+0xb0>)
2007010c:	4293      	cmp	r3, r2
2007010e:	d808      	bhi.n	20070122 <system_init_flash+0x52>
20070110:	4b18      	ldr	r3, [pc, #96]	; (20070174 <system_init_flash+0xa4>)
20070112:	f44f 7200 	mov.w	r2, #512	; 0x200
20070116:	601a      	str	r2, [r3, #0]
20070118:	4b17      	ldr	r3, [pc, #92]	; (20070178 <system_init_flash+0xa8>)
2007011a:	f44f 7200 	mov.w	r2, #512	; 0x200
2007011e:	601a      	str	r2, [r3, #0]
20070120:	e021      	b.n	20070166 <system_init_flash+0x96>
20070122:	687b      	ldr	r3, [r7, #4]
20070124:	4a17      	ldr	r2, [pc, #92]	; (20070184 <system_init_flash+0xb4>)
20070126:	4293      	cmp	r3, r2
20070128:	d808      	bhi.n	2007013c <system_init_flash+0x6c>
2007012a:	4b12      	ldr	r3, [pc, #72]	; (20070174 <system_init_flash+0xa4>)
2007012c:	f44f 7240 	mov.w	r2, #768	; 0x300
20070130:	601a      	str	r2, [r3, #0]
20070132:	4b11      	ldr	r3, [pc, #68]	; (20070178 <system_init_flash+0xa8>)
20070134:	f44f 7240 	mov.w	r2, #768	; 0x300
20070138:	601a      	str	r2, [r3, #0]
2007013a:	e014      	b.n	20070166 <system_init_flash+0x96>
2007013c:	687b      	ldr	r3, [r7, #4]
2007013e:	4a12      	ldr	r2, [pc, #72]	; (20070188 <system_init_flash+0xb8>)
20070140:	4293      	cmp	r3, r2
20070142:	d808      	bhi.n	20070156 <system_init_flash+0x86>
20070144:	4b0b      	ldr	r3, [pc, #44]	; (20070174 <system_init_flash+0xa4>)
20070146:	f44f 6280 	mov.w	r2, #1024	; 0x400
2007014a:	601a      	str	r2, [r3, #0]
2007014c:	4b0a      	ldr	r3, [pc, #40]	; (20070178 <system_init_flash+0xa8>)
2007014e:	f44f 6280 	mov.w	r2, #1024	; 0x400
20070152:	601a      	str	r2, [r3, #0]
20070154:	e007      	b.n	20070166 <system_init_flash+0x96>
20070156:	4b07      	ldr	r3, [pc, #28]	; (20070174 <system_init_flash+0xa4>)
20070158:	f44f 62a0 	mov.w	r2, #1280	; 0x500
2007015c:	601a      	str	r2, [r3, #0]
2007015e:	4b06      	ldr	r3, [pc, #24]	; (20070178 <system_init_flash+0xa8>)
20070160:	f44f 62a0 	mov.w	r2, #1280	; 0x500
20070164:	601a      	str	r2, [r3, #0]
20070166:	bf00      	nop
20070168:	370c      	adds	r7, #12
2007016a:	46bd      	mov	sp, r7
2007016c:	bc80      	pop	{r7}
2007016e:	4770      	bx	lr
20070170:	0121eabf 	.word	0x0121eabf
20070174:	400e0a00 	.word	0x400e0a00
20070178:	400e0c00 	.word	0x400e0c00
2007017c:	02faf07f 	.word	0x02faf07f
20070180:	03d08fff 	.word	0x03d08fff
20070184:	04c4b3ff 	.word	0x04c4b3ff
20070188:	055d4a7f 	.word	0x055d4a7f

2007018c <print_menu>:
2007018c:	00000101                                         .

2007018d <allow_leds>:
2007018d:	02000001                                         ...

20070190 <menu_info>:
20070190:	04020202 03010101 01010101              ............

2007019c <SystemCoreClock>:
2007019c:	003d0900                                ..=.

200701a0 <update_dots>:
200701a0:	00000001                                ....

200701a4 <_impure_ptr>:
200701a4:	200701a8                                ... 

200701a8 <impure_data>:
200701a8:	00000000 20070494 200704fc 20070564     ....... ... d.. 
	...
20070250:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070260:	0005deec 0000000b 00000000 00000000     ................
	...

200705d0 <__atexit_recursive_mutex>:
200705d0:	20070ff0                                ... 

200705d4 <__malloc_av_>:
	...
200705dc:	200705d4 200705d4 200705dc 200705dc     ... ... ... ... 
200705ec:	200705e4 200705e4 200705ec 200705ec     ... ... ... ... 
200705fc:	200705f4 200705f4 200705fc 200705fc     ... ... ... ... 
2007060c:	20070604 20070604 2007060c 2007060c     ... ... ... ... 
2007061c:	20070614 20070614 2007061c 2007061c     ... ... ... ... 
2007062c:	20070624 20070624 2007062c 2007062c     $.. $.. ,.. ,.. 
2007063c:	20070634 20070634 2007063c 2007063c     4.. 4.. <.. <.. 
2007064c:	20070644 20070644 2007064c 2007064c     D.. D.. L.. L.. 
2007065c:	20070654 20070654 2007065c 2007065c     T.. T.. \.. \.. 
2007066c:	20070664 20070664 2007066c 2007066c     d.. d.. l.. l.. 
2007067c:	20070674 20070674 2007067c 2007067c     t.. t.. |.. |.. 
2007068c:	20070684 20070684 2007068c 2007068c     ... ... ... ... 
2007069c:	20070694 20070694 2007069c 2007069c     ... ... ... ... 
200706ac:	200706a4 200706a4 200706ac 200706ac     ... ... ... ... 
200706bc:	200706b4 200706b4 200706bc 200706bc     ... ... ... ... 
200706cc:	200706c4 200706c4 200706cc 200706cc     ... ... ... ... 
200706dc:	200706d4 200706d4 200706dc 200706dc     ... ... ... ... 
200706ec:	200706e4 200706e4 200706ec 200706ec     ... ... ... ... 
200706fc:	200706f4 200706f4 200706fc 200706fc     ... ... ... ... 
2007070c:	20070704 20070704 2007070c 2007070c     ... ... ... ... 
2007071c:	20070714 20070714 2007071c 2007071c     ... ... ... ... 
2007072c:	20070724 20070724 2007072c 2007072c     $.. $.. ,.. ,.. 
2007073c:	20070734 20070734 2007073c 2007073c     4.. 4.. <.. <.. 
2007074c:	20070744 20070744 2007074c 2007074c     D.. D.. L.. L.. 
2007075c:	20070754 20070754 2007075c 2007075c     T.. T.. \.. \.. 
2007076c:	20070764 20070764 2007076c 2007076c     d.. d.. l.. l.. 
2007077c:	20070774 20070774 2007077c 2007077c     t.. t.. |.. |.. 
2007078c:	20070784 20070784 2007078c 2007078c     ... ... ... ... 
2007079c:	20070794 20070794 2007079c 2007079c     ... ... ... ... 
200707ac:	200707a4 200707a4 200707ac 200707ac     ... ... ... ... 
200707bc:	200707b4 200707b4 200707bc 200707bc     ... ... ... ... 
200707cc:	200707c4 200707c4 200707cc 200707cc     ... ... ... ... 
200707dc:	200707d4 200707d4 200707dc 200707dc     ... ... ... ... 
200707ec:	200707e4 200707e4 200707ec 200707ec     ... ... ... ... 
200707fc:	200707f4 200707f4 200707fc 200707fc     ... ... ... ... 
2007080c:	20070804 20070804 2007080c 2007080c     ... ... ... ... 
2007081c:	20070814 20070814 2007081c 2007081c     ... ... ... ... 
2007082c:	20070824 20070824 2007082c 2007082c     $.. $.. ,.. ,.. 
2007083c:	20070834 20070834 2007083c 2007083c     4.. 4.. <.. <.. 
2007084c:	20070844 20070844 2007084c 2007084c     D.. D.. L.. L.. 
2007085c:	20070854 20070854 2007085c 2007085c     T.. T.. \.. \.. 
2007086c:	20070864 20070864 2007086c 2007086c     d.. d.. l.. l.. 
2007087c:	20070874 20070874 2007087c 2007087c     t.. t.. |.. |.. 
2007088c:	20070884 20070884 2007088c 2007088c     ... ... ... ... 
2007089c:	20070894 20070894 2007089c 2007089c     ... ... ... ... 
200708ac:	200708a4 200708a4 200708ac 200708ac     ... ... ... ... 
200708bc:	200708b4 200708b4 200708bc 200708bc     ... ... ... ... 
200708cc:	200708c4 200708c4 200708cc 200708cc     ... ... ... ... 
200708dc:	200708d4 200708d4 200708dc 200708dc     ... ... ... ... 
200708ec:	200708e4 200708e4 200708ec 200708ec     ... ... ... ... 
200708fc:	200708f4 200708f4 200708fc 200708fc     ... ... ... ... 
2007090c:	20070904 20070904 2007090c 2007090c     ... ... ... ... 
2007091c:	20070914 20070914 2007091c 2007091c     ... ... ... ... 
2007092c:	20070924 20070924 2007092c 2007092c     $.. $.. ,.. ,.. 
2007093c:	20070934 20070934 2007093c 2007093c     4.. 4.. <.. <.. 
2007094c:	20070944 20070944 2007094c 2007094c     D.. D.. L.. L.. 
2007095c:	20070954 20070954 2007095c 2007095c     T.. T.. \.. \.. 
2007096c:	20070964 20070964 2007096c 2007096c     d.. d.. l.. l.. 
2007097c:	20070974 20070974 2007097c 2007097c     t.. t.. |.. |.. 
2007098c:	20070984 20070984 2007098c 2007098c     ... ... ... ... 
2007099c:	20070994 20070994 2007099c 2007099c     ... ... ... ... 
200709ac:	200709a4 200709a4 200709ac 200709ac     ... ... ... ... 
200709bc:	200709b4 200709b4 200709bc 200709bc     ... ... ... ... 
200709cc:	200709c4 200709c4 200709cc 200709cc     ... ... ... ... 

200709dc <__malloc_sbrk_base>:
200709dc:	ffffffff                                ....

200709e0 <__malloc_trim_threshold>:
200709e0:	00020000                                ....

200709e4 <__global_locale>:
200709e4:	00000043 00000000 00000000 00000000     C...............
	...
20070a04:	00000043 00000000 00000000 00000000     C...............
	...
20070a24:	00000043 00000000 00000000 00000000     C...............
	...
20070a44:	00000043 00000000 00000000 00000000     C...............
	...
20070a64:	00000043 00000000 00000000 00000000     C...............
	...
20070a84:	00000043 00000000 00000000 00000000     C...............
	...
20070aa4:	00000043 00000000 00000000 00000000     C...............
	...
20070ac4:	00089159 00088cf9 00000000 000898e4     Y...............
20070ad4:	000898e0 00089784 00089784 00089784     ................
20070ae4:	00089784 00089784 00089784 00089784     ................
20070af4:	00089784 00089784 ffffffff ffffffff     ................
20070b04:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20070b2c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...
